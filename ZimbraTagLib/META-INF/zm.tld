<?xml version="1.0" encoding="UTF-8" ?>
<taglib xmlns="http://java.sun.com/xml/ns/j2ee"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-jsptaglibrary_2_0.xsd"
        version="2.0">

    <description>Contains tags and functions for interacting with the Zimbra Collaboration Suite.</description>
    <tlib-version>1.0</tlib-version>

    <short-name>zm</short-name>
    <uri>com.zimbra.zm</uri>

    <tag>
        <description>sends a message</description>
        <name>sendMessage</name>
        <tag-class>com.zimbra.cs.taglib.tag.SendMessageTag</tag-class>
        <body-content>empty</body-content>        
        <variable>
            <name-from-attribute>var</name-from-attribute>
            <variable-class>com.zimbra.client.ZMailbox.ZSendMessageResponse</variable-class>
            <scope>AT_END</scope>
        </variable>
        <attribute>
            <description>
                Name of the exported scoped variable for the result.
            </description>
            <name>var</name>
            <required>true</required>
        </attribute>
        <attribute>
             <description>
                 message compose bean to use. all other args are ignored.
             </description>
             <name>compose</name>
             <required>false</required>
             <rtexprvalue>true</rtexprvalue>
             <type>com.zimbra.cs.taglib.bean.ZMessageComposeBean</type>
         </attribute>
        <attribute>
            <description>
                value of To addresses
            </description>
            <name>to</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                value of Reply-To address
            </description>
            <name>replyto</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                comma-separated list of message ids to attach at server
            </description>
            <name>messages</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                comma-separated list of attachment part names (from message messageid) to attach at server
            </description>
            <name>attachments</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                value of Cc addresses
            </description>
            <name>cc</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                value of Bcc addresses
            </description>
            <name>bcc</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                value of From address
            </description>
            <name>from</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                value of subject
            </description>
            <name>subject</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                value of content-type
            </description>
            <name>contenttype</name>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                value of original message-id header
            </description>
            <name>inreplyto</name>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                Zimbra message id of message we are replying/forwarding to
            </description>
            <name>messageid</name>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                reply type (r = reply, w = forward)
            </description>
            <name>replytype</name>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                value of content
            </description>
            <name>content</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
    </tag>

    <tag>
        <description>sends an invite reply</description>
        <name>sendInviteReply</name>
        <tag-class>com.zimbra.cs.taglib.tag.SendInviteReplyTag</tag-class>
        <body-content>empty</body-content>
        <variable>
            <name-from-attribute>var</name-from-attribute>
            <variable-class>com.zimbra.client.ZMailbox.ZSendInviteReplyResult</variable-class>
            <scope>AT_END</scope>
        </variable>
        <attribute>
            <description>
                Name of the exported scoped variable for the result.
            </description>
            <name>var</name>
            <required>true</required>
        </attribute>
        <attribute>
             <description>
                 message compose bean to use. all other args are ignored.
             </description>
             <name>compose</name>
             <required>false</required>
             <rtexprvalue>true</rtexprvalue>
             <type>com.zimbra.cs.taglib.bean.ZMessageComposeBean</type>
        </attribute>
    </tag>

    <tag>
        <description>save a draft message</description>
        <name>saveDraft</name>
        <tag-class>com.zimbra.cs.taglib.tag.SaveDraftTag</tag-class>
        <body-content>empty</body-content>
        <variable>
            <name-from-attribute>var</name-from-attribute>
            <variable-class>com.zimbra.client.ZMessage</variable-class>
            <scope>AT_END</scope>
        </variable>
        <attribute>
            <description>
                Name of the exported scoped variable for the result.
            </description>
            <name>var</name>
            <required>true</required>
        </attribute>
        <attribute>
             <description>
                 message compose bean to use. all other args are ignored.
             </description>
             <name>compose</name>
             <required>false</required>
             <rtexprvalue>true</rtexprvalue>
             <type>com.zimbra.cs.taglib.bean.ZMessageComposeBean</type>
         </attribute>        
        <attribute>
            <description>
                value of To addresses
            </description>
            <name>to</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                value of Reply-To address
            </description>
            <name>replyto</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                comma-separated list of message ids to attach at server
            </description>
            <name>messages</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                comma-separated list of attachment part names (from message messageid) to attach at server
            </description>
            <name>attachments</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                Attachment upload id
            </description>
            <name>attachmentuploadid</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                value of Cc addresses
            </description>
            <name>cc</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                value of Bcc addresses
            </description>
            <name>bcc</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                value of From address
            </description>
            <name>from</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                value of subject
            </description>
            <name>subject</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                value of content-type
            </description>
            <name>contenttype</name>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                value of original message-id header
            </description>
            <name>inreplyto</name>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                Zimbra message id of message we are replying/forwarding to
            </description>
            <name>messageid</name>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                reply type (r = reply, w = forward)
            </description>
            <name>replytype</name>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                value of content
            </description>
            <name>content</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                existing draft id, if updating
            </description>
            <name>draftid</name>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
               optional folder id to save draft in
            </description>
            <name>folderid</name>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
    </tag>

    <tag>
         <description>compute data need to reply-to/forward a message</description>
         <name>messageCompose</name>
         <tag-class>com.zimbra.cs.taglib.tag.MessageComposeTag</tag-class>
         <body-content>empty</body-content>
         <variable>
             <name-from-attribute>var</name-from-attribute>
             <variable-class>com.zimbra.cs.taglib.bean.ZMessageComposeBean</variable-class>
             <scope>AT_END</scope>
         </variable>
         <attribute>
             <description>
                 Name of the exported scoped variable for the result.
             </description>
             <name>var</name>
             <required>true</required>
         </attribute>
         <attribute>
             <description>
                 message being acted on
             </description>
             <name>message</name>
             <required>true</required>
             <rtexprvalue>true</rtexprvalue>
             <type>com.zimbra.cs.taglib.bean.ZMessageBean</type>
         </attribute>
        <attribute>
             <description>
                 date for new appointments
             </description>
             <name>date</name>
             <required>false</required>
             <rtexprvalue>true</rtexprvalue>
             <type>java.util.Calendar</type>
         </attribute>
         <attribute>
             <description>
                 action (reply/replyAll/forward/new/draft/apptedit/apptnew)
             </description>
             <name>action</name>
             <required>true</required>
             <rtexprvalue>true</rtexprvalue>
             <type>java.lang.String</type>
         </attribute>

        <attribute>
            <description>
                invite id if editing appt
            </description>
            <name>inviteId</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        
        <attribute>
            <description>
                exception invite id if editing exception
            </description>
            <name>exceptionInviteId</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>

        <attribute>
            <description>
                true if we are editing an instance instead of the series
            </description>
            <name>useInstance</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>boolean</type>
        </attribute>

        <attribute>
            <description>
                true if we are editing a task
            </description>
            <name>istask</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>boolean</type>
        </attribute>

        <attribute>
            <description>
                a particular instance's start time in UTC
            </description>
            <name>instanceStartTime</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>

        <attribute>
             <description>
                 a particular instance's duration
             </description>
             <name>instanceDuration</name>
             <required>false</required>
             <rtexprvalue>true</rtexprvalue>
        </attribute>

        <attribute>
             <description>
                 true if the request is coming from the mobile interface
             </description>
             <name>ismobile</name>
             <required>false</required>
             <rtexprvalue>true</rtexprvalue>
        </attribute>
    </tag>

	<tag>
		<description>
			Check document spelling
		</description>

		<name>checkSpelling</name>

		<tag-class>com.zimbra.cs.taglib.tag.CheckSpellingTag</tag-class>

		<body-content>empty</body-content>

		<attribute>
			<description>text</description>
			<name>text</name>
			<required>true</required>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
	</tag>

    <tag>
         <description>use uploaded form data with message containing attachments to fix up the compose object</description>
         <name>fixupMessageCompose</name>
         <tag-class>com.zimbra.cs.taglib.tag.FixupMessageComposeTag</tag-class>
         <body-content>empty</body-content>
         <attribute>
             <description>
                 message being acted on
             </description>
             <name>message</name>
             <required>true</required>
             <rtexprvalue>true</rtexprvalue>
             <type>com.zimbra.cs.taglib.bean.ZMessageBean</type>
         </attribute>
         <attribute>
             <description>
                 compose object being acted on
             </description>
             <name>compose</name>
             <required>true</required>
             <rtexprvalue>true</rtexprvalue>
             <type>com.zimbra.cs.taglib.bean.ZMessageComposeBean</type>
         </attribute>
         <attribute>
             <description>
                 true if attachments were just added (so they get checked by default)
             </description>
             <name>newattachments</name>
             <required>true</required>
             <rtexprvalue>true</rtexprvalue>
             <type>boolean</type>
         </attribute>
     </tag>

    <tag>
        <description>compute data need to reply-to/forward a message</description>
        <name>composeUploader</name>
        <tag-class>com.zimbra.cs.taglib.tag.ComposeUploaderTag</tag-class>
        <body-content>empty</body-content>
        <variable>
            <name-from-attribute>var</name-from-attribute>
            <variable-class>com.zimbra.cs.taglib.bean.ZComposeUploaderBean</variable-class>
            <scope>AT_END</scope>
        </variable>
        <attribute>
            <description>
                Name of the exported scoped variable for the result.
            </description>
            <name>var</name>
            <required>true</required>
        </attribute>
    </tag>

    <tag>
        <description>construct a file uploader bean</description>
        <name>fileUploader</name>
        <tag-class>com.zimbra.cs.taglib.tag.FileUploaderTag</tag-class>
        <body-content>empty</body-content>
        <variable>
            <name-from-attribute>var</name-from-attribute>
            <variable-class>com.zimbra.cs.taglib.bean.ZFileUploaderBean</variable-class>
            <scope>AT_END</scope>
        </variable>
        <attribute>
            <description>
                Name of the exported scoped variable for the result.
            </description>
            <name>var</name>
            <required>true</required>
        </attribute>
    </tag>

    <tag>
        <description>
            Iterates over all mailbox tags.
        </description>
        <name>forEachTag</name>
        <tag-class>com.zimbra.cs.taglib.tag.ForEachTagTag</tag-class>
        <body-content>scriptless</body-content>
        <variable>
            <name-from-attribute>var</name-from-attribute>
            <variable-class>com.zimbra.cs.taglib.bean.ZTagBean</variable-class>
            <scope>NESTED</scope>
        </variable>
        <attribute>
            <description>
                Name of the exported scoped variable for the
                current item of the iteration.
            </description>
            <name>var</name>
            <required>true</required>
        </attribute>

    </tag>

    <tag>
        <description>
            Iterates over all signatures.
        </description>
        <name>forEachSignature</name>
        <tag-class>com.zimbra.cs.taglib.tag.signature.ForEachSignatureTag</tag-class>
        <body-content>scriptless</body-content>
        <variable>
            <name-from-attribute>var</name-from-attribute>
            <variable-class>com.zimbra.client.ZSignature</variable-class>
            <scope>NESTED</scope>
        </variable>
        <attribute>
            <description>
                Name of the exported scoped variable for the
                current item of the iteration.
            </description>
            <name>var</name>
            <required>true</required>
        </attribute>
        <attribute>
            <description>
                whether or not to refresh set of signatures.
            </description>
            <name>refresh</name>
            <required>false</required>
        </attribute>
    </tag>

    <tag>
        <description>
            Create a signature
        </description>

        <name>createSiganture</name>

        <tag-class>com.zimbra.cs.taglib.tag.signature.CreateSignatureTag</tag-class>

        <body-content>empty</body-content>

        <variable>
            <name-from-attribute>var</name-from-attribute>
            <variable-class>java.lang.String</variable-class>
            <scope>AT_BEGIN</scope>
        </variable>

        <attribute>
            <description>
                id of created signature.
            </description>
            <name>var</name>
            <required>true</required>
        </attribute>
        <attribute>
            <description>name of siganture to create</description>
            <name>name</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>value of signature</description>
            <name>value</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>type of signature</description>
            <name>type</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
    </tag>

    <tag>
        <description>
            Modify a signature
        </description>

        <name>modifySiganture</name>

        <tag-class>com.zimbra.cs.taglib.tag.signature.ModifySignatureTag</tag-class>

        <body-content>empty</body-content>

        <attribute>
            <description>
                id of signature to modify.
            </description>
            <name>id</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
        <attribute>
            <description>name of siganture</description>
            <name>name</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>value of signature</description>
            <name>value</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>type of signature</description>
            <name>type</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
    </tag>

    <tag>
        <description>
            Delete a signature
        </description>

        <name>deleteSiganture</name>

        <tag-class>com.zimbra.cs.taglib.tag.signature.DeleteSignatureTag</tag-class>

        <body-content>empty</body-content>

        <attribute>
            <description>
                id of signature to delete.
            </description>
            <name>id</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
    </tag>

    <tag>
        <description>
            Iterates over all time zones.
        </description>
        <name>forEachTimeZone</name>
        <tag-class>com.zimbra.cs.taglib.tag.ForEachTimeZoneTag</tag-class>
        <body-content>scriptless</body-content>
        <variable>
            <name-from-attribute>var</name-from-attribute>
            <variable-class>com.zimbra.cs.taglib.bean.ZTimeZoneBean</variable-class>
            <scope>NESTED</scope>
        </variable>
        <attribute>
            <description>
                Name of the exported scoped variable for the
                current item of the iteration.
            </description>
            <name>var</name>
            <required>true</required>
        </attribute>

    </tag>

    <tag>
        <description>
            Iterates over all mailbox folders
        </description>
        <name>forEachFolder</name>
        <tag-class>com.zimbra.cs.taglib.tag.ForEachFolderTag</tag-class>
        <body-content>scriptless</body-content>
        <variable>
            <name-from-attribute>var</name-from-attribute>
            <variable-class>com.zimbra.cs.taglib.bean.ZFolderBean</variable-class>
            <scope>NESTED</scope>
        </variable>
        <attribute>
            <description>
                Name of the exported scoped variable for the
                current item of the iteration.
            </description>
            <name>var</name>
            <required>true</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                Id folder to start with.
            </description>
            <name>parentid</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                Folder to start with.
            </description>
            <name>parentfolder</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>com.zimbra.cs.taglib.bean.ZFolderBean</type>
        </attribute>
        <attribute>
            <description>
                whether or not to top-level folder. default value is true.
            </description>
            <name>skiproot</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>boolean</type>
        </attribute>
        <attribute>
            <description>
                whether or not to skip system folders. default value is false.
            </description>
            <name>skipsystem</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>boolean</type>
        </attribute>
        <attribute>
            <description>
                whether or not to skip the trash folder and its subfolders
            </description>
            <name>skiptrash</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>boolean</type>
        </attribute>
        <attribute>
            <description>
                whether or not to skip top-level search folers. default value is false.
            </description>
            <name>skiptopsearch</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>boolean</type>
        </attribute>
        <attribute>
            <description>
                Map indexed on folder ids. If value is set to "collapse", skip any sub folders, otherwise do sub folders
            </description>
            <name>expanded</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>            
            <type>java.util.Map</type>
        </attribute>
    </tag>

    <tag>
        <description>
            Iterates over all voice accounts
        </description>
        <name>forEachPhoneAccount</name>
        <tag-class>com.zimbra.cs.taglib.tag.voice.ForEachPhoneAccountTag</tag-class>
        <body-content>scriptless</body-content>
        <variable>
            <name-from-attribute>var</name-from-attribute>
            <variable-class>com.zimbra.cs.taglib.bean.ZPhoneAccountBean</variable-class>
            <scope>NESTED</scope>
        </variable>
        <attribute>
            <description>
                Name of the exported scoped variable for the
                current item of the iteration.
            </description>
            <name>var</name>
            <required>true</required>
            <type>java.lang.String</type>
        </attribute>
    </tag>

    <tag>
        <description>
            Searches.
        </description>
        <name>search</name>
        <tag-class>com.zimbra.cs.taglib.tag.SearchTag</tag-class>
        <body-content>empty</body-content>
        <variable>
            <name-from-attribute>var</name-from-attribute>
            <variable-class>com.zimbra.cs.taglib.bean.ZSearchResultBean</variable-class>
            <scope>AT_END</scope>
        </variable>
        <attribute>
            <description>
                Name of the exported scoped variable for the result.
            </description>
            <name>var</name>
            <required>true</required>
        </attribute>
        <attribute>
            <description>search query
            </description>
            <name>query</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
        <attribute>
            <description>max number of results to return</description>
            <name>limit</name>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
        <attribute>
            <description>offset to start at</description>
            <name>offset</name>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
        <attribute>
            <description>types of objects to return (conversation, message, contact,appointment)</description>
            <name>types</name>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
        <attribute>
            <description>the search operator to use for text without an operator (defaults to content)</description>
            <name>field</name>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
        <attribute>
            <description>sort order (dateDesc, dateAsc, subjDesc, subjAsc, nameDesc, nameAsc)</description>
            <name>sort</name>
            <rtexprvalue>true</rtexprvalue>
        </attribute>

        <attribute>
            <description>search context</description>
            <name>searchContext</name>
            <rtexprvalue>true</rtexprvalue>
        </attribute>

        <attribute>
            <description>conversation id to search in</description>
            <name>conv</name>
            <rtexprvalue>true</rtexprvalue>
        </attribute>

        <attribute>
            <description>mark message as read</description>
            <name>markread</name>
            <rtexprvalue>true</rtexprvalue>
        </attribute>

        <attribute>
            <description>fetch (none,first,all) messages in a search</description>
            <name>fetch</name>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>

        <attribute>
            <description>prefer HTML</description>
            <name>wanthtml</name>
            <rtexprvalue>true</rtexprvalue>
        </attribute>

        <attribute>
            <description>starting time in msecs</description>
            <name>start</name>
            <rtexprvalue>true</rtexprvalue>
        </attribute>

        <attribute>
            <description>ending time in msecs</description>
            <name>end</name>
            <rtexprvalue>true</rtexprvalue>
        </attribute>

        <attribute>
            <description>timezone to compute correct start/end time for all day appts</description>
            <name>timezone</name>
            <rtexprvalue>true</rtexprvalue>
            <type>java.util.TimeZone</type>
        </attribute>

        <attribute>
            <description>
                comma-separated list of folder ids to search in.
            </description>
            <name>folderid</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>

    </tag>

    <tag>
        <description>
            clears the search cache.
        </description>

        <name>clearSearchCache</name>

        <tag-class>com.zimbra.cs.taglib.tag.ClearSearchCacheTag</tag-class>

        <body-content>empty</body-content>

        <attribute>
            <description>
                clear only specified type
            </description>
            <name>type</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
    </tag>

    <tag>
        <description>
            Search Gal.
        </description>
        <name>searchGal</name>
        <tag-class>com.zimbra.cs.taglib.tag.SearchGalTag</tag-class>
        <body-content>empty</body-content>
        <variable>
            <name-from-attribute>var</name-from-attribute>
            <variable-class>com.zimbra.cs.taglib.bean.ZSearchGalResultBean</variable-class>
            <scope>AT_END</scope>
        </variable>
        <attribute>
            <description>
                Name of the exported scoped variable for the result.
            </description>
            <name>var</name>
            <required>true</required>
        </attribute>
        <attribute>
            <description>search query
            </description>
            <name>query</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
        <attribute>
            <description>department name
            </description>
            <name>dept</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
        <attribute>
            <description>email address
            </description>
            <name>email</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
        <attribute>
            <description>type of objects to return (account, resource, all)</description>
            <name>type</name>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
    </tag>

    <tag>
        <description>
            Throw a ZTagLibException
        </description>
        <name>tagLibException</name>
        <tag-class>com.zimbra.cs.taglib.tag.TagLibExceptionTag</tag-class>
        <body-content>empty</body-content>
        <attribute>
            <description>
               exception code
            </description>
            <name>code</name>
            <required>true</required>
        </attribute>
        <attribute>
            <description>exception message
            </description>
            <name>message</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
    </tag>

    <tag>
        <description>
            login tag. Does an AuthRequest and establishes session/cookie. Either username/password or
            authtoken must be specified.
        </description>
        <name>login</name>
        <tag-class>com.zimbra.cs.taglib.tag.LoginTag</tag-class>
        <body-content>empty</body-content>
        <variable>
            <name-from-attribute>varRedirectUrl</name-from-attribute>
            <variable-class>java.lang.String</variable-class>
            <scope>AT_END</scope>
        </variable>
        <variable>
            <name-from-attribute>varAuthResult</name-from-attribute>
            <variable-class>com.zimbra.client.ZAuthResult</variable-class>
            <scope>AT_END</scope>
        </variable>
        <attribute>
            <description>
                Username
            </description>
            <name>username</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
        <attribute>
            <description>
                Password
            </description>
            <name>password</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
        <attribute>
            <description>
                pre-existing auth token
            </description>
            <name>authtoken</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
        <attribute>
            <description>
                true if authtoken came from URL
            </description>
            <name>authtokenInUrl</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
        <attribute>
            <description>
                url client should redirect to if value is not empty
            </description>
            <name>varRedirectUrl</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
        <attribute>
            <description>
                variable to store ZAuthResult in.
            </description>
            <name>varAuthResult</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
        <attribute>
            <description>
                New password
            </description>
            <name>newpassword</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
        <attribute>
            <description>
                remember me
            </description>
            <name>rememberme</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
        <attribute>
            <description>
                import data
            </description>
            <name>importData</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
        <attribute>
            <description>
                Is admin login
            </description>
            <name>adminPreAuth</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
        <attribute>
            <description>
                URL
            </description>
            <name>url</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
        <attribute>
            <description>
                Comma-separated list of prefs to fetch during login.
            </description>
            <name>prefs</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
        <attribute>
            <description>
                Comma-separated list of attrs to fetch during login.
            </description>
            <name>attrs</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
        <attribute>
            <description>
                Skin requested in query string
            </description>
            <name>requestedSkin</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
    </tag>

    <tag>
        <description>
            check to see if we need to redirect to admin app.
        </description>
        <name>adminRedirect</name>
        <tag-class>com.zimbra.cs.taglib.tag.AdminRedirectTag</tag-class>
        <body-content>empty</body-content>
    </tag>

    <tag>
        <description>
            Changes a password.
        </description>
        <name>changePassword</name>
        <tag-class>com.zimbra.cs.taglib.tag.ChangePasswordTag</tag-class>
        <body-content>empty</body-content>
        <attribute>
            <description>
                Username
            </description>
            <name>username</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
        <attribute>
            <description>
                Password
            </description>
            <name>password</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
        <attribute>
            <description>
                New password
            </description>
            <name>newpassword</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
        <attribute>
            <description>
                URL
            </description>
            <name>url</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
        <attribute>
            <description>
                Marks the new auth token cookie as secure only
            </description>
            <name>secure</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
        <attribute>
            <description>
                If true, sets a lifetime on the cookie based on auth-token expiration
            </description>
            <name>rememberme</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
    </tag>

    <tag>
        <description>
            Compares passed in crumb to crumb returned in GetInfoResponse.
        </description>
        <name>checkCrumb</name>
        <tag-class>com.zimbra.cs.taglib.tag.CheckCrumbTag</tag-class>
        <body-content>empty</body-content>
        <attribute>
            <description>
                Crumb passed in from input field or query param.
            </description>
            <name>crumb</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
    </tag>

    <tag>
        <description>
            logout. clears cookie and JSP session.
        </description>
        <name>logout</name>
        <tag-class>com.zimbra.cs.taglib.tag.LogoutTag</tag-class>
        <body-content>empty</body-content>
    </tag>

    <tag>
        <description>
            Retreive a message.
        </description>

        <name>getMessage</name>

        <tag-class>com.zimbra.cs.taglib.tag.msg.GetMessageTag</tag-class>

        <body-content>empty</body-content>

        <variable>
            <name-from-attribute>var</name-from-attribute>
            <variable-class>com.zimbra.cs.taglib.bean.ZMessageBean</variable-class>
            <scope>AT_END</scope>
        </variable>

        <attribute>
            <description>
                Name of the exported scoped variable to store the ZMessageBean in.
            </description>
            <name>var</name>
            <required>true</required>
        </attribute>

        <attribute>
            <description>ZMailboxBean object to use</description>
            <name>box</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>com.zimbra.cs.taglib.bean.ZMailboxBean</type>
        </attribute>

        <attribute>
            <description>message id</description>
            <name>id</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>

        </attribute>

        <attribute>
            <description>mark message as read</description>
            <name>markread</name>
            <rtexprvalue>true</rtexprvalue>
        </attribute>

        <attribute>
            <description>prefer HTML</description>
            <name>wanthtml</name>
            <rtexprvalue>true</rtexprvalue>
        </attribute>

        <attribute>
            <description>return the raw message content</description>
            <name>raw</name>
            <rtexprvalue>true</rtexprvalue>
        </attribute>

        <attribute>
            <description>"1" to "neuter" IMG tags returned in HTML content; this involves switching
                the "src" attribute to "dfsrc" so that images don't display by default
            </description>
            <name>neuterimages</name>
            <rtexprvalue>true</rtexprvalue>
        </attribute>

        <attribute>
            <description>supply a "part" and the retrieved data will be on the specified message/rfc822 subpart.
                if the part does not exist or is not a message/rfc822 part, mail.NO_SUCH_PART</description>
            <name>part</name>
            <rtexprvalue>true</rtexprvalue>
        </attribute>

		<attribute>
            <description>list of comma-separated headernames to get</description>
            <name>requestHeaders</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
       </attribute>

    </tag>

    <tag>
        <description>
            Retreive a conversation.
        </description>

        <name>getConversation</name>

        <tag-class>com.zimbra.cs.taglib.tag.conv.GetConversationTag</tag-class>

        <body-content>empty</body-content>

        <variable>
            <name-from-attribute>var</name-from-attribute>
            <variable-class>com.zimbra.cs.taglib.bean.ZConversationBean</variable-class>
            <scope>AT_END</scope>
        </variable>

        <attribute>
            <description>
                fetch none/first//all messages in conv
            </description>
            <name>fetch</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>

        <attribute>
            <description>
                Name of the exported scoped variable to store the ZConversationBean in.
            </description>
            <name>var</name>
            <required>true</required>
        </attribute>

        <attribute>
            <description>conversation id</description>
            <name>id</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>

    </tag>

    <tag>
        <description>
            Hard-delete a conversation. Use trashConversation if you just want to move to trash.
        </description>

        <name>deleteConversation</name>

        <tag-class>com.zimbra.cs.taglib.tag.conv.DeleteConversationTag</tag-class>

        <body-content>empty</body-content>

        <variable>
            <name-from-attribute>var</name-from-attribute>
            <variable-class>com.zimbra.cs.taglib.bean.ZActionResultBean</variable-class>
            <scope>AT_END</scope>
        </variable>

        <attribute>
            <description>
                Name of the exported scoped variable to store the ZActionResultBean in.
            </description>
            <name>var</name>
            <required>true</required>
        </attribute>
         <attribute>
             <description>
              <![CDATA[
                 [-]{constraint} = list of characters; constrains the set of affected items in a conversation <br />
                 t - include items in the Trash <br />
                 j - include items in Spam/Junk<br />
                 s - include items in the user's Sent folder (not necessarily "Sent")<br />
                 o - include items in any other folder<br />
                 a leading '-' means to negate the constraint (e.g. "-t" means all messages not in Trash)<br />
               ]]>                 
             </description>
             <name>tc</name>
             <required>false</required>
             <rtexprvalue>true</rtexprvalue>             
             <type>java.lang.String</type>
         </attribute>

         <attribute>
             <description>conversation id(s) to delete</description>
             <name>id</name>
             <required>true</required>
             <rtexprvalue>true</rtexprvalue>
             <type>java.lang.String</type>
         </attribute>
     </tag>

    <tag>
        <description>
            Moves a conversation to trash (correctly handles delegated/mounted items).
        </description>

        <name>trashConversation</name>

        <tag-class>com.zimbra.cs.taglib.tag.conv.TrashConversationTag</tag-class>

        <body-content>empty</body-content>

        <variable>
            <name-from-attribute>var</name-from-attribute>
            <variable-class>com.zimbra.cs.taglib.bean.ZActionResultBean</variable-class>
            <scope>AT_END</scope>
        </variable>

        <attribute>
            <description>
                Name of the exported scoped variable to store the ZActionResultBean in.
            </description>
            <name>var</name>
            <required>true</required>
        </attribute>
         <attribute>
             <description>
              <![CDATA[
                 [-]{constraint} = list of characters; constrains the set of affected items in a conversation <br />
                 t - include items in the Trash <br />
                 j - include items in Spam/Junk<br />
                 s - include items in the user's Sent folder (not necessarily "Sent")<br />
                 o - include items in any other folder<br />
                 a leading '-' means to negate the constraint (e.g. "-t" means all messages not in Trash)<br />
               ]]>
             </description>
             <name>tc</name>
             <required>false</required>
             <rtexprvalue>true</rtexprvalue>
             <type>java.lang.String</type>
         </attribute>

         <attribute>
             <description>conversation id(s) to move to trash</description>
             <name>id</name>
             <required>true</required>
             <rtexprvalue>true</rtexprvalue>
             <type>java.lang.String</type>
         </attribute>
    </tag>

    <tag>
        <description>
             Mark a conversation read/unread.
         </description>

        <name>markConversationRead</name>

        <tag-class>com.zimbra.cs.taglib.tag.conv.MarkConversationReadTag</tag-class>

        <body-content>empty</body-content>

        <variable>
            <name-from-attribute>var</name-from-attribute>
            <variable-class>com.zimbra.cs.taglib.bean.ZActionResultBean</variable-class>
            <scope>AT_END</scope>
        </variable>

        <attribute>
            <description>
                Name of the exported scoped variable to store the ZActionResultBean in.
            </description>
            <name>var</name>
            <required>true</required>
        </attribute>

        <attribute>
             <description>
              <![CDATA[
                 [-]{constraint} = list of characters; constrains the set of affected items in a conversation <br />
                 t - include items in the Trash <br />
                 j - include items in Spam/Junk<br />
                 s - include items in the user's Sent folder (not necessarily "Sent")<br />
                 o - include items in any other folder<br />
                 a leading '-' means to negate the constraint (e.g. "-t" means all messages not in Trash)<br />
               ]]>
             </description>
             <name>tc</name>
             <required>false</required>
             <rtexprvalue>true</rtexprvalue>
             <type>java.lang.String</type>
        </attribute>

         <attribute>
             <description>conversation id(s) to mark read/unread</description>
             <name>id</name>
             <required>true</required>
             <rtexprvalue>true</rtexprvalue>
             <type>java.lang.String</type>
         </attribute>

         <attribute>
             <description>read state (true=read, false=unread)</description>
             <name>read</name>
             <required>true</required>
             <rtexprvalue>true</rtexprvalue>
             <type>boolean</type>
         </attribute>
     </tag>

    <tag>
        <description>
            Flag/unflag a conversation.
        </description>

        <name>flagConversation</name>

        <tag-class>com.zimbra.cs.taglib.tag.conv.FlagConversationTag</tag-class>

        <body-content>empty</body-content>

        <variable>
            <name-from-attribute>var</name-from-attribute>
            <variable-class>com.zimbra.cs.taglib.bean.ZActionResultBean</variable-class>
            <scope>AT_END</scope>
        </variable>

        <attribute>
            <description>
                Name of the exported scoped variable to store the ZActionResultBean in.
            </description>
            <name>var</name>
            <required>true</required>
        </attribute>
        <attribute>
            <description>
                <![CDATA[
                   [-]{constraint} = list of characters; constrains the set of affected items in a conversation <br />
                   t - include items in the Trash <br />
                   j - include items in Spam/Junk<br />
                   s - include items in the user's Sent folder (not necessarily "Sent")<br />
                   o - include items in any other folder<br />
                   a leading '-' means to negate the constraint (e.g. "-t" means all messages not in Trash)<br />
                 ]]>
            </description>
            <name>tc</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>

        <attribute>
            <description>conversation id(s) to flag/unflag</description>
            <name>id</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>            
        </attribute>
         <attribute>
             <description>flag state (true=flagged, false=unflagged)</description>
             <name>flag</name>
             <required>true</required>
             <rtexprvalue>true</rtexprvalue>
             <type>boolean</type>
         </attribute>
    </tag>

    <tag>
        <description>
            Move a conversation to a folder.
        </description>

        <name>moveConversation</name>

        <tag-class>com.zimbra.cs.taglib.tag.conv.MoveConversationTag</tag-class>

        <body-content>empty</body-content>

        <variable>
            <name-from-attribute>var</name-from-attribute>
            <variable-class>com.zimbra.cs.taglib.bean.ZActionResultBean</variable-class>
            <scope>AT_END</scope>
        </variable>

        <attribute>
            <description>
                Name of the exported scoped variable to store the ZActionResultBean in.
            </description>
            <name>var</name>
            <required>true</required>
        </attribute>
        <attribute>
            <description>
                <![CDATA[
                   [-]{constraint} = list of characters; constrains the set of affected items in a conversation <br />
                   t - include items in the Trash <br />
                   j - include items in Spam/Junk<br />
                   s - include items in the user's Sent folder (not necessarily "Sent")<br />
                   o - include items in any other folder<br />
                   a leading '-' means to negate the constraint (e.g. "-t" means all messages not in Trash)<br />
                 ]]>
            </description>
            <name>tc</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>conversation id(s) to move</description>
            <name>id</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
         <attribute>
             <description>destination folder id</description>
             <name>folderid</name>
             <required>true</required>
             <rtexprvalue>true</rtexprvalue>
             <type>java.lang.String</type>
         </attribute>
    </tag>

    <tag>
        <description>
            Tag a conversation.
        </description>

        <name>tagConversation</name>

        <tag-class>com.zimbra.cs.taglib.tag.conv.TagConversationTag</tag-class>

        <body-content>empty</body-content>

        <variable>
            <name-from-attribute>var</name-from-attribute>
            <variable-class>com.zimbra.cs.taglib.bean.ZActionResultBean</variable-class>
            <scope>AT_END</scope>
        </variable>

        <attribute>
            <description>
                Name of the exported scoped variable to store the ZActionResultBean in.
            </description>
            <name>var</name>
            <required>true</required>
        </attribute>
        <attribute>
            <description>
                <![CDATA[
                   [-]{constraint} = list of characters; constrains the set of affected items in a conversation <br />
                   t - include items in the Trash <br />
                   j - include items in Spam/Junk<br />
                   s - include items in the user's Sent folder (not necessarily "Sent")<br />
                   o - include items in any other folder<br />
                   a leading '-' means to negate the constraint (e.g. "-t" means all messages not in Trash)<br />
                 ]]>
            </description>
            <name>tc</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>conversation id(s) to tag</description>
            <name>id</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
         <attribute>
             <description>tag id</description>
             <name>tagid</name>
             <required>true</required>
             <rtexprvalue>true</rtexprvalue>
             <type>java.lang.String</type>
         </attribute>
        <attribute>
            <description>tag state (true=tag, false=untag)</description>
            <name>tag</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>boolean</type>
        </attribute>
    </tag>
    
    <tag>
        <description>
            Mark a conversation as spam/unspam, and optionally move to a specific folder.
        </description>

        <name>markConversationSpam</name>

        <tag-class>com.zimbra.cs.taglib.tag.conv.MarkConversationSpamTag</tag-class>

        <body-content>empty</body-content>

        <variable>
            <name-from-attribute>var</name-from-attribute>
            <variable-class>com.zimbra.cs.taglib.bean.ZActionResultBean</variable-class>
            <scope>AT_END</scope>
        </variable>

        <attribute>
            <description>
                Name of the exported scoped variable to store the ZActionResultBean in.
            </description>
            <name>var</name>
            <required>true</required>
        </attribute>
        <attribute>
            <description>
                <![CDATA[
                   [-]{constraint} = list of characters; constrains the set of affected items in a conversation <br />
                   t - include items in the Trash <br />
                   j - include items in Spam/Junk<br />
                   s - include items in the user's Sent folder (not necessarily "Sent")<br />
                   o - include items in any other folder<br />
                   a leading '-' means to negate the constraint (e.g. "-t" means all messages not in Trash)<br />
                 ]]>
            </description>
            <name>tc</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>conversation id(s) to mark as spam/not spam</description>
            <name>id</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>destination folder id</description>
            <name>folderid</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>spam state (true=spam, false=not spam)</description>
            <name>spam</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>boolean</type>
        </attribute>
    </tag>

    <tag>
        <description>
            Hard-delete a message. Use trashMessage if you want to move to trash.
        </description>

        <name>deleteMessage</name>

        <tag-class>com.zimbra.cs.taglib.tag.msg.DeleteMessageTag</tag-class>

        <body-content>empty</body-content>

        <variable>
            <name-from-attribute>var</name-from-attribute>
            <variable-class>com.zimbra.cs.taglib.bean.ZActionResultBean</variable-class>
            <scope>AT_END</scope>
        </variable>

        <attribute>
            <description>
                Name of the exported scoped variable to store the ZActionResultBean in.
            </description>
            <name>var</name>
            <required>true</required>
        </attribute>
         <attribute>
             <description>message id(s) to delete</description>
             <name>id</name>
             <required>true</required>
             <rtexprvalue>true</rtexprvalue>
             <type>java.lang.String</type>
         </attribute>
     </tag>

    <tag>
        <description>
            Moves a message to the trash.
        </description>

        <name>trashMessage</name>

        <tag-class>com.zimbra.cs.taglib.tag.msg.TrashMessageTag</tag-class>

        <body-content>empty</body-content>

        <variable>
            <name-from-attribute>var</name-from-attribute>
            <variable-class>com.zimbra.cs.taglib.bean.ZActionResultBean</variable-class>
            <scope>AT_END</scope>
        </variable>

        <attribute>
            <description>
                Name of the exported scoped variable to store the ZActionResultBean in.
            </description>
            <name>var</name>
            <required>true</required>
        </attribute>
         <attribute>
             <description>message id(s) to move to trash</description>
             <name>id</name>
             <required>true</required>
             <rtexprvalue>true</rtexprvalue>
             <type>java.lang.String</type>
         </attribute>
     </tag>

    <tag>
        <description>
             Mark a message read/unread.
         </description>

        <name>markMessageRead</name>

        <tag-class>com.zimbra.cs.taglib.tag.msg.MarkMessageReadTag</tag-class>

        <body-content>empty</body-content>

        <variable>
            <name-from-attribute>var</name-from-attribute>
            <variable-class>com.zimbra.cs.taglib.bean.ZActionResultBean</variable-class>
            <scope>AT_END</scope>
        </variable>

        <attribute>
            <description>
                Name of the exported scoped variable to store the ZActionResultBean in.
            </description>
            <name>var</name>
            <required>true</required>
        </attribute>

         <attribute>
             <description>message id(s) to mark read/unread</description>
             <name>id</name>
             <required>true</required>
             <rtexprvalue>true</rtexprvalue>
             <type>java.lang.String</type>
         </attribute>

         <attribute>
             <description>read state (true=read, false=unread)</description>
             <name>read</name>
             <required>true</required>
             <rtexprvalue>true</rtexprvalue>
             <type>boolean</type>
         </attribute>
     </tag>

    <tag>
        <description>
            Flag/unflag a message.
        </description>

        <name>flagMessage</name>

        <tag-class>com.zimbra.cs.taglib.tag.msg.FlagMessageTag</tag-class>

        <body-content>empty</body-content>

        <variable>
            <name-from-attribute>var</name-from-attribute>
            <variable-class>com.zimbra.cs.taglib.bean.ZActionResultBean</variable-class>
            <scope>AT_END</scope>
        </variable>

        <attribute>
            <description>
                Name of the exported scoped variable to store the ZActionResultBean in.
            </description>
            <name>var</name>
            <required>true</required>
        </attribute>
        <attribute>
            <description>message id(s) to flag/unflag</description>
            <name>id</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
         <attribute>
             <description>flag state (true=flagged, false=unflagged)</description>
             <name>flag</name>
             <required>true</required>
             <rtexprvalue>true</rtexprvalue>
             <type>boolean</type>
         </attribute>
    </tag>

    <tag>
        <description>
            Move a message to a folder.
        </description>

        <name>moveMessage</name>

        <tag-class>com.zimbra.cs.taglib.tag.msg.MoveMessageTag</tag-class>

        <body-content>empty</body-content>

        <variable>
            <name-from-attribute>var</name-from-attribute>
            <variable-class>com.zimbra.cs.taglib.bean.ZActionResultBean</variable-class>
            <scope>AT_END</scope>
        </variable>

        <attribute>
            <description>
                Name of the exported scoped variable to store the ZActionResultBean in.
            </description>
            <name>var</name>
            <required>true</required>
        </attribute>
        <attribute>
            <description>message id(s) to move</description>
            <name>id</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
         <attribute>
             <description>destination folder id</description>
             <name>folderid</name>
             <required>true</required>
             <rtexprvalue>true</rtexprvalue>
             <type>java.lang.String</type>
         </attribute>
    </tag>

    <tag>
        <description>
            Tag a message.
        </description>

        <name>tagMessage</name>

        <tag-class>com.zimbra.cs.taglib.tag.msg.TagMessageTag</tag-class>

        <body-content>empty</body-content>

        <variable>
            <name-from-attribute>var</name-from-attribute>
            <variable-class>com.zimbra.cs.taglib.bean.ZActionResultBean</variable-class>
            <scope>AT_END</scope>
        </variable>

        <attribute>
            <description>
                Name of the exported scoped variable to store the ZActionResultBean in.
            </description>
            <name>var</name>
            <required>true</required>
        </attribute>
        <attribute>
            <description>message id(s) to tag</description>
            <name>id</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
         <attribute>
             <description>tag id</description>
             <name>tagid</name>
             <required>true</required>
             <rtexprvalue>true</rtexprvalue>
             <type>java.lang.String</type>
         </attribute>
        <attribute>
            <description>tag state (true=tag, false=untag)</description>
            <name>tag</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>boolean</type>
        </attribute>
    </tag>

    <tag>
        <description>
            Mark a message spam/unspam, and optionally move to a specific folder.
        </description>

        <name>markMessageSpam</name>

        <tag-class>com.zimbra.cs.taglib.tag.msg.MarkMessageSpamTag</tag-class>

        <body-content>empty</body-content>

        <variable>
            <name-from-attribute>var</name-from-attribute>
            <variable-class>com.zimbra.cs.taglib.bean.ZActionResultBean</variable-class>
            <scope>AT_END</scope>
        </variable>

        <attribute>
            <description>
                Name of the exported scoped variable to store the ZActionResultBean in.
            </description>
            <name>var</name>
            <required>true</required>
        </attribute>
        <attribute>
            <description>message id(s) to mark as spam/not spam</description>
            <name>id</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>destination folder id</description>
            <name>folderid</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>spam state (true=spam, false=not spam)</description>
            <name>spam</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>boolean</type>
        </attribute>
    </tag>

    <tag>
        <description>
            Retreive a contact.
        </description>

        <name>getContact</name>

        <tag-class>com.zimbra.cs.taglib.tag.contact.GetContactTag</tag-class>

        <body-content>empty</body-content>

        <variable>
            <name-from-attribute>var</name-from-attribute>
            <variable-class>com.zimbra.cs.taglib.bean.ZContactBean</variable-class>
            <scope>AT_END</scope>
        </variable>

        <attribute>
            <description>
                Name of the exported scoped variable to store the ZContactBean in.
            </description>
            <name>var</name>
            <required>true</required>
        </attribute>

        <attribute>
            <description>contact id</description>
            <name>id</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>

        <attribute>
            <description>return modified date</description>
            <name>sync</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
    </tag>

    <tag>
        <description>
            auto-complete contacts
        </description>

        <name>contactAutoComplete</name>

        <tag-class>com.zimbra.cs.taglib.tag.contact.ContactAutoCompleteTag</tag-class>

        <body-content>empty</body-content>

        <attribute>
            <description>prefix query</description>
            <name>query</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>

        <attribute>
            <description>output JSON</description>
            <name>json</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>

        <attribute>
            <description>max hits to return</description>
            <name>limit</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
    </tag>

    <tag>
        <description>
            group contacts
        </description>

        <name>getGroupContacts</name>

        <tag-class>com.zimbra.cs.taglib.tag.contact.GetGroupContactsTag</tag-class>

        <body-content>empty</body-content>

        <attribute>
            <description>group id</description>
            <name>id</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>

        <attribute>
            <description>output JSON</description>
            <name>json</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
    </tag>

    <tag>
        <description>
            Hard-delete a contact. Use trashContact if you just want to move to trash.
        </description>

        <name>deleteContact</name>

        <tag-class>com.zimbra.cs.taglib.tag.contact.DeleteContactTag</tag-class>

        <body-content>empty</body-content>

        <variable>
            <name-from-attribute>var</name-from-attribute>
            <variable-class>com.zimbra.cs.taglib.bean.ZActionResultBean</variable-class>
            <scope>AT_END</scope>
        </variable>

        <attribute>
            <description>
                Name of the exported scoped variable to store the ZActionResultBean in.
            </description>
            <name>var</name>
            <required>true</required>
        </attribute>
         <attribute>
             <description>contact id(s) to delete</description>
             <name>id</name>
             <required>true</required>
             <rtexprvalue>true</rtexprvalue>
             <type>java.lang.String</type>
         </attribute>
     </tag>

    <tag>
        <description>
            Move contact(s) to trash.
        </description>

        <name>trashContact</name>

        <tag-class>com.zimbra.cs.taglib.tag.contact.TrashContactTag</tag-class>

        <body-content>empty</body-content>

        <variable>
            <name-from-attribute>var</name-from-attribute>
            <variable-class>com.zimbra.cs.taglib.bean.ZActionResultBean</variable-class>
            <scope>AT_END</scope>
        </variable>

        <attribute>
            <description>
                Name of the exported scoped variable to store the ZActionResultBean in.
            </description>
            <name>var</name>
            <required>true</required>
        </attribute>
         <attribute>
             <description>contact id(s) to move to trash</description>
             <name>id</name>
             <required>true</required>
             <rtexprvalue>true</rtexprvalue>
             <type>java.lang.String</type>
         </attribute>
     </tag>

    <tag>
        <description>
            Flag/unflag a contact.
        </description>

        <name>flagContact</name>

        <tag-class>com.zimbra.cs.taglib.tag.contact.FlagContactTag</tag-class>

        <body-content>empty</body-content>

        <variable>
            <name-from-attribute>var</name-from-attribute>
            <variable-class>com.zimbra.cs.taglib.bean.ZActionResultBean</variable-class>
            <scope>AT_END</scope>
        </variable>

        <attribute>
            <description>
                Name of the exported scoped variable to store the ZActionResultBean in.
            </description>
            <name>var</name>
            <required>true</required>
        </attribute>
        <attribute>
            <description>contact id(s) to flag/unflag</description>
            <name>id</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
         <attribute>
             <description>flag state (true=flagged, false=unflagged)</description>
             <name>flag</name>
             <required>true</required>
             <rtexprvalue>true</rtexprvalue>
             <type>boolean</type>
         </attribute>
    </tag>

    <tag>
        <description>
            Create a contact
        </description>

        <name>createContact</name>

        <tag-class>com.zimbra.cs.taglib.tag.contact.CreateContactTag</tag-class>

        <body-content>scriptless</body-content>

        <variable>
            <name-from-attribute>var</name-from-attribute>
            <variable-class>java.lang.String</variable-class>
            <scope>AT_END</scope>
        </variable>

        <attribute>
            <description>
                id of created contact.
            </description>
            <name>var</name>
            <required>true</required>
        </attribute>
        <attribute>
            <description>folder id to create contact in</description>
            <name>folderid</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>tag ids to create contact with</description>
            <name>tagids</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
         <attribute>
             <description>allow unknown contact fields to used</description>
             <name>force</name>
             <required>false</required>             
             <rtexprvalue>true</rtexprvalue>
             <type>boolean</type>
         </attribute>
    </tag>

    <tag>
        <description>
            Modify a contact
        </description>

        <name>modifyContact</name>

        <tag-class>com.zimbra.cs.taglib.tag.contact.ModifyContactTag</tag-class>

        <body-content>scriptless</body-content>

        <variable>
            <name-from-attribute>var</name-from-attribute>
            <variable-class>java.lang.String</variable-class>
            <scope>AT_END</scope>
        </variable>

        <attribute>
            <description>
                id of modified/created contact.
            </description>
            <name>var</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
        <attribute>
            <description>contact id to modify. if not present (or empty), a contact will be created.</description>
            <name>id</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
         <attribute>
             <description>replace (true) or merge modify fields with contact</description>
             <name>replace</name>
             <required>false</required>             
             <rtexprvalue>true</rtexprvalue>
             <type>boolean</type>
         </attribute>
        <attribute>
            <description>folder id to create contact in (not used with modify)</description>
            <name>folderid</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>tag ids to create contact with</description>
            <name>tagids</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>allow unknown contact fields to used</description>
            <name>force</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>boolean</type>
        </attribute>
    </tag>

    <tag>
        <description>
            A field for a contact being created or modified
        </description>

        <name>field</name>

        <tag-class>com.zimbra.cs.taglib.tag.contact.FieldTag</tag-class>

        <body-content>empty</body-content>

        <attribute>
            <description>
                Name of the field.
            </description>
            <name>name</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
        <attribute>
            <description>
                Value of the field.
            </description>
            <name>value</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
    </tag>

    <tag>
        <description>
            A field for a contact being created or modified
        </description>

        <name>member</name>

        <tag-class>com.zimbra.cs.taglib.tag.contact.MemberTag</tag-class>

        <body-content>empty</body-content>

        <attribute>
            <description>
                Name of the field.
            </description>
            <name>name</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
        <attribute>
            <description>
                Value of the field.
            </description>
            <name>value</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
    </tag>

    <tag>
        <description>
            Move a contact to a folder.
        </description>

        <name>moveContact</name>

        <tag-class>com.zimbra.cs.taglib.tag.contact.MoveContactTag</tag-class>

        <body-content>empty</body-content>

        <variable>
            <name-from-attribute>var</name-from-attribute>
            <variable-class>com.zimbra.cs.taglib.bean.ZActionResultBean</variable-class>
            <scope>AT_END</scope>
        </variable>

        <attribute>
            <description>
                Name of the exported scoped variable to store the ZActionResultBean in.
            </description>
            <name>var</name>
            <required>true</required>
        </attribute>
        <attribute>
            <description>contact id(s) to move</description>
            <name>id</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
         <attribute>
             <description>destination folder id</description>
             <name>folderid</name>
             <required>true</required>
             <rtexprvalue>true</rtexprvalue>
             <type>java.lang.String</type>
         </attribute>
    </tag>

    <tag>
        <description>
            Tag a message.
        </description>

        <name>tagContact</name>

        <tag-class>com.zimbra.cs.taglib.tag.contact.TagContactTag</tag-class>

        <body-content>empty</body-content>

        <variable>
            <name-from-attribute>var</name-from-attribute>
            <variable-class>com.zimbra.cs.taglib.bean.ZActionResultBean</variable-class>
            <scope>AT_END</scope>
        </variable>

        <attribute>
            <description>
                Name of the exported scoped variable to store the ZActionResultBean in.
            </description>
            <name>var</name>
            <required>true</required>
        </attribute>
        <attribute>
            <description>contact id(s) to tag</description>
            <name>id</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
         <attribute>
             <description>tag id</description>
             <name>tagid</name>
             <required>true</required>
             <rtexprvalue>true</rtexprvalue>
             <type>java.lang.String</type>
         </attribute>
        <attribute>
            <description>tag state (true=tag, false=untag)</description>
            <name>tag</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>boolean</type>
        </attribute>
    </tag>

    <tag>
        <description>
            Convert an exception into a ZExceptionBean
        </description>

        <name>getException</name>

        <tag-class>com.zimbra.cs.taglib.tag.GetExceptionTag</tag-class>

        <body-content>empty</body-content>

        <variable>
            <name-from-attribute>var</name-from-attribute>
            <variable-class>com.zimbra.cs.taglib.bean.ZExceptionBean</variable-class>
            <scope>AT_END</scope>
        </variable>

        <attribute>
            <description>
                Name of the exported scoped variable to store the ZExceptionBean in.
            </description>
            <name>var</name>
            <required>true</required>
        </attribute>

        <attribute>
            <description>the exception</description>
            <name>exception</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>            
        </attribute>
    </tag>

    <tag>
        <description>
            Retreive the ZMailboxBean
        </description>

        <name>getMailbox</name>

        <tag-class>com.zimbra.cs.taglib.tag.GetMailboxTag</tag-class>

        <body-content>empty</body-content>
        <variable>
            <name-from-attribute>var</name-from-attribute>
            <variable-class>com.zimbra.cs.taglib.bean.ZMailboxBean</variable-class>
            <scope>AT_END</scope>
        </variable>

        <attribute>
            <description>
                Name of the exported scoped variable to store the ZMailboxBean in.
            </description>
            <name>var</name>
            <required>true</required>
        </attribute>

        <attribute>
            <description>
                Refresh account info
            </description>
            <name>refreshaccount</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>boolean</type>
        </attribute>
        <attribute>
            <description>
                get a mailbox without a session for use with REST HTML rendering.
            </description>
            <name>restauthtoken</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
        <attribute>
            <description>
                auth token (ZAuthToken) for use with REST HTML rendering.
            </description>
            <name>restauthtokenobject</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>        
        <attribute>
            <description>
                target account id for use with REST HTML rendering.
            </description>
            <name>resttargetaccountid</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
    </tag>

    <tag>
        <description>
            Do a batch GetInfo and optional Search call and get back JSON in variable.
        </description>

        <name>getInfoJSON</name>

        <tag-class>com.zimbra.cs.taglib.tag.GetInfoJSONTag</tag-class>

        <body-content>empty</body-content>
        <variable>
            <name-from-attribute>var</name-from-attribute>
            <variable-class>java.lang.String</variable-class>
            <scope>AT_END</scope>
        </variable>

        <attribute>
            <description>
                Name of the exported scoped variable to store the JSON result int.
            </description>
            <name>var</name>
            <required>true</required>
        </attribute>

        <attribute>
            <description>
                auth token to use.
            </description>
            <name>authtoken</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>

        <attribute>
            <description>
                whether or not to do a search.
            </description>
            <name>dosearch</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>

        <attribute>
            <description>
                items per page in the search request
            </description>
            <name>itemsperpage</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>

        <attribute>
            <description>
                types to search for
            </description>
            <name>types</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>

        <attribute>
            <description>
                intial search folder path
            </description>
            <name>folderpath</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>

        <attribute>
            <description>
                sortby
            </description>
            <name>sortby</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
    </tag>

    <tag>
        <description>
            Do a batch GetMiniCalRequest and Search call and get back JSON in variable.
        </description>

        <name>calSearchJSON</name>

        <tag-class>com.zimbra.cs.taglib.tag.CalSearchJSONTag</tag-class>

        <body-content>empty</body-content>
        <variable>
            <name-from-attribute>var</name-from-attribute>
            <variable-class>java.lang.String</variable-class>
            <scope>AT_END</scope>
        </variable>

        <attribute>
            <description>
                Name of the exported scoped variable to store the JSON result int.
            </description>
            <name>var</name>
            <required>true</required>
        </attribute>

        <attribute>
            <description>
                auth token to use.
            </description>
            <name>authtoken</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>

        <attribute>
            <description>
                items per page in the search request
            </description>
            <name>itemsperpage</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>

        <attribute>
            <description>
                types to search for
            </description>
            <name>types</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>

        <attribute>
            <description>timezone to compute correct start/end time for search</description>
            <name>timezone</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.util.TimeZone</type>
        </attribute>

    </tag>

    <tag>
        <description>
            Do GetInfoRequest get back JSON in variable.
        </description>

        <name>getItemInfoJSON</name>

        <tag-class>com.zimbra.cs.taglib.tag.GetItemInfoJSONTag</tag-class>

        <body-content>empty</body-content>
        <variable>
            <name-from-attribute>var</name-from-attribute>
            <variable-class>java.lang.String</variable-class>
            <scope>AT_END</scope>
        </variable>

        <attribute>
            <description>
                Name of the exported scoped variable to store the JSON result int.
            </description>
            <name>var</name>
            <required>true</required>
        </attribute>

        <attribute>
            <description>
                auth token to use.
            </description>
            <name>authtoken</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>

         <attribute>
             <description>
                 conversation id to fetch
             </description>
             <name>id</name>
             <required>true</required>
             <rtexprvalue>true</rtexprvalue>
             <type>java.lang.String</type>
         </attribute>

    </tag>

    <tag>
        <description>
            Retreive the ZUserAgentBean
        </description>

        <name>getUserAgent</name>

        <tag-class>com.zimbra.cs.taglib.tag.GetUserAgentTag</tag-class>

        <body-content>empty</body-content>
        <variable>
            <name-from-attribute>var</name-from-attribute>
            <variable-class>com.zimbra.cs.taglib.bean.ZUserAgentBean</variable-class>
            <scope>AT_END</scope>
        </variable>

        <attribute>
            <description>
                Name of the exported session scoped variable to store the ZUserAgentBean in.
            </description>
            <name>var</name>
            <required>true</required>
        </attribute>

        <attribute>
            <description>
                Whether or not to cache result in session.
            </description>
            <name>session</name>
            <required>true</required>
        </attribute>

    </tag>

        <tag>
		<description>Retrieve the favicon set on the domain or local config.</description>
		<name>getFavIcon</name>
		<tag-class>com.zimbra.cs.taglib.tag.GetFavIconTag</tag-class>
		<body-content>empty</body-content>
		<attribute>
			<description>Variable to place fav icon URL.</description>
			<name>var</name>
			<required>true</required>
			<rtexprvalue>false</rtexprvalue>
		</attribute>
		<attribute>
			<description>Request.</description>
			<name>request</name>
			<required>true</required>
			<rtexprvalue>true</rtexprvalue>
			<type>javax.servlet.http.HttpServletRequest</type>
		</attribute>
	</tag>

        <tag>
        <description>
            Retreive the Domain info data.
        </description>

        <name>getDomainInfo</name>

        <tag-class>com.zimbra.cs.taglib.tag.GetDomainInfoTag</tag-class>

        <body-content>empty</body-content>
        <variable>
            <name-from-attribute>var</name-from-attribute>
            <variable-class>com.zimbra.cs.account.Domain</variable-class>
            <scope>AT_END</scope>
        </variable>

        <attribute>
            <description>
                Name of the exported session scoped variable to store the domain in.
            </description>
            <name>var</name>
            <required>true</required>
        </attribute>

        <attribute>
            <description>DomainBy value: name, id, virtualHostname</description>
            <name>by</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>domain value to lookup</description>
            <name>value</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>

    </tag>

    <tag>
        <description>
            Require current http request to be a POST. Throws an exception if not.
        </description>

        <name>requirePost</name>

        <tag-class>com.zimbra.cs.taglib.tag.RequirePostTag</tag-class>

        <body-content>empty</body-content>
    </tag>

    <tag>
        <description>
            look at the query strings and compute SearchContext
        </description>
        <name>computeSearchContext</name>
        <tag-class>com.zimbra.cs.taglib.tag.ComputeSearchContextTag</tag-class>
        <body-content>empty</body-content>
        <variable>
            <name-from-attribute>var</name-from-attribute>
            <variable-class>com.zimbra.cs.taglib.tag.SearchContext</variable-class>
            <scope>AT_END</scope>
        </variable>

        <attribute>
            <description>
                Name for exported request scoped variable
            </description>
            <name>var</name>
            <required>true</required>
            <rtexprvalue>false</rtexprvalue>
        </attribute>
       <attribute>
            <description>
                search limit
            </description>
            <name>limit</name>
           <required>false</required>
           <rtexprvalue>true</rtexprvalue>
        </attribute>
        <attribute>
            <description>types of objects to return (conversaion, message, contact,appointment)</description>
            <name>types</name>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
        <attribute>
            <description>optional search query to use</description>
            <name>query</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
        <attribute>
            <description>if true, use cached saerch if possible</description>
            <name>usecache</name>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
    </tag>

    <tag>
        <description>
            call saerch conv
        </description>
        <name>searchConv</name>
        <tag-class>com.zimbra.cs.taglib.tag.conv.SearchConvTag</tag-class>
        <body-content>empty</body-content>
        <variable>
            <name-from-attribute>var</name-from-attribute>
            <variable-class>com.zimbra.cs.taglib.bean.ZSearchResultBean</variable-class>
            <scope>AT_END</scope>
        </variable>

        <attribute>
            <description>
                Name for exported request scoped variable
            </description>
            <name>var</name>
            <required>true</required>
        </attribute>
       <attribute>
            <description>
                context from computeQuery
            </description>
            <name>context</name>
           <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>com.zimbra.cs.taglib.tag.SearchContext</type>
        </attribute>
        <attribute>
            <description>
                fetch first/hits/all message in conv
            </description>
            <name>fetch</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>

       <attribute>
            <description>
                search limit
            </description>
            <name>limit</name>
           <required>false</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
        
        <attribute>
            <description>mark message as read</description>
            <name>markread</name>
            <rtexprvalue>true</rtexprvalue>
        </attribute>

        <attribute>
            <description>prefer HTML</description>
            <name>wanthtml</name>
            <rtexprvalue>true</rtexprvalue>
        </attribute>

        <attribute>
            <description>
                conversation id to fetch
            </description>
            <name>id</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>

        <attribute>
            <description>sort order (dateDesc, dateAsc, subjDesc, subjAsc, nameDesc, nameAsc)</description>
            <name>sort</name>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
    </tag>

    <tag>
        <description>
            compute next/prev item offset/index based on current context plus index
        </description>
        <name>computeNextPrevItem</name>
        <tag-class>com.zimbra.cs.taglib.tag.ComputeNextPrevItemTag</tag-class>
        <body-content>empty</body-content>
        <variable>
            <name-from-attribute>var</name-from-attribute>
            <variable-class>com.zimbra.cs.taglib.bean.NextPrevItemBean</variable-class>
            <scope>AT_END</scope>
        </variable>

        <attribute>
            <description>
                Name for exported request scoped variable
            </description>
            <name>var</name>
            <required>true</required>
        </attribute>
       <attribute>
            <description>
                search result bean
            </description>
            <name>searchResult</name>
           <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>com.zimbra.cs.taglib.bean.ZSearchResultBean</type>
        </attribute>
        <attribute>
            <description>
                index of current item
            </description>
            <name>index</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>int</type>
        </attribute>
    </tag>

    <tag>
        <description>
            Create a tag
        </description>

        <name>createTag</name>

        <tag-class>com.zimbra.cs.taglib.tag.tag.CreateTagTag</tag-class>

        <body-content>empty</body-content>

        <variable>
            <name-from-attribute>var</name-from-attribute>
            <variable-class>java.lang.String</variable-class>
            <scope>AT_BEGIN</scope>
        </variable>

        <attribute>
            <description>
                id of created tag.
            </description>
            <name>var</name>
            <required>true</required>
        </attribute>
        <attribute>
            <description>name of tag to create</description>
            <name>name</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>color of tag: orange, blue, cyan, green, purple, red, yellow</description>
            <name>color</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
    </tag>

    <tag>
        <description>
            Modify tag's color and/or name.
        </description>

        <name>updateTag</name>

        <tag-class>com.zimbra.cs.taglib.tag.tag.UpdateTagTag</tag-class>

        <body-content>empty</body-content>

        <attribute>
            <description>
                id of tag to modify.
            </description>
            <name>id</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>            
        </attribute>
        <attribute>
            <description>new tag name</description>
            <name>name</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>color of tag: orange, blue, cyan, green, purple, red, yellow</description>
            <name>color</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
    </tag>

    <tag>
        <description>
            Modify tag's color.
        </description>

        <name>modifyTagColor</name>

        <tag-class>com.zimbra.cs.taglib.tag.tag.ModifyTagColorTag</tag-class>

        <body-content>empty</body-content>

        <attribute>
            <description>
                id of tag to modify.
            </description>
            <name>id</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>            
        </attribute>
        <attribute>
            <description>color of tag: orange, blue, cyan, green, purple, red, yellow</description>
            <name>color</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
    </tag>

    <tag>
        <description>
            Rename a tag
        </description>

        <name>renameTag</name>

        <tag-class>com.zimbra.cs.taglib.tag.tag.RenameTagTag</tag-class>

        <body-content>empty</body-content>

        <attribute>
            <description>
                id of tag to rename.
            </description>
            <name>id</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>new tag name </description>
            <name>newname</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
    </tag>

    <tag>
        <description>
            Delete a tag
        </description>

        <name>deleteTag</name>

        <tag-class>com.zimbra.cs.taglib.tag.tag.DeleteTagTag</tag-class>

        <body-content>empty</body-content>

        <attribute>
            <description>
                id of tag to delete.
            </description>
            <name>id</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
    </tag>

    <tag>
        <description>
            Mark all items with tag read.
        </description>

        <name>markTagRead</name>

        <tag-class>com.zimbra.cs.taglib.tag.tag.MarkTagReadTag</tag-class>

        <body-content>empty</body-content>

        <attribute>
            <description>
                id of tag to mark read.
            </description>
            <name>id</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
    </tag>

    <tag>
        <description>
            Create a folder
        </description>

        <name>createFolder</name>

        <tag-class>com.zimbra.cs.taglib.tag.folder.CreateFolderTag</tag-class>

        <body-content>empty</body-content>

        <variable>
            <name-from-attribute>var</name-from-attribute>
            <variable-class>com.zimbra.cs.taglib.bean.ZFolderBean</variable-class>
            <scope>AT_BEGIN</scope>
        </variable>

        <attribute>
            <description>
                ZFolderBean for create folder.
            </description>
            <name>var</name>
            <required>true</required>
        </attribute>
        <attribute>
            <description>parent id of new folder</description>
            <name>parentid</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>name of folder to create</description>
            <name>name</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>color of folder: orange, blue, cyan, green, purple, red, yellow, pink, gray</description>
            <name>color</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>default view of new folder: appointment, contact, conversation, message, wiki</description>
            <name>view</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>flags for new folder</description>
            <name>flags</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>RSS/Atom URL for new folder</description>
            <name>url</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>        
    </tag>

    <tag>
        <description>
            Create a mountpoint
        </description>

        <name>createMountpoint</name>

        <tag-class>com.zimbra.cs.taglib.tag.folder.CreateMountpointTag</tag-class>

        <body-content>empty</body-content>

        <variable>
            <name-from-attribute>var</name-from-attribute>
            <variable-class>com.zimbra.cs.taglib.bean.ZFolderBean</variable-class>
            <scope>AT_BEGIN</scope>
        </variable>

        <attribute>
            <description>
                ZFolderBean for create mount point.
            </description>
            <name>var</name>
            <required>true</required>
        </attribute>
        <attribute>
            <description>parent id of new folder</description>
            <name>parentid</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>name of folder to create</description>
            <name>name</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>color of folder: orange, blue, cyan, green, purple, red, yellow, pink, gray</description>
            <name>color</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>default view of new folder: appointment, contact, conversation, message, wiki</description>
            <name>view</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>flags for new folder</description>
            <name>flags</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>OwnerBy value for owner: BY_ID, BY_NAME</description>
            <name>ownerby</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>owner value, either a name (email addresss), or Zimbra account id </description>
            <name>owner</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
                <attribute>
            <description>SharedItemBy value for shareditem: BY_ID, BY_PATH</description>
            <name>shareditemby</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>shareditem value, either a path, or Zimbra mail item id </description>
            <name>shareditem</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
    </tag>

    <tag>
        <description>
            Rename a folder
        </description>

        <name>renameFolder</name>

        <tag-class>com.zimbra.cs.taglib.tag.folder.RenameFolderTag</tag-class>

        <body-content>empty</body-content>

        <attribute>
            <description>
                id of folder to rename.
            </description>
            <name>id</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>new folder name </description>
            <name>newname</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
    </tag>

    <tag>
        <description>
            Modify folder color
        </description>

        <name>modifyFolderColor</name>

        <tag-class>com.zimbra.cs.taglib.tag.folder.ModifyFolderColorTag</tag-class>

        <body-content>empty</body-content>

        <attribute>
            <description>
                id of folder to modify
            </description>
            <name>id</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>new folder color </description>
            <name>color</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
    </tag>

    <tag>
        <description>
            Modify folder url
        </description>

        <name>modifyFolderUrl</name>

        <tag-class>com.zimbra.cs.taglib.tag.folder.ModifyFolderURLTag</tag-class>

        <body-content>empty</body-content>

        <attribute>
            <description>
                id of folder to modify
            </description>
            <name>id</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>new url</description>
            <name>url</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
    </tag>

    <tag>
        <description>
            Update multiple folders attributes
        </description>

        <name>updateFolder</name>

        <tag-class>com.zimbra.cs.taglib.tag.folder.UpdateFolderTag</tag-class>

        <body-content>empty</body-content>

        <attribute>
            <description>
                id of folder to modify
            </description>
            <name>id</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>new folder name </description>
            <name>name</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>new folder parent id</description>
            <name>parentid</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>new folder flags</description>
            <name>flags</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>new folder color </description>
            <name>color</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>new folder rgb value of color </description>
            <name>rgb</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
    </tag>

    <tag>
        <description>
            Update grants for a folder
        </description>

        <name>updateFolderGrant</name>

        <tag-class>com.zimbra.cs.taglib.tag.folder.UpdateFolderGrantTag</tag-class>

        <body-content>empty</body-content>

        <attribute>
            <description>
                id of folder to modify
            </description>
            <name>folderId</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                Name of folder to modify
            </description>
            <name>folderName</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                the grantor's id
            </description>
            <name>grantorId</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                the grantor's name
            </description>
            <name>grantorName</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>String of grants to update.</description>
            <name>updateGrantString</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
                <description>String of grants to revoke.</description>
                <name>revokeGrantString</name>
                <required>true</required>
                <rtexprvalue>true</rtexprvalue>
                <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>request var to put the results in </description>
            <name>var</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>

    </tag>

    <tag>
        <description>
            Modify folder free busy
        </description>

        <name>modifyFolderFreeBusy</name>

        <tag-class>com.zimbra.cs.taglib.tag.folder.ModifyFolderFreeBusyTag</tag-class>

        <body-content>empty</body-content>

        <attribute>
            <description>
                id of folder to modify
            </description>
            <name>id</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>exlucde from free/busy</description>
            <name>exclude</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>boolean</type>
        </attribute>
    </tag>

    <tag>
        <description>
            Move a folder.
        </description>

        <name>moveFolder</name>

        <tag-class>com.zimbra.cs.taglib.tag.folder.MoveFolderTag</tag-class>

        <body-content>empty</body-content>

        <attribute>
            <description>
                id of folder to move.
            </description>
            <name>id</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>new folder parent id</description>
            <name>parentid</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
    </tag>

    <tag>
        <description>
            Hard delete a folder. Use trashFolder to move a folder to the trash.
        </description>

        <name>deleteFolder</name>

        <tag-class>com.zimbra.cs.taglib.tag.folder.DeleteFolderTag</tag-class>

        <body-content>empty</body-content>

        <attribute>
            <description>
                id of folder to hard delete
            </description>
            <name>id</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
    </tag>

    <tag>
        <description>
            move the folder to the Trash, marking all contents as read and
            renaming the folder if a folder by that name is already present in the Trash

        </description>

        <name>trashFolder</name>

        <tag-class>com.zimbra.cs.taglib.tag.folder.TrashFolderTag</tag-class>

        <body-content>empty</body-content>

        <attribute>
            <description>
                id of folder to move to trash
            </description>
            <name>id</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
    </tag>

    <tag>
        <description>
            Mark all items in folder as read
        </description>

        <name>markFolderRead</name>

        <tag-class>com.zimbra.cs.taglib.tag.folder.MarkFolderReadTag</tag-class>

        <body-content>empty</body-content>

        <attribute>
            <description>
                id of folder to mark read.
            </description>
            <name>id</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
    </tag>

    <tag>
        <description>
            Check/uncheck folder (UI state)
        </description>

        <name>checkFolder</name>

        <tag-class>com.zimbra.cs.taglib.tag.folder.CheckFolderTag</tag-class>

        <body-content>empty</body-content>

        <attribute>
            <description>
                check/uncheck
            </description>
            <name>checked</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>

        <attribute>
            <description>
                id of folder to check/uncheck
            </description>
            <name>id</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
    </tag>

    <tag>
        <description>
            Empty all items/sub-folders in a folder
        </description>

        <name>emptyFolder</name>

        <tag-class>com.zimbra.cs.taglib.tag.folder.EmptyFolderTag</tag-class>

        <body-content>empty</body-content>

        <attribute>
            <description>
                id of folder to empty.
            </description>
            <name>id</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
    </tag>

    <tag>
        <description>
            sync the folder's contents to the remote feed specified by the folder's URL
        </description>

        <name>syncFolder</name>

        <tag-class>com.zimbra.cs.taglib.tag.folder.SyncFolderTag</tag-class>

        <body-content>empty</body-content>

        <attribute>
            <description>
                id of folder to sync
            </description>
            <name>id</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
    </tag>

    <tag>
        <description>
            Create a search folder
        </description>

        <name>createSearchFolder</name>

        <tag-class>com.zimbra.cs.taglib.tag.folder.CreateSearchFolderTag</tag-class>

        <body-content>empty</body-content>

        <variable>
            <name-from-attribute>var</name-from-attribute>
            <variable-class>com.zimbra.cs.taglib.bean.ZFolderBean</variable-class>
            <scope>AT_BEGIN</scope>
        </variable>

        <attribute>
            <description>
                ZFolderBean for created folder.
            </description>
            <name>var</name>
            <required>true</required>
        </attribute>
        <attribute>
            <description>parent id of new folder</description>
            <name>parentid</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>name of folder to create</description>
            <name>name</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>search query</description>
            <name>query</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>types to search for: conversation, message, contact, appointment, document, wiki </description>
            <name>types</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>sort order (dateDesc, dateAsc, subjDesc, subjAsc)</description>            
            <name>sort</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>color of folder: orange, blue, cyan, green, purple, red, yellow, pink, gray</description>
            <name>color</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
    </tag>

    <tag>
        <description>
             Modify prefs
        </description>

        <name>modifyPrefs</name>

        <tag-class>com.zimbra.cs.taglib.tag.ModifyPrefsTag</tag-class>

        <body-content>scriptless</body-content>

        <variable>
            <name-from-attribute>var</name-from-attribute>
            <variable-class>java.lang.Boolean</variable-class>
            <scope>AT_END</scope>
        </variable>

        <attribute>
            <description>
                set to true if any prefs were modified
            </description>
            <name>var</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>

     </tag>

    <tag>
         <description>
             A pref to modify
         </description>

         <name>pref</name>

         <tag-class>com.zimbra.cs.taglib.tag.PrefTag</tag-class>

         <body-content>empty</body-content>

         <attribute>
             <description>
                 Name of the pref.
             </description>
             <name>name</name>
             <required>true</required>
             <rtexprvalue>true</rtexprvalue>
         </attribute>
         <attribute>
             <description>
                Value of the pref.
             </description>
             <name>value</name>
             <required>true</required>
             <rtexprvalue>true</rtexprvalue>
         </attribute>
     </tag>

    <tag>
         <description>
             Redirects the response.
         </description>

         <name>redirect</name>

         <tag-class>com.zimbra.cs.taglib.tag.RedirectTag</tag-class>

         <body-content>empty</body-content>

         <attribute>
             <description>
                 Url to redirect to
             </description>
             <name>url</name>
             <required>true</required>
             <rtexprvalue>true</rtexprvalue>
         </attribute>
     </tag>

    <tag>
        <description>
            construct a filter rule object (for use with createFilterRule/modifyFilterRule)
        </description>

        <name>filterRule</name>

        <tag-class>com.zimbra.cs.taglib.tag.filter.FilterRuleTag</tag-class>

        <body-content>scriptless</body-content>

        <variable>
            <name-from-attribute>var</name-from-attribute>
            <variable-class>com.zimbra.client.ZFilterRule</variable-class>
            <scope>AT_END</scope>
        </variable>

        <attribute>
            <description>
                create filter
            </description>
            <name>var</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>name of filter rule.</description>
            <name>name</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
         <attribute>
             <description>whether rule is active or not</description>
             <name>active</name>
             <required>true</required>
             <rtexprvalue>true</rtexprvalue>
             <type>boolean</type>
         </attribute>
         <attribute>
             <description>whether all conditions must be met or not</description>
             <name>allconditions</name>
             <required>true</required>
             <rtexprvalue>true</rtexprvalue>
             <type>boolean</type>
         </attribute>
    </tag>

    <tag>
        <description>
            Whether or not an address in a header is in/not in address book.
        </description>

        <name>addressBookCondition</name>

        <tag-class>com.zimbra.cs.taglib.tag.filter.AddressBookConditionTag</tag-class>

        <body-content>empty</body-content>

        <attribute>
            <description>
                Name of header to check
            </description>
            <name>header</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
               operation (IN, NOT_IN)
            </description>
            <name>op</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
    </tag>

    <tag>
        <description>
            Whether or not a message has an attachment.
        </description>

        <name>attachmentExistsCondition</name>

        <tag-class>com.zimbra.cs.taglib.tag.filter.AttachmentExistsConditionTag</tag-class>

        <body-content>empty</body-content>

        <attribute>
            <description>
               operation (EXISTS, NOT_EXISTS)
            </description>
            <name>op</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
    </tag>

    <tag>
        <description>
            Whether or not the body contains specified text.
        </description>

        <name>bodyCondition</name>

        <tag-class>com.zimbra.cs.taglib.tag.filter.BodyConditionTag</tag-class>

        <body-content>empty</body-content>

        <attribute>
            <description>
                Value to check for
            </description>
            <name>value</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
               operation (CONTAINS, NOT_CONTAINS)
            </description>
            <name>op</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
    </tag>

    <tag>
        <description>
            Checks the date on the message.
        </description>

        <name>dateCondition</name>

        <tag-class>com.zimbra.cs.taglib.tag.filter.DateConditionTag</tag-class>

        <body-content>empty</body-content>

        <attribute>
            <description>
                Date value to check for (YYYYMMDD)
            </description>
            <name>value</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
               operation (BEFORE, NOT_BEFORE, AFTER, NOT_AFTER)
            </description>
            <name>op</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
    </tag>

    <tag>
        <description>
            Checks a header for a particular value.
        </description>

        <name>headerCondition</name>

        <tag-class>com.zimbra.cs.taglib.tag.filter.HeaderConditionTag</tag-class>

        <body-content>empty</body-content>

        <attribute>
            <description>
                Header name
            </description>
            <name>name</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>

        <attribute>
            <description>
                Header value to check for
            </description>
            <name>value</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
               operation (IS, NOT_IS, CONTAINS, NOT_CONTAINS, MATCHES, NOT_MATCHES)
            </description>
            <name>op</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
    </tag>

    <tag>
        <description>
            Header exists condition.
        </description>

        <name>headerExistsCondition</name>

        <tag-class>com.zimbra.cs.taglib.tag.filter.HeaderExistsConditionTag</tag-class>

        <body-content>empty</body-content>

        <attribute>
            <description>
                Header name
            </description>
            <name>name</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>

        <attribute>
            <description>
               operation (EXISTS, NOT_EXISTS)
            </description>
            <name>op</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
    </tag>

    <tag>
        <description>
            Checks an address for a particular value.
        </description>

        <name>addressCondition</name>

        <tag-class>com.zimbra.cs.taglib.tag.filter.AddressConditionTag</tag-class>

        <body-content>empty</body-content>

        <attribute>
            <description>
                Header name
            </description>
            <name>name</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                Address Part
            </description>
            <name>part</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                Header value to check for
            </description>
            <name>value</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
               operation (IS, NOT_IS, CONTAINS, NOT_CONTAINS, MATCHES, NOT_MATCHES)
            </description>
            <name>op</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
    </tag>

    <tag>
        <description>
            Size condition.
        </description>

        <name>sizeCondition</name>

        <tag-class>com.zimbra.cs.taglib.tag.filter.SizeConditionTag</tag-class>

        <body-content>empty</body-content>

        <attribute>
            <description>
                Value of size (10B, 10K, 10M)
            </description>
            <name>value</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
               Size operation (UNDER, NOT_UNDER, OVER, NOT_OVER)
            </description>
            <name>op</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
    </tag>

    <tag>
        <description>
            Keep action.
        </description>

        <name>keepAction</name>

        <tag-class>com.zimbra.cs.taglib.tag.filter.KeepActionTag</tag-class>
        <body-content>empty</body-content>
    </tag>

    <tag>
        <description>
            Stop action.
        </description>

        <name>stopAction</name>

        <tag-class>com.zimbra.cs.taglib.tag.filter.StopActionTag</tag-class>
        <body-content>empty</body-content>
    </tag>

    <tag>
        <description>
            Discard action.
        </description>

        <name>discardAction</name>

        <tag-class>com.zimbra.cs.taglib.tag.filter.DiscardActionTag</tag-class>
        <body-content>empty</body-content>
    </tag>

    <tag>
        <description>
            Tag action.
        </description>

        <name>tagAction</name>

        <tag-class>com.zimbra.cs.taglib.tag.filter.TagActionTag</tag-class>

        <body-content>empty</body-content>

        <attribute>
            <description>
                Tag name.
            </description>
            <name>tag</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
    </tag>

    <tag>
        <description>
            FileInto action.
        </description>

        <name>fileIntoAction</name>

        <tag-class>com.zimbra.cs.taglib.tag.filter.FileIntoActionTag</tag-class>

        <body-content>empty</body-content>

        <attribute>
            <description>
               Path name (Inbox, Foo/Bar, etc)
            </description>
            <name>path</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
    </tag>

    <tag>
        <description>
            Mark action.
        </description>

        <name>markAction</name>

        <tag-class>com.zimbra.cs.taglib.tag.filter.MarkActionTag</tag-class>

        <body-content>empty</body-content>

        <attribute>
            <description>
               op (READ, FLAGGED)
            </description>
            <name>op</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
    </tag>

    <tag>
        <description>
            Redirect action.
        </description>

        <name>redirectAction</name>

        <tag-class>com.zimbra.cs.taglib.tag.filter.RedirectActionTag</tag-class>

        <body-content>empty</body-content>

        <attribute>
            <description>
               address to redirect to
            </description>
            <name>address</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
    </tag>

    <tag>
        <description>
            create a filter rule
        </description>

        <name>createFilterRule</name>

        <tag-class>com.zimbra.cs.taglib.tag.filter.CreateFilterRuleTag</tag-class>

        <body-content>empty</body-content>

        <attribute>
            <description>
                the rule to create
            </description>
            <name>rule</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>com.zimbra.client.ZFilterRule</type>
        </attribute>
    </tag>

    <tag>
        <description>
            modify a filter rule
        </description>

        <name>modifyFilterRule</name>

        <tag-class>com.zimbra.cs.taglib.tag.filter.ModifyFilterRuleTag</tag-class>

        <body-content>empty</body-content>

        <attribute>
            <description>
                the rule to modify
            </description>
            <name>rule</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>com.zimbra.client.ZFilterRule</type>
        </attribute>

        <attribute>
            <description>
                original filter name (to detect renames)
            </description>
            <name>originalname</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
    </tag>

    <tag>
        <description>
            delete a filter rule
        </description>

        <name>deleteFilterRule</name>

        <tag-class>com.zimbra.cs.taglib.tag.filter.DeleteFilterRuleTag</tag-class>

        <body-content>empty</body-content>

        <attribute>
            <description>
                the rule to delete
            </description>
            <name>name</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
    </tag>

    <tag>
        <description>
            move a filter rule
        </description>

        <name>moveFilterRule</name>

        <tag-class>com.zimbra.cs.taglib.tag.filter.MoveFilterRuleTag</tag-class>

        <body-content>empty</body-content>

        <attribute>
            <description>
                the rule to delete
            </description>
            <name>name</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>

        <attribute>
            <description>
                the direction to move the rule: up (towards the front of the list) or down (towards the end of the list)
            </description>
            <name>direction</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
    </tag>


    <tag>
        <description>
           get rid of the invalid mountpoints, either the user does not exist or has deleted the shared folder.
        </description>

        <name>getValidFolderIds</name>

        <tag-class>com.zimbra.cs.taglib.tag.calendar.GetValidFolderIdsTag</tag-class>

        <body-content>scriptless</body-content>

        <variable>
            <name-from-attribute>var</name-from-attribute>
            <variable-class>java.lang.String</variable-class>
            <scope>AT_END</scope>
        </variable>

        <variable>
            <name-from-attribute>varexception</name-from-attribute>
            <variable-class>com.zimbra.common.service.ServiceException</variable-class>
            <scope>AT_END</scope>
        </variable>

        <attribute>
            <description>ZMailboxBean object to use</description>
            <name>box</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>com.zimbra.cs.taglib.bean.ZMailboxBean</type>
        </attribute>

        <attribute>
            <description>
                comma-separated list of folder ids, a mix of local folders and mountpoints.
            </description>
            <name>folderid</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>

        <attribute>
            <description>
                list of valid existing folder-ids
            </description>
            <name>var</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>

        <attribute>
            <description>
                variable to store service exception, otherwise it is thrown.
            </description>
            <name>varexception</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
    </tag>
    
    <tag>
        <description>
           get appointments that fall with the specified range.
        </description>

        <name>getAppointmentSummaries</name>

        <tag-class>com.zimbra.cs.taglib.tag.calendar.GetAppointmentSummariesTag</tag-class>

        <body-content>scriptless</body-content>

        <variable>
            <name-from-attribute>var</name-from-attribute>
            <variable-class>com.zimbra.cs.taglib.bean.ZApptSummariesBean</variable-class>
            <scope>AT_END</scope>
        </variable>

        <variable>
            <name-from-attribute>varexception</name-from-attribute>
            <variable-class>com.zimbra.common.service.ServiceException</variable-class>
            <scope>AT_END</scope>
        </variable>

        <attribute>
            <description>
                get appointment summaries for the specified time range
            </description>
            <name>var</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>

        <attribute>
            <description>
                variable to store service exception, otherwise it is thrown.
            </description>
            <name>varexception</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>

        <attribute>
            <description>starting time in msecs</description>
            <name>start</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>

        <attribute>
            <description>ending time in msecs</description>
            <name>end</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>

        <attribute>
            <description>timezone to compute correct start/end time for all day appts</description>
            <name>timezone</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.util.TimeZone</type>
        </attribute>

        <attribute>
            <description>ZMailboxBean object to use</description>
            <name>box</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>com.zimbra.cs.taglib.bean.ZMailboxBean</type>
        </attribute>

        <attribute>
            <description>
                comma-separated list of folder ids to get summaries for. If not specified, get appts for
                all calendar folders that are checked in the UI.
            </description>
            <name>folderid</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                search query to limit set of appts returned.
            </description>
            <name>query</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
    </tag>


    <tag>
        <description>
           get appointments that fall with the specified range.
        </description>

        <name>getMiniCal</name>

        <tag-class>com.zimbra.cs.taglib.tag.calendar.GetMiniCalTag</tag-class>

        <body-content>scriptless</body-content>

        <variable>
            <name-from-attribute>var</name-from-attribute>
            <variable-class>com.zimbra.cs.taglib.bean.ZMiniCalBean</variable-class>
            <scope>AT_END</scope>
        </variable>

        <variable>
            <name-from-attribute>varexception</name-from-attribute>
            <variable-class>com.zimbra.common.service.ServiceException</variable-class>
            <scope>AT_END</scope>
        </variable>

        <attribute>
            <description>
                get hash of dates with appointment summaries for the specified time range
            </description>
            <name>var</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>

        <attribute>
            <description>
                variable to store service exception, otherwise it is thrown.
            </description>
            <name>varexception</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>

        <attribute>
            <description>starting time in msecs</description>
            <name>start</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>

        <attribute>
            <description>ending time in msecs</description>
            <name>end</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>

        <attribute>
            <description>ZMailboxBean object to use</description>
            <name>box</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>com.zimbra.cs.taglib.bean.ZMailboxBean</type>
        </attribute>

        <attribute>
            <description>
                comma-separated list of folder ids to get dates with appts for. If not specified, get appts for
                all calendar folders that are checked in the UI.
            </description>
            <name>folderid</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
    </tag>

    <tag>
        <description>
           get free busy for specified email address and return as appointment hits
        </description>

        <name>getFreeBusyAppointments</name>

        <tag-class>com.zimbra.cs.taglib.tag.calendar.GetFreeBusyAppointmentsTag</tag-class>

        <body-content>scriptless</body-content>

        <variable>
            <name-from-attribute>var</name-from-attribute>
            <variable-class>com.zimbra.cs.taglib.bean.ZApptSummariesBean</variable-class>
            <scope>AT_END</scope>
        </variable>

        <variable>
            <name-from-attribute>varexception</name-from-attribute>
            <variable-class>com.zimbra.common.service.ServiceException</variable-class>
            <scope>AT_END</scope>
        </variable>

        <attribute>
            <description>
                get appointment summaries for the specified time range
            </description>
            <name>var</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>

        <attribute>
            <description>
                variable to store service exception, otherwise it is thrown.
            </description>
            <name>varexception</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>

        <attribute>
            <description>starting time in msecs</description>
            <name>start</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>

        <attribute>
            <description>ending time in msecs</description>
            <name>end</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>

        <attribute>
            <description>
                folder to request free/busy for.  If not specified get free/busy for all calendar folders.
            </description>
            <name>folderid</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>

        <attribute>
            <description>email address to get free busy for</description>
            <name>email</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>

        <attribute>
            <description>ZMailboxBean object to use</description>
            <name>box</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>com.zimbra.cs.taglib.bean.ZMailboxBean</type>
        </attribute>
    </tag>

    <tag>
        <description>
            Iterates over an appointment list. If start and end are specified,
            only return appointments within that range.  
        </description>
        <name>forEachAppoinment</name>
        <tag-class>com.zimbra.cs.taglib.tag.calendar.ForEachAppointmentTag</tag-class>
        <body-content>scriptless</body-content>
        <variable>
            <name-from-attribute>var</name-from-attribute>
            <variable-class>com.zimbra.client.ZAppointmentHit</variable-class>
            <scope>NESTED</scope>
        </variable>
        <attribute>
            <description>
                Name of the exported scoped variable for the
                current item of the iteration.
            </description>
            <name>var</name>
            <required>true</required>
        </attribute>

        <attribute>
            <description>
                appointments (from getAppointmentSummaries) to iterate over
            </description>
            <name>appointments</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>com.zimbra.cs.taglib.bean.ZApptSummariesBean</type>
        </attribute>

        <attribute>
            <description>starting time in msecs</description>
            <name>start</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>

        <attribute>
            <description>ending time in msecs</description>
            <name>end</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>

    </tag>

    <tag>
        <description>
            Compute appointment row layout. If start and end are specified,
            only return appointments within that range.
        </description>
        <name>apptMultiDayLayout</name>
        <tag-class>com.zimbra.cs.taglib.tag.calendar.ApptMultiDayLayoutTag</tag-class>
        <body-content>empty</body-content>
        <variable>
            <name-from-attribute>var</name-from-attribute>
            <variable-class>com.zimbra.cs.taglib.bean.ZApptMultiDayLayoutBean</variable-class>
            <scope>AT_END</scope>
        </variable>
        <attribute>
            <description>
                Name of the exported scoped variable for the
                current item of the iteration.
            </description>
            <name>var</name>
            <required>true</required>
        </attribute>

        <attribute>
            <description>
                appointments (from getAppointmentSummaries) to iterate over
            </description>
            <name>appointments</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>com.zimbra.cs.taglib.bean.ZApptSummariesBean</type>
        </attribute>

        <attribute>
            <description>starting time in msecs</description>
            <name>start</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>

        <attribute>
            <description>number of days to layout</description>
            <name>days</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>

        <attribute>
            <description>number of work days</description>
            <name>wdays</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
       </attribute>

        <attribute>
            <description>day from which the week starts</description>
            <name>weekStart</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>

        <attribute>
            <description>default starting hour, inclusive </description>
            <name>hourstart</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>

        <attribute>
            <description>default ending hour, exclusive</description>
            <name>hourend</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>

        <attribute>
            <description>default starting minute, inclusive </description>
            <name>minstart</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>

        <attribute>
            <description>default ending minute, exclusive</description>
            <name>minend</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>

        <attribute>
            <description>
                comma-separated list of folder ids to compute schedule (side-by-side) layout data for.
            </description>
            <name>schedule</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>

        <attribute>
            <description>timezone to compute correct start/end time for all day appts</description>
            <name>timezone</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.util.TimeZone</type>
        </attribute>

        <attribute>
            <description>print request</description>
            <name>isprint</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>

        <attribute>
            <description>whether to show declined meetings</description>
            <name>isShowDeclined</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>

    </tag>

    <tag>
        <description>
            clears the appt summary cache.
        </description>

        <name>clearApptSummaryCache</name>

        <tag-class>com.zimbra.cs.taglib.tag.ClearApptSummaryCacheTag</tag-class>

        <body-content>empty</body-content>
    </tag>

    <tag>
         <description>create/modify an appointment</description>
         <name>saveAppointment</name>
         <tag-class>com.zimbra.cs.taglib.tag.calendar.SaveAppointmentTag</tag-class>
         <body-content>empty</body-content>
         <variable>
             <name-from-attribute>var</name-from-attribute>
             <variable-class>com.zimbra.client.ZMailbox.ZAppointmentResult</variable-class>
             <scope>AT_END</scope>
         </variable>
         <attribute>
             <description>
                 Name of the exported scoped variable for the result.
             </description>
             <name>var</name>
             <required>true</required>
         </attribute>
         <attribute>
              <description>
                  message compose bean to use.
              </description>
              <name>compose</name>
              <required>false</required>
              <rtexprvalue>true</rtexprvalue>
              <type>com.zimbra.cs.taglib.bean.ZMessageComposeBean</type>
          </attribute>
        <attribute>
             <description>
                 existing appointment if we are modifying
             </description>
             <name>message</name>
             <required>false</required>
             <rtexprvalue>true</rtexprvalue>
             <type>com.zimbra.cs.taglib.bean.ZMessageBean</type>
         </attribute>
     </tag>

    <tag>
        <description>cancel an appointment</description>
        <name>cancelAppointment</name>
        <tag-class>com.zimbra.cs.taglib.tag.calendar.CancelAppointmentTag</tag-class>
        <body-content>empty</body-content>
        <attribute>
            <description>
                message compose bean to use.
            </description>
            <name>compose</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>com.zimbra.cs.taglib.bean.ZMessageComposeBean</type>
        </attribute>
        <attribute>
            <description>
                existing appointment
            </description>
            <name>message</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>com.zimbra.cs.taglib.bean.ZMessageBean</type>
        </attribute>
        <attribute>
            <description>
                cancel a particular instance. time in msecs. not used if compose is specified.
            </description>
            <name>instance</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
    </tag>



    <tag>
        <description>
            Retrieves an array of the tasks for a given task list (folder)
        </description>
        <name>retrieveTasks</name>
        <tag-class>com.zimbra.cs.taglib.tag.RetrieveTasksTag</tag-class>
        <body-content>empty</body-content>
        <variable>
            <name-from-attribute>var</name-from-attribute>
            <variable-class>com.zimbra.cs.taglib.tag.SearchContext</variable-class>
            <scope>AT_END</scope>
        </variable>
        <attribute>
            <description>
                Name of the exported scoped variable for the result.
            </description>
            <name>var</name>
            <required>true</required>
        </attribute>
        <attribute>
            <description>
                The task list that contains the desired tasks
            </description>
            <name>tasklist</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>com.zimbra.cs.taglib.bean.ZFolderBean</type>
        </attribute>
    </tag>



    <tag>
         <description>create/modify a task</description>
         <name>saveTask</name>
         <tag-class>com.zimbra.cs.taglib.tag.task.SaveTaskTag</tag-class>
         <body-content>empty</body-content>
         <variable>
             <name-from-attribute>var</name-from-attribute>
             <variable-class>com.zimbra.client.ZMailbox.ZAppointmentResult</variable-class>
             <scope>AT_END</scope>
         </variable>
         <attribute>
             <description>
                 Name of the exported scoped variable for the result.
             </description>
             <name>var</name>
             <required>true</required>
         </attribute>
         <attribute>
              <description>
                  message compose bean to use.
              </description>
              <name>compose</name>
              <required>false</required>
              <rtexprvalue>true</rtexprvalue>
              <type>com.zimbra.cs.taglib.bean.ZMessageComposeBean</type>
          </attribute>
        <attribute>
             <description>
                 existing task if we are modifying
             </description>
             <name>message</name>
             <required>false</required>
             <rtexprvalue>true</rtexprvalue>
             <type>com.zimbra.cs.taglib.bean.ZMessageBean</type>
         </attribute>
     </tag>

    <tag>
        <description>cancel a task</description>
        <name>cancelTask</name>
        <tag-class>com.zimbra.cs.taglib.tag.task.CancelTaskTag</tag-class>
        <body-content>empty</body-content>
        <attribute>
            <description>
                message compose bean to use.
            </description>
            <name>compose</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>com.zimbra.cs.taglib.bean.ZMessageComposeBean</type>
        </attribute>
        <attribute>
            <description>
                existing task
            </description>
            <name>message</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>com.zimbra.cs.taglib.bean.ZMessageBean</type>
        </attribute>
        <attribute>
            <description>
                cancel a particular instance. time in msecs. not used if compose is specified.
            </description>
            <name>instance</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
    </tag>

    <tag>
        <description>create a briefcase</description>
        <name>saveBriefcase</name>
        <tag-class>com.zimbra.cs.taglib.tag.briefcase.SaveBriefcaseTag</tag-class>
        <body-content>empty</body-content>
        <variable>
            <name-from-attribute>var</name-from-attribute>
            <variable-class>java.lang.String[]</variable-class>
            <scope>AT_END</scope>
        </variable>
        <attribute>
            <description>
                Name of the exported scoped variable for the result.
            </description>
            <name>var</name>
            <required>true</required>
        </attribute>
        <attribute>
              <description>
                  message compose bean to use.
              </description>
              <name>compose</name>
              <required>false</required>
              <rtexprvalue>true</rtexprvalue>
              <type>com.zimbra.cs.taglib.bean.ZMessageComposeBean</type>
        </attribute>
        <attribute>
             <description>destination folder id</description>
             <name>folderId</name>
             <required>false</required>
             <rtexprvalue>true</rtexprvalue>
             <type>java.lang.String</type>
        </attribute>
    </tag>

    <tag>
        <description>delete(s) item in briefcase</description>

        <name>deleteBriefcase</name>

        <tag-class>com.zimbra.cs.taglib.tag.briefcase.DeleteBriefcaseTag</tag-class>

        <body-content>empty</body-content>

        <variable>
            <name-from-attribute>var</name-from-attribute>
            <variable-class>com.zimbra.cs.taglib.bean.ZActionResultBean</variable-class>
            <scope>AT_END</scope>
        </variable>

        <attribute>
            <description>
                Name of the exported scoped variable to store the ZActionResultBean in.
            </description>
            <name>var</name>
            <required>true</required>
        </attribute>
         <attribute>
             <description>briefcase id(s) to delete</description>
             <name>id</name>
             <required>true</required>
             <rtexprvalue>true</rtexprvalue>
             <type>java.lang.String</type>
         </attribute>
    </tag>

    <tag>
        <description>get briefcase info</description>
        <name>getBriefcase</name>
        <tag-class>com.zimbra.cs.taglib.tag.briefcase.GetBriefcaseTag</tag-class>
        <body-content>empty</body-content>
        <variable>
            <name-from-attribute>varSearch</name-from-attribute>
            <variable-class>com.zimbra.cs.taglib.bean.ZSearchResultBean</variable-class>
            <scope>AT_END</scope>
        </variable>
        <variable>
            <name-from-attribute>varFolder</name-from-attribute>
            <variable-class>com.zimbra.cs.taglib.bean.ZFolderBean</variable-class>
            <scope>AT_END</scope>
        </variable>
        <attribute>
            <description>ZMailboxBean object to use</description>
            <name>box</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>com.zimbra.cs.taglib.bean.ZMailboxBean</type>
        </attribute>
        <attribute>
            <description>
                target account id for use with REST HTML rendering.
            </description>
            <name>resttargetaccountid</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
        <attribute>
            <description>timezone to compute correct start/end time for all day appts</description>
            <name>timezone</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.util.TimeZone</type>
        </attribute>
        <attribute>
        <description>
                Name of the exported scoped variable for the search result.
            </description>
            <name>varSearch</name>
            <required>true</required>
        </attribute>
        <attribute>
        <description>
                Name of the exported scoped variable for the briefcase folder details.
            </description>
            <name>varFolder</name>
            <required>true</required>
        </attribute>
        <attribute>
            <description>briefcase folder id</description>
            <name>id</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
      </tag>

    <tag>
        <description>get document info</description>
        <name>getDocument</name>
        <tag-class>com.zimbra.cs.taglib.tag.briefcase.GetDocumentTag</tag-class>
        <body-content>empty</body-content>
        <variable>
            <name-from-attribute>var</name-from-attribute>
            <variable-class>com.zimbra.cs.taglib.bean.ZDocumentBean</variable-class>
            <scope>AT_END</scope>
        </variable>
        <attribute>
            <description>ZMailboxBean object to use</description>
            <name>box</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>com.zimbra.cs.taglib.bean.ZMailboxBean</type>
        </attribute>
        <attribute>
        <description>
                Name of the exported scoped variable for the result.
            </description>
            <name>var</name>
            <required>true</required>
        </attribute>
        <attribute>
            <description>document id</description>
            <name>id</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
    </tag>

    <tag>
        <description>get document content</description>
        <name>getDocumentContent</name>
        <tag-class>com.zimbra.cs.taglib.tag.briefcase.GetDocumentContentTag</tag-class>
        <body-content>empty</body-content>
        <variable>
            <name-from-attribute>var</name-from-attribute>
            <variable-class>java.lang.String</variable-class>
            <scope>AT_END</scope>
        </variable>
        <attribute>
            <description>ZMailboxBean object to use</description>
            <name>box</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>com.zimbra.cs.taglib.bean.ZMailboxBean</type>
        </attribute>
        <attribute>
            <description>
                Name of the exported scoped variable for the result String.
            </description>
            <name>var</name>
            <required>true</required>
        </attribute>
        <attribute>
            <description>document id</description>
            <name>id</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
         <attribute>
            <description>charset eg. UTF-8 (default), ISO-8859-1 etc.</description>
            <name>charset</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
    </tag>
    
    <tag>
        <description>Save attachments as documents to a briefcase folder</description>
        <name>saveAttachmentsToBriefcase</name>
        <tag-class>com.zimbra.cs.taglib.tag.msg.SaveAttachmentsToBriefcaseTag</tag-class>
        <body-content>empty</body-content>
        <attribute>
             <description>
                 Name of the exported scoped variable for the result.
             </description>
             <name>var</name>
             <required>true</required>
         </attribute>
        <attribute>
            <description>Message id</description>
            <name>mid</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
        <attribute>
            <description>
                Part id 
            </description>
            <name>partId</name>
            <rtexprvalue>true</rtexprvalue>
            <required>true</required>
        </attribute>
        <attribute>
            <description>Briefcase folder id</description>
            <name>folderId</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
    </tag>

    <tag>
        <description>
            Move an item to a folder.
        </description>

        <name>moveItem</name>

        <tag-class>com.zimbra.cs.taglib.tag.item.MoveItemTag</tag-class>

        <body-content>empty</body-content>

        <variable>
            <name-from-attribute>var</name-from-attribute>
            <variable-class>com.zimbra.cs.taglib.bean.ZActionResultBean</variable-class>
            <scope>AT_END</scope>
        </variable>

        <attribute>
            <description>
                Name of the exported scoped variable to store the ZActionResultBean in.
            </description>
            <name>var</name>
            <required>true</required>
        </attribute>
        <attribute>
            <description>
                <![CDATA[
                   [-]{constraint} = list of characters; constrains the set of affected items in a conversation <br />
                   t - include items in the Trash <br />
                   j - include items in Spam/Junk<br />
                   s - include items in the user's Sent folder (not necessarily "Sent")<br />
                   o - include items in any other folder<br />
                   a leading '-' means to negate the constraint (e.g. "-t" means all messages not in Trash)<br />
                 ]]>
            </description>
            <name>tc</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>item id(s) to move</description>
            <name>id</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
         <attribute>
             <description>destination folder id</description>
             <name>folderid</name>
             <required>true</required>
             <rtexprvalue>true</rtexprvalue>
             <type>java.lang.String</type>
         </attribute>
    </tag>

    <tag>
         <description>import contacts</description>
         <name>importContacts</name>
         <tag-class>com.zimbra.cs.taglib.tag.contact.ImportContactsTag</tag-class>
         <body-content>empty</body-content>
         <variable>
             <name-from-attribute>var</name-from-attribute>
             <variable-class>com.zimbra.client.ZMailbox.ZImportContactsResult</variable-class>
             <scope>AT_END</scope>
         </variable>
         <attribute>
             <description>
                 Name of the exported scoped variable for the result.
             </description>
             <name>var</name>
             <required>true</required>
         </attribute>
         <attribute>
              <description>
                  file uploader bean to use.
              </description>
              <name>uploader</name>
              <required>true</required>
              <rtexprvalue>true</rtexprvalue>
              <type>com.zimbra.cs.taglib.bean.ZFileUploaderBean</type>
          </attribute>
        <attribute>
             <description>
                 folder id to import into.
             </description>
             <name>folderid</name>
             <required>true</required>
             <rtexprvalue>true</rtexprvalue>
             <type>java.lang.String</type>
         </attribute>
        <attribute>
             <description>
                 type of data being imported. "csv" is currently the only supported format.
             </description>
             <name>type</name>
             <required>false</required>
             <rtexprvalue>true</rtexprvalue>
             <type>java.lang.String</type>
         </attribute>
     </tag>

    <tag>
         <description>import appointments</description>
         <name>importAppointments</name>
         <tag-class>com.zimbra.cs.taglib.tag.calendar.ImportAppointmentsTag</tag-class>
         <body-content>empty</body-content>
         <variable>
             <name-from-attribute>var</name-from-attribute>
             <variable-class>com.zimbra.client.ZMailbox.ZImportAppointmentsResult</variable-class>
             <scope>AT_END</scope>
         </variable>
         <attribute>
             <description>
                 Name of the exported scoped variable for the result.
             </description>
             <name>var</name>
             <required>true</required>
         </attribute>
         <attribute>
              <description>
                  file uploader bean to use.
              </description>
              <name>uploader</name>
              <required>true</required>
              <rtexprvalue>true</rtexprvalue>
              <type>com.zimbra.cs.taglib.bean.ZFileUploaderBean</type>
          </attribute>
        <attribute>
             <description>
                 folder id to import into.
             </description>
             <name>folderid</name>
             <required>true</required>
             <rtexprvalue>true</rtexprvalue>
             <type>java.lang.String</type>
         </attribute>
        <attribute>
             <description>
                 type of data being imported. "ics" is currently the only supported format.
             </description>
             <name>type</name>
             <required>false</required>
             <rtexprvalue>true</rtexprvalue>
             <type>java.lang.String</type>
         </attribute>
    </tag>

    <tag>
        <description>
            Flag/unflag an item
        </description>

        <name>flagItem</name>

        <tag-class>com.zimbra.cs.taglib.tag.item.FlagItemTag</tag-class>

        <body-content>empty</body-content>

        <variable>
            <name-from-attribute>var</name-from-attribute>
            <variable-class>com.zimbra.cs.taglib.bean.ZActionResultBean</variable-class>
            <scope>AT_END</scope>
        </variable>

        <attribute>
            <description>
                Name of the exported scoped variable to store the ZActionResultBean in.
            </description>
            <name>var</name>
            <required>true</required>
        </attribute>
        <attribute>
            <description>
                <![CDATA[
                   [-]{constraint} = list of characters; constrains the set of affected items in a conversation <br />
                   t - include items in the Trash <br />
                   j - include items in Spam/Junk<br />
                   s - include items in the user's Sent folder (not necessarily "Sent")<br />
                   o - include items in any other folder<br />
                   a leading '-' means to negate the constraint (e.g. "-t" means all messages not in Trash)<br />
                 ]]>
            </description>
            <name>tc</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>

        <attribute>
            <description>item id(s) to flag/unflag</description>
            <name>id</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
         <attribute>
             <description>flag state (true=flagged, false=unflagged)</description>
             <name>flag</name>
             <required>true</required>
             <rtexprvalue>true</rtexprvalue>
             <type>boolean</type>
         </attribute>
    </tag>

    <tag>
        <description>
            Tag an item.
        </description>

        <name>tagItem</name>

        <tag-class>com.zimbra.cs.taglib.tag.item.TagItemTag</tag-class>

        <body-content>empty</body-content>

        <variable>
            <name-from-attribute>var</name-from-attribute>
            <variable-class>com.zimbra.cs.taglib.bean.ZActionResultBean</variable-class>
            <scope>AT_END</scope>
        </variable>

        <attribute>
            <description>
                Name of the exported scoped variable to store the ZActionResultBean in.
            </description>
            <name>var</name>
            <required>true</required>
        </attribute>
        <attribute>
            <description>
                <![CDATA[
                   [-]{constraint} = list of characters; constrains the set of affected items in a conversation <br />
                   t - include items in the Trash <br />
                   j - include items in Spam/Junk<br />
                   s - include items in the user's Sent folder (not necessarily "Sent")<br />
                   o - include items in any other folder<br />
                   a leading '-' means to negate the constraint (e.g. "-t" means all messages not in Trash)<br />
                 ]]>
            </description>
            <name>tc</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>item id(s) to tag</description>
            <name>id</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
         <attribute>
             <description>tag id</description>
             <name>tagid</name>
             <required>true</required>
             <rtexprvalue>true</rtexprvalue>
             <type>java.lang.String</type>
         </attribute>
        <attribute>
            <description>tag state (true=tag, false=untag)</description>
            <name>tag</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>boolean</type>
        </attribute>
    </tag>

    <tag>
        <description>
            Bind a key to a particular action.
        </description>

        <name>bindKey</name>

        <tag-class>com.zimbra.cs.taglib.tag.BindKeyTag</tag-class>

        <body-content>empty</body-content>

        <attribute>
            <description>
                id of anchor tag to get when key is pressed.
            </description>
            <name>id</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
        <attribute>
            <description>
                reference to function to call when key is pressed.
            </description>
            <name>func</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
        <attribute>
            <description>
                URL to go to when key is pressed.
            </description>
            <name>url</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
        <attribute>
            <description>
               key sequence to bind
            </description>
            <name>key</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
        <attribute>
            <description>
               name of a message property that contains the key sequence to bind
            </description>
            <name>message</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
        <attribute>
            <description>
               basename of message property file to use with message attribute.
            </description>
            <name>basename</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
        <attribute>
            <description>
               generate shortcut aliases. one of: gototag, tag, gotofolder, folder, search.
            </description>
            <name>alias</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
    </tag>

	<tag>
		<description>
			Checks if voice account information is available.
		</description>

		<name>checkVoiceStatus</name>

		<tag-class>com.zimbra.cs.taglib.tag.voice.CheckVoiceStatusTag</tag-class>

		<body-content>empty</body-content>

		<variable>
			<name-from-attribute>var</name-from-attribute>
			<variable-class>java.lang.Boolean</variable-class>
			<scope>AT_END</scope>
		</variable>

		<attribute>
			<description>
				Name of the exported scoped variable to store the status in.
			</description>
			<name>var</name>
			<required>true</required>
		</attribute>
	</tag>

	<tag>
		<description>
			Moves voice mail messages to the trash
		</description>

		<name>trashVoiceMail</name>

		<tag-class>com.zimbra.cs.taglib.tag.voice.TrashVoiceMailTag</tag-class>

		<body-content>empty</body-content>

		<variable>
			<name-from-attribute>var</name-from-attribute>
			<variable-class>com.zimbra.cs.taglib.bean.ZActionResultBean</variable-class>
			<scope>AT_END</scope>
		</variable>

		<attribute>
			<description>
				Name of the exported scoped variable to store the ZActionResultBean in.
			</description>
			<name>var</name>
			<required>true</required>
		</attribute>

		<attribute>
			<description>
				comma-separated ids of messages to delete.
			</description>
			<name>id</name>
			<required>true</required>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>
				Name of phone account
			</description>
			<name>phone</name>
			<required>true</required>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
	</tag>

	<tag>
		<description>
			Moves voice mail messages from the trash to the voice mail inbox
		</description>

		<name>untrashVoiceMail</name>

		<tag-class>com.zimbra.cs.taglib.tag.voice.UntrashVoiceMailTag</tag-class>

		<body-content>empty</body-content>

		<variable>
			<name-from-attribute>var</name-from-attribute>
			<variable-class>com.zimbra.cs.taglib.bean.ZActionResultBean</variable-class>
			<scope>AT_END</scope>
		</variable>

		<attribute>
			<description>
				Name of the exported scoped variable to store the ZActionResultBean in.
			</description>
			<name>var</name>
			<required>true</required>
		</attribute>

		<attribute>
			<description>
				comma-separated ids of messages to undelete.
			</description>
			<name>id</name>
			<required>true</required>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>
				Name of phone account
			</description>
			<name>phone</name>
			<required>true</required>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
	</tag>

    <tag>
        <description>
            Empties a voice mail trash folder
        </description>

        <name>emptyVoiceMailTrash</name>

        <tag-class>com.zimbra.cs.taglib.tag.voice.EmptyVoiceMailTrashTag</tag-class>

        <body-content>empty</body-content>

        <variable>
            <name-from-attribute>var</name-from-attribute>
            <variable-class>com.zimbra.cs.taglib.bean.ZActionResultBean</variable-class>
            <scope>AT_END</scope>
        </variable>

        <attribute>
            <description>
                Name of the exported scoped variable to store the ZActionResultBean in.
            </description>
            <name>var</name>
            <required>true</required>
        </attribute>

        <attribute>
            <description>
                Id of the trash folder
            </description>
            <name>folderId</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                Name of phone account
            </description>
            <name>phone</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
    </tag>

    <tag>
        <description>
            Marks voice mail messages as heard or unheard
        </description>

        <name>markVoiceMailHeard</name>

        <tag-class>com.zimbra.cs.taglib.tag.voice.MarkVoiceMailHeardTag</tag-class>

        <body-content>empty</body-content>

        <variable>
            <name-from-attribute>var</name-from-attribute>
            <variable-class>com.zimbra.cs.taglib.bean.ZActionResultBean</variable-class>
            <scope>AT_END</scope>
        </variable>

        <attribute>
            <description>
                Name of the exported scoped variable to store the ZActionResultBean in.
            </description>
            <name>var</name>
            <required>true</required>
        </attribute>

        <attribute>
            <description>
                comma-separated ids of messages to mark.
            </description>
            <name>id</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                Name of phone account
            </description>
            <name>phone</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                true to mark messages heard
            </description>
            <name>heard</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.Boolean</type>
        </attribute>
    </tag>

    <tag>
        <description>
            Uploads the body of a voice mail message for use as an email attachment.
        </description>

        <name>uploadVoiceMail</name>

        <tag-class>com.zimbra.cs.taglib.tag.voice.UploadVoiceMailTag</tag-class>

        <body-content>empty</body-content>

        <variable>
            <name-from-attribute>var</name-from-attribute>
            <variable-class>java.lang.String</variable-class>
            <scope>AT_END</scope>
        </variable>

        <attribute>
            <description>
                Name of the exported scoped variable to store the attachment id in.
            </description>
            <name>var</name>
            <required>true</required>
        </attribute>

        <attribute>
            <description>
                comma-separated ids of messages to upload.
            </description>
            <name>id</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                Name of phone account
            </description>
            <name>phone</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
    </tag>

    <tag>
        <description>
            Creates a call features object
        </description>

        <name>createCallFeatures</name>

        <tag-class>com.zimbra.cs.taglib.tag.voice.CreateCallFeaturesTag</tag-class>

        <body-content>empty</body-content>

        <variable>
            <name-from-attribute>var</name-from-attribute>
            <variable-class>com.zimbra.cs.taglib.bean.ZCallFeaturesBean</variable-class>
            <scope>AT_END</scope>
        </variable>

        <attribute>
            <description>
                Call features
            </description>
            <name>var</name>
            <required>true</required>
        </attribute>

        <attribute>
            <description>
                Name of phone account
            </description>
            <name>phone</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>

        <attribute>
            <description>
                Is email notification active.
            </description>
            <name>emailnotificationactive</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>

        <attribute>
            <description>
                Email notification address.
            </description>
            <name>emailnotificationaddress</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>

        <attribute>
            <description>
                Is call forwarding active.
            </description>
            <name>callforwardingactive</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>

        <attribute>
            <description>
                Call forwarding number
            </description>
            <name>callforwardingforwardto</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>

        <attribute>
            <description>
                Is selective call forwarding active.
            </description>
            <name>selectivecallforwardingactive</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>

        <attribute>
            <description>
                Selective call forwarding "forward to" number
            </description>
            <name>selectivecallforwardingforwardto</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>

        <attribute>
            <description>
                Selective call forwarding "forward from" numbers
            </description>
            <name>selectivecallforwardingforwardfrom</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.Object</type>
        </attribute>

    </tag>

  <tag>
        <description>
    	    Interface for ZPhone    
        </description>

        <name>phone</name>

        <tag-class>com.zimbra.cs.taglib.tag.voice.PhoneTag</tag-class>

        <body-content>empty</body-content>

        <variable>
            <name-from-attribute>var</name-from-attribute>
            <variable-class>java.lang.Boolean</variable-class>
            <scope>AT_END</scope>
        </variable>

        <attribute>
            <description>
		Name of the variable that says whether the phone number is valid
            </description>
            <name>var</name>
            <required>false</required>
        </attribute>

	<attribute>
            <description>
                Name of phone account
            </description>
            <name>name</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>

	<attribute>
            <description>
                Name of the var that will hold the formatted phone number
            </description>
            <name>displayVar</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>

	<attribute>
            <description>
                Name of the var that will hold any error strings
            </description>
            <name>errorVar</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
    </tag>

    <tag>
        <description>
            Changes the voice prefs.
        </description>

        <name>modifyCallFeatures</name>

        <tag-class>com.zimbra.cs.taglib.tag.voice.ModifyCallFeaturesTag</tag-class>

        <body-content>empty</body-content>

        <variable>
            <name-from-attribute>var</name-from-attribute>
            <variable-class>java.lang.Boolean</variable-class>
            <scope>AT_END</scope>
        </variable>

        <attribute>
            <description>
                Name of the variable that says whether anything changed.
            </description>
            <name>var</name>
            <required>true</required>
        </attribute>

        <attribute>
            <description>
                Name of phone account
            </description>
            <name>phone</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>

        <attribute>
            <description>
                Is email notification active.
            </description>
            <name>emailnotificationactive</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>

        <attribute>
            <description>
                Email notification address.
            </description>
            <name>emailnotificationaddress</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>

        <attribute>
            <description>
                Notification on transfer
            </description>
            <name>emailNotifTrans</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>

        <attribute>
            <description>
                Notification on attach
            </description>
            <name>emailNotifAttach</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>

        <attribute>
            <description>
                Is call forwarding active.
            </description>
            <name>callforwardingactive</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>

        <attribute>
            <description>
                Call forwarding number
            </description>
            <name>callforwardingforwardto</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>

        <attribute>
            <description>
                Is selective call forwarding active.
            </description>
            <name>selectivecallforwardingactive</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>

        <attribute>
            <description>
                Selective call forwarding "forward to" number
            </description>
            <name>selectivecallforwardingforwardto</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>

        <attribute>
            <description>
                Selective call forwarding "forward from" numbers
            </description>
            <name>selectivecallforwardingforwardfrom</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.Object</type>
        </attribute>

        <attribute>
            <description>
                Anonymous Call rejection
            </description>
            <name>anonymouscallrejectionactive</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>

        <attribute>
            <description>
                Is selective call rejection active.
            </description>
            <name>selectivecallrejectionactive</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>

        <attribute>
            <description>
                Selective call rejection "reject from" numbers
            </description>
            <name>selectivecallrejectionrejectfrom</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.Object</type>
        </attribute>

        <attribute>
            <description>
                Number of voice items per page
            </description>
            <name>numberPerPage</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>

	<attribute>
            <description>
                Call forwarding retention
            </description>
            <name>numberOfRings</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>

	<attribute>
	    <description>
		Automatically play messages when entering UI
	    </description>
	    <name>autoPlayNewMsgs</name>
	    <required>false</required>
	    <rtexprvalue>true</rtexprvalue>
	    <type>java.lang.String</type>
	</attribute>

	<attribute>
	    <description>
		Play date and time as part of messages
	    </description>
	    <name>playDateAndTimeInMsgEnv</name>
	    <required>false</required>
	    <rtexprvalue>true</rtexprvalue>
	    <type>java.lang.String</type>
	</attribute>

	<attribute>
	    <description>
		Skip pin entry
	    </description>
	    <name>skipPinEntry</name>
	    <required>false</required>
	    <rtexprvalue>true</rtexprvalue>
	    <type>java.lang.String</type>
	</attribute>

	<attribute>
	    <description>
		Require pin entry (opposite of the above)
	    </description>
	    <name>requirePinEntry</name>
	    <required>false</required>
	    <rtexprvalue>true</rtexprvalue>
	    <type>java.lang.String</type>
	</attribute>

	<attribute>
	    <description>
		Play caller name when playing messages
	    </description>
	    <name>playCallerNameInMsgEnv</name>
	    <required>false</required>
	    <rtexprvalue>true</rtexprvalue>
	    <type>java.lang.String</type>
	</attribute>

	<attribute>
	    <description>
		Automatically play new messages in UI?
	    </description>
	    <name>autoPlayNewMsgs</name>
	    <required>false</required>
	    <rtexprvalue>true</rtexprvalue>
	    <type>java.lang.String</type>
	</attribute>

	<attribute>
	    <description>
		Prompt length
	    </description>
	    <name>promptLevel</name>
	    <required>false</required>
	    <rtexprvalue>true</rtexprvalue>
	    <type>java.lang.String</type>
	</attribute>

	<attribute>
	    <description>
		Outgoing message language
	    </description>
	    <name>answeringLocale</name>
	    <required>false</required>
	    <rtexprvalue>true</rtexprvalue>
	    <type>java.lang.String</type>
	</attribute>

	<attribute>
	    <description>
		Checking message language
	    </description>
	    <name>userLocale</name>
	    <required>false</required>
	    <rtexprvalue>true</rtexprvalue>
	    <type>java.lang.String</type>
	</attribute>
    </tag>

    <tag>
        <description>
            Adds the phone numbers of voice mail/call log entries to selective call rejection.
        </description>

        <name>addToRejectFeature</name>

        <tag-class>com.zimbra.cs.taglib.tag.voice.AddToRejectFeatureTag</tag-class>

        <body-content>empty</body-content>

        <variable>
            <name-from-attribute>var</name-from-attribute>
            <variable-class>java.lang.Integer</variable-class>
            <scope>AT_END</scope>
        </variable>

        <attribute>
            <description>
                Name of the variable that says how many numbers were successfully added
            </description>
            <name>var</name>
            <required>false</required>
        </attribute>

        <attribute>
            <description>
                Name of phone account
            </description>
            <name>phone</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>

        <attribute>
            <description>
                Id array of voice mail entries
            </description>
            <name>voiceId</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String[]</type>
        </attribute>

        <attribute>
            <description>
                Output variable for error constants (constants of ZPhone and ZCallFeatures)
            </description>
            <name>error</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>

	<attribute>
            <description>
                Max entries in list (defaults to 12 if unset)
            </description>
            <name>max</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
    </tag>



    <tag>
        <description>
            Adds the phone numbers of voice mail/call log entries to selective call forwarding.
        </description>

        <name>addToForwardFeature</name>

        <tag-class>com.zimbra.cs.taglib.tag.voice.AddToForwardFeatureTag</tag-class>

        <body-content>empty</body-content>

        <variable>
            <name-from-attribute>var</name-from-attribute>
            <variable-class>java.lang.Integer</variable-class>
            <scope>AT_END</scope>
        </variable>

        <attribute>
            <description>
                Name of the variable that says how many numbers were successfully added
            </description>
            <name>var</name>
            <required>false</required>
        </attribute>

        <attribute>
            <description>
                Name of phone account
            </description>
            <name>phone</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>

        <attribute>
            <description>
                Id array of voice mail entries
            </description>
            <name>voiceId</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String[]</type>
        </attribute>

        <attribute>
            <description>
                Output variable for error constants (constants of ZPhone and ZCallFeatures)
            </description>
            <name>error</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>

	<attribute>
            <description>
                Max entries in list (defaults to 12 if unset)
            </description>
            <name>max</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
    </tag>

    <tag>
        <description>
            Handles lists associated with phone numbers. Implements a Hashmap of ArrayLists:
            HashMap(String, ArrayList(String, String))
            entries in the hashmap are referred to by the [phone] attribute, and the map may be inspected in jsp as mapvar[phonenumber] (this would yield an iteratable list whose length may be found with fn:length())
            If the input map is null, a new map will be created.
            After every call, the map is outputted in the var variable (to be stored and used again as input to the tag)
        </description>

        <name>listObject</name>

        <tag-class>com.zimbra.cs.taglib.tag.voice.ListObjectTag</tag-class>

        <body-content>empty</body-content>

        <variable>
            <name-from-attribute>var</name-from-attribute>
            <variable-class>java.util.HashMap</variable-class>
            <scope>AT_END</scope>
        </variable>

        <attribute>
            <description>
                Output variable name to save resulting map into
            </description>
            <name>var</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>

        <attribute>
            <description>
                Scope to save output variables into
            </description>
            <name>scope</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>

        <attribute>
            <description>
                Name of phone account
            </description>
            <name>phone</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>

        <attribute>
            <description>
                Output variable name to save a comma-separated String into
            </description>
            <name>csep</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>

        <attribute>
            <description>
                Output variable name to save a String array into
            </description>
            <name>strArr</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
	
	<attribute>
            <description>
                Map to edit
            </description>
            <name>map</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.util.HashMap</type>
        </attribute>

	<attribute>
            <description>
                Value to add
            </description>
            <name>add</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>

	<attribute>
            <description>
                Value to remove, if found
            </description>
            <name>remove</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>

	<attribute>
            <description>
                Set to true to clear all elements from the list
            </description>
            <name>clear</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.Boolean</type>
        </attribute>
    </tag>

    <tag>
        <description>
            Determines if a given locale tag is a valid available locale
        </description>
        <name>getValidLocale</name>
        <tag-class>com.zimbra.cs.taglib.tag.i18n.GetValidLocaleTag</tag-class>
        <body-content>empty</body-content>
        <attribute>
            <description>
                A String value is interpreted as the
                printable representation of a locale, which
                must contain a two-letter (lower-case)
                language code (as defined by ISO-639),
                and may contain a two-letter (upper-case)
                country code (as defined by ISO-3166).
                Language and country codes must be
                separated by hyphen (-) or underscore
                (_).
            </description>
            <name>locale</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
        <attribute>
            <description>
                Name of the return value
            </description>
            <name>var</name>
            <required>true</required>
        </attribute>
    </tag>
    
	<!-- These tags are copied from jstl.tld because we implement our own
	     versions but want to keep API compatibility. -->
	<!--
	<tag>
	  <description>
		  Loads a resource bundle and stores it in the named scoped variable or
		  the bundle configuration variable
	  </description>
	  <name>setBundle</name>
	  <tag-class>com.zimbra.cs.taglib.tag.i18n.SetBundleTag</tag-class>
	  <body-content>empty</body-content>
	  <attribute>
		  <description>
  Resource bundle base name. This is the bundle's
  fully-qualified resource name, which has the same
  form as a fully-qualified class name, that is, it uses
  "." as the package component separator and does not
  have any file type (such as ".class" or ".properties")
  suffix.
		  </description>
		  <name>basename</name>
		  <required>true</required>
		  <rtexprvalue>true</rtexprvalue>
	  </attribute>
	  <attribute>
		  <description>
  Name of the exported scoped variable which stores
  the i18n localization context of type
  javax.servlet.jsp.jstl.fmt.LocalizationC
  ontext.
		  </description>
		  <name>var</name>
		  <required>false</required>
		  <rtexprvalue>false</rtexprvalue>
	  </attribute>
	  <attribute>
		  <description>
  Scope of var or the localization context
  configuration variable.
		  </description>
		  <name>scope</name>
		  <required>false</required>
		  <rtexprvalue>false</rtexprvalue>
	  </attribute>
	</tag>
	<tag>
	  <description>
		  Stores the given locale in the locale configuration variable
	  </description>
	  <name>setLocale</name>
	  <tag-class>com.zimbra.cs.taglib.tag.i18n.SetLocaleTag</tag-class>
	  <body-content>empty</body-content>
	  <attribute>
		  <description>
  A String value is interpreted as the
  printable representation of a locale, which
  must contain a two-letter (lower-case)
  language code (as defined by ISO-639),
  and may contain a two-letter (upper-case)
  country code (as defined by ISO-3166).
  Language and country codes must be
  separated by hyphen (-) or underscore
  (_).
	  </description>
		  <name>value</name>
		  <required>true</required>
		  <rtexprvalue>true</rtexprvalue>
	  </attribute>
	  <attribute>
		  <description>
  Vendor- or browser-specific variant.
  See the java.util.Locale javadocs for
  more information on variants.
		  </description>
		  <name>variant</name>
		  <required>false</required>
		  <rtexprvalue>true</rtexprvalue>
	  </attribute>
	  <attribute>
		  <description>
  Scope of the locale configuration variable.
		  </description>
		  <name>scope</name>
		  <required>false</required>
		  <rtexprvalue>false</rtexprvalue>
	  </attribute>
	</tag>
	<tag>
	  <description>
		  Maps key to localized message and performs parametric replacement
	  </description>
	  <name>message</name>
	  <tag-class>com.zimbra.cs.taglib.tag.i18n.MessageTag</tag-class>
	  <body-content>JSP</body-content>
	  <attribute>
		  <description>
  Message key to be looked up.
		  </description>
		  <name>key</name>
		  <required>false</required>
		  <rtexprvalue>true</rtexprvalue>
	  </attribute>
	  <attribute>
		  <description>
  Localization context in whose resource
  bundle the message key is looked up.
		  </description>
		  <name>bundle</name>
		  <required>false</required>
		  <rtexprvalue>true</rtexprvalue>
	  </attribute>
	  <attribute>
		  <description>
  Name of the exported scoped variable
  which stores the localized message.
		  </description>
		  <name>var</name>
		  <required>false</required>
		  <rtexprvalue>false</rtexprvalue>
	  </attribute>
	  <attribute>
		  <description>
  Scope of var.
		  </description>
		  <name>scope</name>
		  <required>false</required>
		  <rtexprvalue>false</rtexprvalue>
	  </attribute>
	</tag>
	<tag>
	  <description>
		  Supplies an argument for parametric replacement to a containing
		  &lt;message&gt; tag
	  </description>
	  <name>param</name>
	  <tag-class>com.zimbra.cs.taglib.tag.i18n.ParamTag</tag-class>
	  <body-content>JSP</body-content>
	  <attribute>
		  <description>
  Argument used for parametric replacement.
		  </description>
		  <name>value</name>
		  <required>false</required>
		  <rtexprvalue>true</rtexprvalue>
	  </attribute>
	</tag>
	-->

    <tag-file>
        <name>currentResultUrl</name>
        <path>/META-INF/tags/currentResultUrl.tag</path>
    </tag-file>

    <tag-file>
        <name>newSortUrl</name>
        <path>/META-INF/tags/newSortUrl.tag</path>
    </tag-file>

    <tag-file>
        <name>nextResultUrl</name>
        <path>/META-INF/tags/nextResultUrl.tag</path>
    </tag-file>

    <tag-file>
        <name>prevResultUrl</name>
        <path>/META-INF/tags/prevResultUrl.tag</path>
    </tag-file>

    <tag-file>
        <name>prevItemUrl</name>
        <path>/META-INF/tags/prevItemUrl.tag</path>
    </tag-file>

    <tag-file>
        <name>nextItemUrl</name>
        <path>/META-INF/tags/nextItemUrl.tag</path>
    </tag-file>

    <function>
        <description>Fetch the group member, given the id of the contact</description>
        <name>groupMemberById</name>
        <function-class>com.zimbra.cs.taglib.bean.ZContactBean</function-class>
        <function-signature>com.zimbra.cs.taglib.bean.ZContactBean getGroupMemberById(com.zimbra.cs.taglib.bean.ZContactBean, java.lang.String)</function-signature>
    </function>

    <function>
        <description>Used to determine if any of the specified fields are set in a contact</description>
        <name>anySet</name>
        <function-class>com.zimbra.cs.taglib.bean.ZContactBean</function-class>
        <function-signature>boolean anySet(com.zimbra.cs.taglib.bean.ZContactBean,java.lang.String)</function-signature>
        <example>
                        <![CDATA[ ]]>

            <![CDATA[

            <c:if test="${zm:anySet(contact,'email email2 email3')}">
              ...
            </c:if>

            ]]>
<![CDATA[ ]]>            
        </example>
    </function>

    <function>
        <name>equalsIgnoreCase</name>
        <function-class>com.zimbra.cs.taglib.bean.BeanUtils</function-class>
        <function-signature>boolean equalsIgnoreCase(java.lang.String,java.lang.String)</function-signature>
    </function>

    <function>
        <name>truncate</name>
        <function-class>com.zimbra.cs.taglib.bean.BeanUtils</function-class>
        <function-signature>java.lang.String truncate(java.lang.String,int,boolean)</function-signature>
    </function>

    <function>
        <name>truncateFixed</name>
        <function-class>com.zimbra.cs.taglib.bean.BeanUtils</function-class>
        <function-signature>java.lang.String truncateFixed(java.lang.String,int,boolean)</function-signature>
    </function>

    <function>
        <name>joinLines</name>
        <function-class>com.zimbra.cs.taglib.bean.BeanUtils</function-class>
        <function-signature>java.lang.String joinLines(java.lang.String,java.lang.String)</function-signature>
    </function>

    <function>
        <name>displaySize</name>
        <function-class>com.zimbra.cs.taglib.bean.BeanUtils</function-class>
        <function-signature>java.lang.String displaySize(javax.servlet.jsp.PageContext, long)</function-signature>
    </function>

    <function>
        <name>displaySizeFractions</name>
        <function-class>com.zimbra.cs.taglib.bean.BeanUtils</function-class>
        <function-signature>java.lang.String displaySize(javax.servlet.jsp.PageContext, long, int)</function-signature>
    </function>

    <function>
        <name>displaySizePercentage</name>
        <function-class>com.zimbra.cs.taglib.bean.BeanUtils</function-class>
        <function-signature>java.lang.String displaySizePercent(long, long)</function-signature>
    </function>

    <function>
        <name>displayDuration</name>
        <function-class>com.zimbra.cs.taglib.bean.BeanUtils</function-class>
        <function-signature>java.lang.String
            displayDuration(javax.servlet.jsp.PageContext,long)</function-signature>
    </function>

    <function>
        <name>displayMsgDate</name>
        <function-class>com.zimbra.cs.taglib.bean.BeanUtils</function-class>
        <function-signature>java.lang.String
            displayMsgDate(javax.servlet.jsp.PageContext,java.util.Date)</function-signature>
    </function>

    <function>
        <name>displayVoiceDate</name>
        <function-class>com.zimbra.cs.taglib.bean.BeanUtils</function-class>
        <function-signature>java.lang.String
            displayVoiceDate(javax.servlet.jsp.PageContext,java.util.Date)</function-signature>
    </function>

    <function>
        <name>displayDate</name>
        <function-class>com.zimbra.cs.taglib.bean.BeanUtils</function-class>
        <function-signature>java.lang.String
            displayDate(javax.servlet.jsp.PageContext,java.util.Date)</function-signature>
    </function>

    <function>
        <name>getTags</name>
        <function-class>com.zimbra.cs.taglib.bean.BeanUtils</function-class>
        <function-signature>java.util.List&lt;com.zimbra.cs.taglib.bean.ZTagBean&gt;
            getTags(javax.servlet.jsp.PageContext,java.lang.String)</function-signature>
    </function>

    <function>
        <name>getAvailableTags</name>
        <function-class>com.zimbra.cs.taglib.bean.BeanUtils</function-class>
        <function-signature>java.util.List&lt;com.zimbra.cs.taglib.bean.ZTagBean&gt;
            getAvailableTags(javax.servlet.jsp.PageContext,java.lang.String,boolean)
        </function-signature>
    </function>

    <function>
        <name>getDateFormatSymbols</name>
        <function-class>com.zimbra.cs.taglib.bean.BeanUtils</function-class>
        <function-signature>java.text.DateFormatSymbols
            getDateFormatSymbols(java.util.Locale,javax.servlet.jsp.PageContext)
        </function-signature>
    </function>

    <function>
        <name>getTagNames</name>
        <function-class>com.zimbra.cs.taglib.bean.BeanUtils</function-class>
        <function-signature>java.lang.String
            getTagNames(javax.servlet.jsp.PageContext,java.lang.String)</function-signature>
    </function>


    <function>
        <name>getTagName</name>
        <function-class>com.zimbra.cs.taglib.bean.BeanUtils</function-class>
        <function-signature>java.lang.String
            getTagName(javax.servlet.jsp.PageContext,java.lang.String)</function-signature>
    </function>

    <function>
        <name>getTag</name>
        <function-class>com.zimbra.cs.taglib.bean.BeanUtils</function-class>
        <function-signature>com.zimbra.cs.taglib.bean.ZTagBean getTag(javax.servlet.jsp.PageContext,java.lang.String)</function-signature>
    </function>

    <function>
        <name>getTruncatedFolderName</name>
        <function-class>com.zimbra.cs.taglib.bean.BeanUtils</function-class>
        <function-signature>java.lang.String
            getTruncatedFolderName(javax.servlet.jsp.PageContext,java.lang.String,int,boolean)</function-signature>
    </function>

    <function>
        <name>getFolderName</name>
        <function-class>com.zimbra.cs.taglib.bean.BeanUtils</function-class>
        <function-signature>java.lang.String
            getFolderName(javax.servlet.jsp.PageContext,java.lang.String)</function-signature>
    </function>

    <function>
        <name>getUncookedFolderName</name>
        <function-class>com.zimbra.cs.taglib.bean.BeanUtils</function-class>
        <function-signature>java.lang.String
            getUncookedFolderName(javax.servlet.jsp.PageContext,java.lang.String)</function-signature>
    </function>

    <function>
        <name>getFolderPath</name>
        <function-class>com.zimbra.cs.taglib.bean.BeanUtils</function-class>
        <function-signature>java.lang.String
            getFolderPath(javax.servlet.jsp.PageContext,java.lang.String)</function-signature>
    </function>

    <function>
        <name>getTruncatedFolderPath</name>
        <function-class>com.zimbra.cs.taglib.bean.BeanUtils</function-class>
        <function-signature>java.lang.String
            getTruncatedFolderPath(javax.servlet.jsp.PageContext,java.lang.String,int,boolean)</function-signature>
    </function>

    <function>
        <name>getFolder</name>
        <function-class>com.zimbra.cs.taglib.bean.BeanUtils</function-class>
        <function-signature>
            com.zimbra.cs.taglib.bean.ZFolderBean getFolder(javax.servlet.jsp.PageContext,java.lang.String)
        </function-signature>
    </function>

    <function>
        <name>repeatString</name>
        <function-class>com.zimbra.cs.taglib.bean.BeanUtils</function-class>
        <function-signature>java.lang.String repeatString(java.lang.String, int)</function-signature>
    </function>

    <function>
        <name>encodeHtmlAttr</name>
        <function-class>com.zimbra.cs.taglib.bean.BeanUtils</function-class>
        <function-signature>java.lang.String encodeHtmlAttr(java.lang.String)</function-signature>
    </function>

    <function>
        <name>getEnvString</name>
        <function-class>com.zimbra.cs.taglib.bean.BeanUtils</function-class>
        <function-signature>java.lang.String getEnvString(java.lang.String, java.lang.String)</function-signature>
    </function>

    <function>
        <name>getUrlRand</name>
        <function-class>com.zimbra.cs.taglib.bean.BeanUtils</function-class>
        <function-signature>java.lang.String getUrlRand()</function-signature>
    </function>

    <function>
        <name>getPreLoginRedirectUrl</name>
        <function-class>com.zimbra.cs.taglib.ZJspSession</function-class>
        <function-signature>java.lang.String getPreLoginRedirectUrl(javax.servlet.jsp.PageContext, java.lang.String)</function-signature>
    </function>

    <function>
        <name>getChangePasswordUrl</name>
        <function-class>com.zimbra.cs.taglib.ZJspSession</function-class>
        <function-signature>java.lang.String getChangePasswordUrl(javax.servlet.jsp.PageContext,java.lang.String)</function-signature>
    </function>

    <function>
        <name>isAddressBookCondition</name>
        <function-class>com.zimbra.cs.taglib.bean.BeanUtils</function-class>
        <function-signature>boolean isAddressBook(com.zimbra.client.ZFilterCondition)</function-signature>
    </function>

	<function>
		<name>isProvOrAttr</name>
		<function-class>com.zimbra.cs.taglib.bean.BeanUtils</function-class>
        <function-signature>boolean isProvOrAttr(javax.servlet.jsp.PageContext, java.lang.String)</function-signature>
	</function>

    <function>
        <name>getAddressBook</name>
        <function-class>com.zimbra.cs.taglib.bean.BeanUtils</function-class>
        <function-signature>com.zimbra.client.ZFilterCondition.ZAddressBookCondition getAddressBook(com.zimbra.client.ZFilterCondition)</function-signature>
    </function>

    <function>
        <name>isAddressCondition</name>
        <function-class>com.zimbra.cs.taglib.bean.BeanUtils</function-class>
        <function-signature>boolean isAddress(com.zimbra.client.ZFilterCondition)</function-signature>
    </function>

    <function>
        <name>getAddress</name>
        <function-class>com.zimbra.cs.taglib.bean.BeanUtils</function-class>
        <function-signature>com.zimbra.client.ZFilterCondition.ZAddressCondition getAddress(com.zimbra.client.ZFilterCondition)</function-signature>
    </function>

    <function>
        <name>isBodyCondition</name>
        <function-class>com.zimbra.cs.taglib.bean.BeanUtils</function-class>
        <function-signature>boolean isBody(com.zimbra.client.ZFilterCondition)</function-signature>
    </function>

    <function>
        <name>getBody</name>
        <function-class>com.zimbra.cs.taglib.bean.BeanUtils</function-class>
        <function-signature>com.zimbra.client.ZFilterCondition.ZBodyCondition getBody(com.zimbra.client.ZFilterCondition)</function-signature>
    </function>

    <function>
        <name>isSizeCondition</name>
        <function-class>com.zimbra.cs.taglib.bean.BeanUtils</function-class>
        <function-signature>boolean isSize(com.zimbra.client.ZFilterCondition)</function-signature>
    </function>

    <function>
        <name>getSize</name>
        <function-class>com.zimbra.cs.taglib.bean.BeanUtils</function-class>
        <function-signature>com.zimbra.client.ZFilterCondition.ZSizeCondition getSize(com.zimbra.client.ZFilterCondition)</function-signature>
    </function>

    <function>
        <name>isDateCondition</name>
        <function-class>com.zimbra.cs.taglib.bean.BeanUtils</function-class>
        <function-signature>boolean isDate(com.zimbra.client.ZFilterCondition)</function-signature>
    </function>

    <function>
        <name>getDate</name>
        <function-class>com.zimbra.cs.taglib.bean.BeanUtils</function-class>
        <function-signature>com.zimbra.client.ZFilterCondition.ZDateCondition getDate(com.zimbra.client.ZFilterCondition)</function-signature>
    </function>

    <function>
        <name>isHeaderCondition</name>
        <function-class>com.zimbra.cs.taglib.bean.BeanUtils</function-class>
        <function-signature>boolean isHeader(com.zimbra.client.ZFilterCondition)</function-signature>
    </function>

    <function>
        <name>getHeader</name>
        <function-class>com.zimbra.cs.taglib.bean.BeanUtils</function-class>
        <function-signature>com.zimbra.client.ZFilterCondition.ZHeaderCondition getHeader(com.zimbra.client.ZFilterCondition)</function-signature>
    </function>

    <function>
        <name>isHeaderExistsCondition</name>
        <function-class>com.zimbra.cs.taglib.bean.BeanUtils</function-class>
        <function-signature>boolean isHeaderExists(com.zimbra.client.ZFilterCondition)</function-signature>
    </function>

    <function>
        <name>getHeaderExists</name>
        <function-class>com.zimbra.cs.taglib.bean.BeanUtils</function-class>
        <function-signature>com.zimbra.client.ZFilterCondition.ZHeaderExistsCondition getHeaderExists(com.zimbra.client.ZFilterCondition)</function-signature>
    </function>

    <function>
        <name>isAttachmentExistsCondition</name>
        <function-class>com.zimbra.cs.taglib.bean.BeanUtils</function-class>
        <function-signature>boolean isAttachmentExists(com.zimbra.client.ZFilterCondition)</function-signature>
    </function>

    <function>
        <name>getAttachmentExists</name>
        <function-class>com.zimbra.cs.taglib.bean.BeanUtils</function-class>
        <function-signature>com.zimbra.client.ZFilterCondition.ZAttachmentExistsCondition getAttachmentExists(com.zimbra.client.ZFilterCondition)</function-signature>
    </function>

    <function>
        <name>isCollection</name>
        <function-class>com.zimbra.cs.taglib.bean.BeanUtils</function-class>
        <function-signature>boolean isCollection(java.lang.Object)</function-signature>
    </function>

    <function>
        <name>isKeepAction</name>
        <function-class>com.zimbra.cs.taglib.bean.BeanUtils</function-class>
        <function-signature>boolean isKeep(com.zimbra.client.ZFilterAction)</function-signature>
    </function>

    <function>
        <name>isStopAction</name>
        <function-class>com.zimbra.cs.taglib.bean.BeanUtils</function-class>
        <function-signature>boolean isStop(com.zimbra.client.ZFilterAction)</function-signature>
    </function>

    <function>
        <name>isDiscardAction</name>
        <function-class>com.zimbra.cs.taglib.bean.BeanUtils</function-class>
        <function-signature>boolean isDiscard(com.zimbra.client.ZFilterAction)</function-signature>
    </function>

    <function>
        <name>isFileIntoAction</name>
        <function-class>com.zimbra.cs.taglib.bean.BeanUtils</function-class>
        <function-signature>boolean isFileInto(com.zimbra.client.ZFilterAction)</function-signature>
    </function>

    <function>
        <name>isTagAction</name>
        <function-class>com.zimbra.cs.taglib.bean.BeanUtils</function-class>
        <function-signature>boolean isTag(com.zimbra.client.ZFilterAction)</function-signature>
    </function>

    <function>
        <name>isFlagAction</name>
        <function-class>com.zimbra.cs.taglib.bean.BeanUtils</function-class>
        <function-signature>boolean isFlag(com.zimbra.client.ZFilterAction)</function-signature>
    </function>

    <function>
        <name>isRedirectAction</name>
        <function-class>com.zimbra.cs.taglib.bean.BeanUtils</function-class>
        <function-signature>boolean isRedirect(com.zimbra.client.ZFilterAction)</function-signature>
    </function>

    <function>
        <name>isDiscardActionFilter</name>
        <function-class>com.zimbra.cs.taglib.bean.BeanUtils</function-class>
        <function-signature>boolean isDiscardFilter(com.zimbra.client.ZFilterRule)</function-signature>
    </function>

    <function>
        <name>getTagAction</name>
        <function-class>com.zimbra.cs.taglib.bean.BeanUtils</function-class>
        <function-signature>com.zimbra.client.ZFilterAction.ZTagAction getTag(com.zimbra.client.ZFilterAction)</function-signature>
    </function>

    <function>
        <name>getFlagAction</name>
        <function-class>com.zimbra.cs.taglib.bean.BeanUtils</function-class>
        <function-signature>com.zimbra.client.ZFilterAction.ZMarkAction getFlag(com.zimbra.client.ZFilterAction)</function-signature>
    </function>

    <function>
        <name>getRedirectAction</name>
        <function-class>com.zimbra.cs.taglib.bean.BeanUtils</function-class>
        <function-signature>com.zimbra.client.ZFilterAction.ZRedirectAction getRedirect(com.zimbra.client.ZFilterAction)</function-signature>
    </function>

    <function>
        <name>getFileIntoAction</name>
        <function-class>com.zimbra.cs.taglib.bean.BeanUtils</function-class>
        <function-signature>com.zimbra.client.ZFilterAction.ZFileIntoAction getFileInto(com.zimbra.client.ZFilterAction)</function-signature>
    </function>

    <function>
        <name>getFirstDayOfMonthView</name>
        <function-class>com.zimbra.cs.taglib.bean.BeanUtils</function-class>
        <function-signature>java.util.Calendar getFirstDayOfMonthView(java.util.Calendar,long)</function-signature>
    </function>

    <function>
        <name>getFirstDayOfMultiDayView</name>
        <function-class>com.zimbra.cs.taglib.bean.BeanUtils</function-class>
        <function-signature>java.util.Calendar getFirstDayOfMultiDayView(java.util.Calendar,long,java.lang.String)</function-signature>
    </function>

    <function>
        <name>getStartOfMultiDayView</name>
        <function-class>com.zimbra.cs.taglib.bean.BeanUtils</function-class>
        <function-signature>java.util.Calendar getStartOfMultiDayView(java.util.Calendar,long,java.lang.String)</function-signature>
    </function>

    <function>
        <name>getCurrentDay</name>
        <function-class>com.zimbra.cs.taglib.bean.BeanUtils</function-class>
        <function-signature>java.util.Calendar getCurrentDay(java.util.Calendar)</function-signature>
    </function>

    <function>
        <name>getNextDay</name>
        <function-class>com.zimbra.cs.taglib.bean.BeanUtils</function-class>
        <function-signature>void getNextDay(java.util.Calendar)</function-signature>
    </function>

    <function>
        <name>addDay</name>
        <function-class>com.zimbra.cs.taglib.bean.BeanUtils</function-class>
        <function-signature>java.util.Calendar addDay(java.util.Calendar,int)</function-signature>
    </function>

    <function>
        <name>addMonth</name>
        <function-class>com.zimbra.cs.taglib.bean.BeanUtils</function-class>
        <function-signature>java.util.Calendar addMonth(java.util.Calendar,int)</function-signature>
    </function>

    <function>
        <name>addYear</name>
        <function-class>com.zimbra.cs.taglib.bean.BeanUtils</function-class>
        <function-signature>java.util.Calendar addYear(java.util.Calendar,int)</function-signature>
    </function>

    <function>
        <name>getCalendar</name>
        <function-class>com.zimbra.cs.taglib.bean.BeanUtils</function-class>
        <function-signature>java.util.Calendar getCalendar(long, java.util.TimeZone)</function-signature>
    </function>

    <function>
        <name>getCalendarMidnight</name>
        <function-class>com.zimbra.cs.taglib.bean.BeanUtils</function-class>
        <function-signature>java.util.Calendar getCalendarMidnight(long, java.util.TimeZone)</function-signature>
    </function>

    <function>
        <name>getToday</name>
        <function-class>com.zimbra.cs.taglib.bean.BeanUtils</function-class>
        <function-signature>java.util.Calendar getToday(java.util.TimeZone)</function-signature>
    </function>

    <function>
        <name>getTodayHour</name>
        <function-class>com.zimbra.cs.taglib.bean.BeanUtils</function-class>
        <function-signature>java.util.Calendar getTodayHour(int, java.util.TimeZone)</function-signature>
    </function>

    <function>
        <name>getCurrentTime</name>
        <function-class>com.zimbra.cs.taglib.bean.BeanUtils</function-class>
        <function-signature>java.util.Calendar getCurrentTime(java.util.TimeZone)</function-signature>
    </function>

    <function>
        <name>isSameDate</name>
        <function-class>com.zimbra.cs.taglib.bean.BeanUtils</function-class>
        <function-signature>boolean isSameDate(java.util.Calendar,java.util.Calendar)</function-signature>
    </function>

    <function>
        <name>isSameMonth</name>
        <function-class>com.zimbra.cs.taglib.bean.BeanUtils</function-class>
        <function-signature>boolean isSameMonth(java.util.Calendar,java.util.Calendar)</function-signature>
    </function>

    <function>
        <name>getNumDays</name>
        <function-class>com.zimbra.cs.taglib.bean.BeanUtils</function-class>
        <function-signature>int getNumDays(java.util.Calendar,java.util.Calendar)</function-signature>
    </function>

    <function>
        <name>getYear</name>
        <function-class>com.zimbra.cs.taglib.bean.BeanUtils</function-class>
        <function-signature>int getYear(java.util.Calendar)</function-signature>
    </function>

    <function>
        <name>getMonth</name>
        <function-class>com.zimbra.cs.taglib.bean.BeanUtils</function-class>
        <function-signature>int getMonth(java.util.Calendar)</function-signature>
    </function>

    <function>
        <name>getDay</name>
        <function-class>com.zimbra.cs.taglib.bean.BeanUtils</function-class>
        <function-signature>int getDay(java.util.Calendar)</function-signature>
    </function>

    <function>
        <name>getDayOfWeek</name>
        <function-class>com.zimbra.cs.taglib.bean.BeanUtils</function-class>
        <function-signature>int getDayOfWeek(java.util.Calendar)</function-signature>
    </function>

    <function>
        <name>relativeDay</name>
        <function-class>com.zimbra.cs.taglib.bean.BeanUtils</function-class>
        <function-signature>java.util.Calendar relativeDay(java.util.Calendar,int)</function-signature>
    </function>

    <function>
        <name>getCheckedCalendarFolderIds</name>
        <function-class>com.zimbra.cs.taglib.bean.BeanUtils</function-class>
        <function-signature>java.lang.String getCheckedCalendarFolderIds(com.zimbra.cs.taglib.bean.ZMailboxBean)</function-signature>
    </function>

    <function>
        <name>getCanonicalFolderIds</name>
        <function-class>com.zimbra.cs.taglib.bean.BeanUtils</function-class>
        <function-signature>java.lang.String getCanonicalFolderIds(com.zimbra.cs.taglib.bean.ZMailboxBean, java.lang.String)</function-signature>
    </function>

    <function>
        <name>getWorkDays</name>
        <function-class>com.zimbra.cs.taglib.bean.BeanUtils</function-class>
        <function-signature>java.util.List&lt;java.lang.Boolean&gt; getWorkDays(java.lang.String)</function-signature>
    </function>

    <function>
        <name>generateWorkWeek</name>
        <function-class>com.zimbra.cs.taglib.bean.BeanUtils</function-class>
        <function-signature>java.lang.String generateWorkWeek(java.lang.String, java.lang.String)</function-signature>
    </function>

    <function>
        <name>convertCalWorkHours</name>
        <function-class>com.zimbra.cs.taglib.bean.BeanUtils</function-class>
        <function-signature>java.lang.String convertCalWorkHours(java.lang.String)</function-signature>
    </function>

    <function>
        <name>hasAnyAppointments</name>
        <function-class>com.zimbra.cs.taglib.bean.BeanUtils</function-class>
        <function-signature>boolean hasAnyAppointments(com.zimbra.cs.taglib.bean.ZApptSummariesBean,long,long)</function-signature>
    </function>

    <function>
        <name>MSECS_PER_MINUTE</name>
        <function-class>com.zimbra.cs.taglib.bean.BeanUtils</function-class>
        <function-signature>long MSECS_PER_MINUTE()</function-signature>
    </function>

    <function>
        <name>MSECS_PER_HOUR</name>
        <function-class>com.zimbra.cs.taglib.bean.BeanUtils</function-class>
        <function-signature>long MSECS_PER_HOUR()</function-signature>
    </function>

    <function>
		<name>getCanonicalId</name>
        <function-class>com.zimbra.cs.taglib.bean.BeanUtils</function-class>
		<function-signature>java.lang.String getCanonicalId(java.util.TimeZone)</function-signature>
	</function>

    <function>
        <name>getFolderStyleColor</name>
        <function-class>com.zimbra.cs.taglib.bean.BeanUtils</function-class>
        <function-signature>java.lang.String getFolderStyleColor(java.lang.String,java.lang.String)</function-signature>
    </function>

    <function>
        <name>getFolderRgbColor</name>
        <function-class>com.zimbra.cs.taglib.bean.BeanUtils</function-class>
        <function-signature>java.lang.String getFolderRgbColor(java.lang.String,java.lang.String)</function-signature>
    </function>

    <function>
            <name>getFolderRgbColorMsg</name>
            <function-class>com.zimbra.cs.taglib.bean.BeanUtils</function-class>
            <function-signature>java.lang.String getFolderRgbColorMsg(java.lang.String,java.lang.String)</function-signature>
    </function>

    <function>
        <name>stripHtmlComments</name>
        <function-class>com.zimbra.cs.taglib.bean.BeanUtils</function-class>
        <function-signature>java.lang.String stripHtmlComments(java.lang.String)</function-signature>
    </function>

    <function>
        <name>getPartHtmlContent</name>
        <function-class>com.zimbra.cs.taglib.bean.ZMessageBean</function-class>
        <function-signature>java.lang.String getHtmlContent(com.zimbra.cs.taglib.bean.ZMimePartBean,com.zimbra.cs.taglib.bean.ZMessageBean)</function-signature>
    </function>

    <function>
        <name>getAdditionalBodies</name>
        <function-class>com.zimbra.cs.taglib.bean.ZMessageBean</function-class>
        <function-signature>java.util.List&lt;com.zimbra.cs.taglib.bean.ZMimePartBean&gt; getAdditionalBodies(com.zimbra.cs.taglib.bean.ZMimePartBean,com.zimbra.cs.taglib.bean.ZMessageBean)</function-signature>
    </function>

    <function>
        <name>getPart</name>
        <function-class>com.zimbra.cs.taglib.bean.ZMessageBean</function-class>
        <function-signature>com.zimbra.cs.taglib.bean.ZMimePartBean getPart(com.zimbra.cs.taglib.bean.ZMessageBean,java.lang.String)</function-signature>
    </function>

    <function>
        <name>actionSet</name>
        <function-class>com.zimbra.cs.taglib.bean.BeanUtils</function-class>
        <function-signature>boolean actionSet(java.util.Map,java.lang.String)</function-signature>
    </function>

    <function>
        <name>isSameTimeZone</name>
        <function-class>com.zimbra.cs.taglib.bean.BeanUtils</function-class>
        <function-signature>boolean isSameTimeZone(java.lang.String,java.lang.String)</function-signature>
    </function>

    <function>
        <name>getTimeZone</name>
        <function-class>com.zimbra.cs.taglib.bean.BeanUtils</function-class>
        <function-signature>java.util.TimeZone getTimeZone(java.lang.String)</function-signature>
    </function>

    <function>
        <name>setDayOfWeek</name>
        <function-class>com.zimbra.cs.taglib.bean.BeanUtils</function-class>
        <function-signature>void setDayOfWeek(java.util.Calendar,int)</function-signature>
    </function>

    <function>
        <name>setMonth</name>
        <function-class>com.zimbra.cs.taglib.bean.BeanUtils</function-class>
        <function-signature>void setMonth(java.util.Calendar,int)</function-signature>
    </function>

    <function>
        <name>getRepeatBlurb</name>
        <function-class>com.zimbra.cs.taglib.bean.BeanUtils</function-class>
        <function-signature>java.lang.String getRepeatBlurb(com.zimbra.client.ZSimpleRecurrence,javax.servlet.jsp.PageContext,java.util.TimeZone,java.util.Date)</function-signature>
    </function>

    <function>
        <name>getApptDateBlurb</name>
        <function-class>com.zimbra.cs.taglib.bean.BeanUtils</function-class>
        <function-signature>java.lang.String getApptDateBlurb(javax.servlet.jsp.PageContext,java.util.TimeZone,long,long,boolean)</function-signature>
    </function>

    <function>
        <name>getMyAttendee</name>
        <function-class>com.zimbra.cs.taglib.bean.BeanUtils</function-class>
        <function-signature>com.zimbra.client.ZInvite.ZAttendee getMyAttendee(com.zimbra.client.ZInvite,com.zimbra.cs.taglib.bean.ZMailboxBean)</function-signature>
    </function>

    <function>
        <name>clearMessageCache</name>
        <function-class>com.zimbra.cs.taglib.bean.BeanUtils</function-class>
        <function-signature>void clearMessageCache(com.zimbra.cs.taglib.bean.ZMailboxBean)</function-signature>
    </function>

    <function>
        <name>clearContactCache</name>
        <function-class>com.zimbra.cs.taglib.bean.BeanUtils</function-class>
        <function-signature>void clearContactCache(com.zimbra.cs.taglib.bean.ZMailboxBean)</function-signature>
    </function>

     <function>
        <name>clearApptSummaryCache</name>
        <function-class>com.zimbra.cs.taglib.bean.BeanUtils</function-class>
        <function-signature>void clearApptSummaryCache(com.zimbra.cs.taglib.bean.ZMailboxBean)</function-signature>
    </function>

    <function>
        <name>refreshPrefs</name>
        <function-class>com.zimbra.cs.taglib.bean.BeanUtils</function-class>
        <function-signature>void refreshPrefs(com.zimbra.cs.taglib.bean.ZMailboxBean)</function-signature>
    </function>

    <function>
        <name>hasShareMountPoint</name>
        <function-class>com.zimbra.cs.taglib.bean.BeanUtils</function-class>
        <function-signature>boolean hasShareMountPoint(com.zimbra.cs.taglib.bean.ZMailboxBean,com.zimbra.cs.taglib.bean.ZMessageBean)</function-signature>
    </function>

    <function>
        <name>jsEncode</name>
        <function-class>com.zimbra.cs.taglib.bean.BeanUtils</function-class>
        <function-signature>java.lang.String jsEncode(java.lang.String)</function-signature>
    </function>

    <function>
        <name>getVoiceFolderQuery</name>
        <function-class>com.zimbra.cs.taglib.bean.BeanUtils</function-class>
        <function-signature>java.lang.String getVoiceFolderQuery(com.zimbra.cs.taglib.bean.ZFolderBean)</function-signature>
    </function>

    <function>
        <name>getVoiceFolderType</name>
        <function-class>com.zimbra.cs.taglib.bean.BeanUtils</function-class>
        <function-signature>java.lang.String getVoiceFolderType(com.zimbra.cs.taglib.bean.ZFolderBean)</function-signature>
    </function>

    <function>
        <name>getVoiceFolderName</name>
        <function-class>com.zimbra.cs.taglib.bean.BeanUtils</function-class>
        <function-signature>java.lang.String getVoiceFolderName(javax.servlet.jsp.PageContext,com.zimbra.cs.taglib.bean.ZFolderBean)</function-signature>
    </function>

    <function>
        <name>getPhoneFromVoiceQuery</name>
        <function-class>com.zimbra.cs.taglib.bean.BeanUtils</function-class>
        <function-signature>java.lang.String getPhoneFromVoiceQuery(java.lang.String)</function-signature>
    </function>

    <function>
        <name>getPhoneDisplay</name>
        <function-class>com.zimbra.cs.taglib.bean.BeanUtils</function-class>
        <function-signature>java.lang.String getPhoneDisplay(java.lang.String)</function-signature>
    </function>

    <function>
        <name>deserializeVoiceMailItemHit</name>
        <function-class>com.zimbra.cs.taglib.bean.BeanUtils</function-class>
        <function-signature>com.zimbra.cs.taglib.bean.ZVoiceMailItemHitBean
            deserializeVoiceMailItemHit(java.lang.String,java.lang.String)
        </function-signature>
    </function>

    <function>
        <name>deserializeVoiceMailItemHits</name>
        <function-class>com.zimbra.cs.taglib.bean.BeanUtils</function-class>
        <function-signature>com.zimbra.cs.taglib.bean.ZVoiceMailItemHitBean[]
            deserializeVoiceMailItemHits(java.lang.String[],java.lang.String)
        </function-signature>
    </function>

    <function>
        <name>deserializeVoiceMailItemIds</name>
        <function-class>com.zimbra.cs.taglib.bean.BeanUtils</function-class>
        <function-signature>java.lang.String deserializeVoiceMailItemIds(java.lang.String[],java.lang.String)</function-signature>
    </function>

    <function>
        <name>getFirstPhoneAccount</name>
        <function-class>com.zimbra.cs.taglib.bean.BeanUtils</function-class>
        <function-signature>com.zimbra.cs.taglib.bean.ZPhoneAccountBean getFirstPhoneAccount(javax.servlet.jsp.PageContext)</function-signature>
    </function>

    <function>
        <name>getPhoneAccount</name>
        <function-class>com.zimbra.cs.taglib.bean.BeanUtils</function-class>
        <function-signature>com.zimbra.cs.taglib.bean.ZPhoneAccountBean getPhoneAccount(javax.servlet.jsp.PageContext, java.lang.String)</function-signature>
    </function>

    <function>
        <name>getDisplayCaller</name>
        <function-class>com.zimbra.cs.taglib.bean.BeanUtils</function-class>
        <function-signature>java.lang.String getDisplayCaller(javax.servlet.jsp.PageContext, com.zimbra.client.ZPhone)</function-signature>
    </function>

    <function>
        <name>isValidPhoneNumber</name>
        <function-class>com.zimbra.cs.taglib.bean.BeanUtils</function-class>
        <function-signature>boolean isValidPhoneNumber(java.lang.String)</function-signature>
    </function>

    <function>
        <name>isValidEmailAddress</name>
        <function-class>com.zimbra.cs.taglib.bean.BeanUtils</function-class>
        <function-signature>boolean isValidEmailAddress(java.lang.String)</function-signature>
    </function>

    <function>
        <name>isValidEmailAddresses</name>
        <function-class>com.zimbra.cs.taglib.bean.BeanUtils</function-class>
        <function-signature>boolean isValidEmailAddresses(java.lang.String)</function-signature>
    </function>

    <function>
        <name>isFileAsExplicit</name>
        <function-class>com.zimbra.cs.taglib.bean.BeanUtils</function-class>
        <function-signature>boolean isFileAsExplicit(java.lang.String)</function-signature>
    </function>

    <function>
        <name>getServerName</name>
        <function-class>com.zimbra.cs.taglib.bean.BeanUtils</function-class>
        <function-signature>java.lang.String getServerName(javax.servlet.jsp.PageContext)</function-signature>
    </function>

	<function>
		<name>getIsMyCard</name>
		<function-class>com.zimbra.cs.taglib.bean.BeanUtils</function-class>
		<function-signature>boolean getIsMyCard(javax.servlet.jsp.PageContext,java.lang.String)</function-signature>
	</function>

    <function>
        <name>getYFirstDayOfMonthView</name>
        <function-class>com.zimbra.cs.taglib.bean.BeanUtils</function-class>
        <function-signature>java.util.Calendar getYFirstDayOfMonthView(java.util.Calendar,long)</function-signature>
    </function>

	<function>
        <name>getNumberOfWeeksOfMonth</name>
        <function-class>com.zimbra.cs.taglib.bean.BeanUtils</function-class>
        <function-signature>int getNumberOfWeeksOfMonth(java.util.Calendar)</function-signature>
    </function>

	<function>
        <name>getImagePath</name>
        <function-class>com.zimbra.cs.taglib.bean.BeanUtils</function-class>
        <function-signature>java.lang.String getImagePath(javax.servlet.jsp.PageContext, java.lang.String)</function-signature>
    </function>

	<function>
        <name>cook</name>
        <function-class>com.zimbra.cs.taglib.bean.BeanUtils</function-class>
        <function-signature>java.lang.String cook(java.lang.String)</function-signature>
    </function>

    <function>
            <name>textToHtml</name>
            <function-class>com.zimbra.cs.taglib.bean.BeanUtils</function-class>
            <function-signature>java.lang.String textToHtml(java.lang.String)</function-signature>
    </function>

    <function>
        <name>unCook</name>
        <function-class>com.zimbra.cs.taglib.bean.BeanUtils</function-class>
        <function-signature>java.lang.String unCook(java.lang.String)</function-signature>
    </function>

	<function>
        <name>cookInt</name>
        <function-class>com.zimbra.cs.taglib.bean.BeanUtils</function-class>
        <function-signature>int cookInt(java.lang.String, int)</function-signature>
    </function>

    <function>
        <name>getFolderRestURL</name>
        <function-class>com.zimbra.cs.taglib.bean.BeanUtils</function-class>
        <function-signature>java.lang.String getFolderRestURL(com.zimbra.cs.taglib.bean.ZMailboxBean,com.zimbra.cs.taglib.bean.ZFolderBean)</function-signature>
    </function>

	<function>
		<name>contains</name>
		<function-class>com.zimbra.cs.taglib.bean.BeanUtils</function-class>
		<function-signature>boolean contains(java.lang.Object,java.lang.Object)</function-signature>
	</function>

    <function>
		<name>maskRemoteItemId</name>
		<function-class>com.zimbra.cs.taglib.bean.BeanUtils</function-class>
		<function-signature>java.lang.String maskRemoteItemId(com.zimbra.cs.taglib.bean.ZMailboxBean,java.lang.String,java.lang.String)</function-signature>
	</function>

    <function>
		<name>unmaskRemoteItemId</name>
		<function-class>com.zimbra.cs.taglib.bean.BeanUtils</function-class>
		<function-signature>java.lang.String unmaskRemoteItemId(com.zimbra.cs.taglib.bean.ZMailboxBean,java.lang.String)</function-signature>
	</function>

	<function>
		<name>javaLocaleId</name>
		<function-class>com.zimbra.cs.taglib.bean.BeanUtils</function-class>
		<function-signature>java.lang.String javaLocaleId(java.util.Locale)</function-signature>
	</function>

	<function>
		<name>browserLocaleId</name>
		<function-class>com.zimbra.cs.taglib.bean.BeanUtils</function-class>
		<function-signature>java.lang.String browserLocaleId(java.util.Locale)</function-signature>
	</function>

    <function>
		<name>yuiCompress</name>
		<function-class>com.zimbra.cs.taglib.bean.BeanUtils</function-class>
		<function-signature>java.lang.String yuiCompress(java.lang.String,java.lang.String)</function-signature>
	</function>

    <function>
		<name>replaceAll</name>
		<function-class>com.zimbra.cs.taglib.bean.BeanUtils</function-class>
		<function-signature>java.lang.String replaceAll(java.lang.String, java.lang.String,java.lang.String)</function-signature>
	</function>

    <function>
        <name>isAllowedUA</name>
        <function-class>com.zimbra.cs.taglib.bean.BeanUtils</function-class>
        <function-signature>boolean isAllowedUA(com.zimbra.cs.taglib.bean.ZUserAgentBean, java.lang.String[])</function-signature>
    </function>

    <function>
        <name>lightenColor</name>
        <function-class>com.zimbra.cs.taglib.bean.BeanUtils</function-class>
        <function-signature>java.lang.String lightenColor(java.lang.String)</function-signature>
    </function>

    <function>
        <name>capitalize</name>
        <function-class>com.zimbra.cs.taglib.bean.BeanUtils</function-class>
        <function-signature>java.lang.String capitalize(java.lang.String)</function-signature>
    </function>

    <function>
        <name>htmlRubyEncode</name>
        <function-class>com.zimbra.cs.taglib.bean.BeanUtils</function-class>
        <function-signature>java.lang.String htmlRubyEncode(java.lang.String, java.lang.String)</function-signature>
    </function>

    <function>
        <name>htmlNewlineEncode</name>
        <function-class>com.zimbra.cs.taglib.bean.BeanUtils</function-class>
        <function-signature>java.lang.String htmlNewlineEncode(java.lang.String)</function-signature>
    </function>

    <function>
		<name>getMailURL</name>
		<function-class>com.zimbra.cs.taglib.bean.BeanUtils</function-class>
        <function-signature>java.lang.String getMailURL(javax.servlet.jsp.PageContext)</function-signature>
	</function>

    <function>
		<name>isMailEnabled</name>
		<function-class>com.zimbra.cs.taglib.bean.BeanUtils</function-class>
        <function-signature>boolean isMailEnabled(com.zimbra.cs.taglib.bean.ZMailboxBean)</function-signature>
	</function>

</taglib>
