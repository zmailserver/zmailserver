/*
 * ***** BEGIN LICENSE BLOCK *****
 * 
 * Zimbra Collaboration Suite Server
 * Copyright (C) 2011, 2012 VMware, Inc.
 * 
 * The contents of this file are subject to the Zimbra Public License
 * Version 1.3 ("License"); you may not use this file except in
 * compliance with the License.  You may obtain a copy of the License at
 * http://www.zimbra.com/license.
 * 
 * Software distributed under the License is distributed on an "AS IS"
 * basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.
 * 
 * ***** END LICENSE BLOCK *****
 */
var clover = new Object();

// JSON: {classes : [{name, id, sl, el,  methods : [{sl, el}, ...]}, ...]}
clover.pageData = {"classes":[{"el":144,"id":6054,"methods":[{"el":39,"sc":5,"sl":36},{"el":45,"sc":5,"sl":41},{"el":51,"sc":5,"sl":47},{"el":58,"sc":5,"sl":53},{"el":66,"sc":5,"sl":60},{"el":74,"sc":5,"sl":68},{"el":82,"sc":5,"sl":76},{"el":90,"sc":5,"sl":84},{"el":98,"sc":5,"sl":92},{"el":102,"sc":5,"sl":100},{"el":107,"sc":5,"sl":104},{"el":113,"sc":5,"sl":109},{"el":121,"sc":5,"sl":115},{"el":129,"sc":5,"sl":123},{"el":143,"sc":5,"sl":131}],"name":"UsageCallCountTest","sl":28},{"el":34,"id":6054,"methods":[],"name":"UsageCallCountTest.VoidMethodInterface","sl":32}]}

// JSON: {test_ID : {"methods": [ID1, ID2, ID3...], "name" : "testXXX() void"}, ...};
clover.testTargets = {"test_1094":{"methods":[{"sl":68},{"sl":100},{"sl":123}],"name":"mockWithOneExpectedCallFailsAtSecondCall","pass":true,"statements":[{"sl":70},{"sl":71},{"sl":72},{"sl":73},{"sl":101},{"sl":124},{"sl":125}]},"test_155":{"methods":[{"sl":76},{"sl":104},{"sl":109},{"sl":115}],"name":"tooFewCalls","pass":true,"statements":[{"sl":78},{"sl":79},{"sl":80},{"sl":81},{"sl":105},{"sl":106},{"sl":110},{"sl":111},{"sl":112},{"sl":116},{"sl":117}]},"test_173":{"methods":[{"sl":84},{"sl":109}],"name":"correctNumberOfCalls","pass":true,"statements":[{"sl":86},{"sl":87},{"sl":88},{"sl":89},{"sl":110},{"sl":111},{"sl":112}]},"test_260":{"methods":[{"sl":60},{"sl":100}],"name":"mockWithOneExpectedCallPassesWithOneCall","pass":true,"statements":[{"sl":62},{"sl":63},{"sl":64},{"sl":65},{"sl":101}]},"test_281":{"methods":[{"sl":115},{"sl":131}],"name":"noUpperLimitWithoutCallCountSet","pass":true,"statements":[{"sl":116},{"sl":117},{"sl":133},{"sl":134},{"sl":135},{"sl":136},{"sl":137},{"sl":138},{"sl":139},{"sl":140},{"sl":141},{"sl":142}]},"test_320":{"methods":[{"sl":92},{"sl":109},{"sl":123}],"name":"tooManyCalls","pass":true,"statements":[{"sl":94},{"sl":95},{"sl":96},{"sl":97},{"sl":110},{"sl":111},{"sl":112},{"sl":124},{"sl":125}]},"test_45":{"methods":[{"sl":47},{"sl":123}],"name":"mockWithNoExpectedCallsFailsAtFirstCall","pass":true,"statements":[{"sl":49},{"sl":50},{"sl":124},{"sl":125}]},"test_507":{"methods":[{"sl":41}],"name":"mockWithNoExpectedCallsPassesWithNoCalls","pass":true,"statements":[{"sl":43},{"sl":44}]},"test_515":{"methods":[{"sl":115},{"sl":131}],"name":"noUpperLimitWithoutCallCountSet","pass":true,"statements":[{"sl":116},{"sl":117},{"sl":133},{"sl":134},{"sl":135},{"sl":136},{"sl":137},{"sl":138},{"sl":139},{"sl":140},{"sl":141},{"sl":142}]},"test_622":{"methods":[{"sl":76},{"sl":104},{"sl":109},{"sl":115}],"name":"tooFewCalls","pass":true,"statements":[{"sl":78},{"sl":79},{"sl":80},{"sl":81},{"sl":105},{"sl":106},{"sl":110},{"sl":111},{"sl":112},{"sl":116},{"sl":117}]},"test_67":{"methods":[{"sl":68},{"sl":100},{"sl":123}],"name":"mockWithOneExpectedCallFailsAtSecondCall","pass":true,"statements":[{"sl":70},{"sl":71},{"sl":72},{"sl":73},{"sl":101},{"sl":124},{"sl":125}]},"test_735":{"methods":[{"sl":53},{"sl":100},{"sl":115}],"name":"mockWithOneExpectedCallFailsAtVerify","pass":true,"statements":[{"sl":55},{"sl":56},{"sl":57},{"sl":101},{"sl":116},{"sl":117}]},"test_821":{"methods":[{"sl":47},{"sl":123}],"name":"mockWithNoExpectedCallsFailsAtFirstCall","pass":true,"statements":[{"sl":49},{"sl":50},{"sl":124},{"sl":125}]},"test_905":{"methods":[{"sl":41}],"name":"mockWithNoExpectedCallsPassesWithNoCalls","pass":true,"statements":[{"sl":43},{"sl":44}]},"test_925":{"methods":[{"sl":60},{"sl":100}],"name":"mockWithOneExpectedCallPassesWithOneCall","pass":true,"statements":[{"sl":62},{"sl":63},{"sl":64},{"sl":65},{"sl":101}]},"test_940":{"methods":[{"sl":84},{"sl":109}],"name":"correctNumberOfCalls","pass":true,"statements":[{"sl":86},{"sl":87},{"sl":88},{"sl":89},{"sl":110},{"sl":111},{"sl":112}]},"test_941":{"methods":[{"sl":53},{"sl":100},{"sl":115}],"name":"mockWithOneExpectedCallFailsAtVerify","pass":true,"statements":[{"sl":55},{"sl":56},{"sl":57},{"sl":101},{"sl":116},{"sl":117}]},"test_975":{"methods":[{"sl":92},{"sl":109},{"sl":123}],"name":"tooManyCalls","pass":true,"statements":[{"sl":94},{"sl":95},{"sl":96},{"sl":97},{"sl":110},{"sl":111},{"sl":112},{"sl":124},{"sl":125}]}}

// JSON: { lines : [{tests : [testid1, testid2, testid3, ...]}, ...]};
clover.srcFileLines = [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [905, 507], [], [905, 507], [905, 507], [], [], [821, 45], [], [821, 45], [821, 45], [], [], [735, 941], [], [735, 941], [735, 941], [735, 941], [], [], [925, 260], [], [925, 260], [925, 260], [925, 260], [925, 260], [], [], [67, 1094], [], [67, 1094], [67, 1094], [67, 1094], [67, 1094], [], [], [155, 622], [], [155, 622], [155, 622], [155, 622], [155, 622], [], [], [940, 173], [], [940, 173], [940, 173], [940, 173], [940, 173], [], [], [975, 320], [], [975, 320], [975, 320], [975, 320], [975, 320], [], [], [67, 735, 1094, 941, 925, 260], [67, 735, 1094, 941, 925, 260], [], [], [155, 622], [155, 622], [155, 622], [], [], [975, 940, 155, 173, 320, 622], [975, 940, 155, 173, 320, 622], [975, 940, 155, 173, 320, 622], [975, 940, 155, 173, 320, 622], [], [], [515, 735, 155, 941, 281, 622], [515, 735, 155, 941, 281, 622], [515, 735, 155, 941, 281, 622], [], [], [], [], [], [67, 975, 1094, 821, 320, 45], [67, 975, 1094, 821, 320, 45], [67, 975, 1094, 821, 320, 45], [], [], [], [], [], [515, 281], [], [515, 281], [515, 281], [515, 281], [515, 281], [515, 281], [515, 281], [515, 281], [515, 281], [515, 281], [515, 281], [], []]
