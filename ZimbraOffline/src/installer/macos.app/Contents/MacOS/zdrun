#!/usr/bin/perl
#/*
# * ***** BEGIN LICENSE BLOCK *****
# * Zimbra Collaboration Suite Server
# * Copyright (C) 2009, 2010, 2012 VMware, Inc.
# * 
# * The contents of this file are subject to the Zimbra Public License
# * Version 1.3 ("License"); you may not use this file except in
# * compliance with the License.  You may obtain a copy of the License at
# * http://www.zimbra.com/license.
# * 
# * Software distributed under the License is distributed on an "AS IS"
# * basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.
# * ***** END LICENSE BLOCK *****
# */
#
# ZD runner
#

use strict;
use warnings;

sub find_and_replace($$) {
    my ($file, $tokens) = @_;
    my $tmpfile = $file . '.tmp';
    
    open(FIN, "<$file") or die("Error: cannot open file $file\n");
    open(FOUT, ">$tmpfile") or die("Error: cannot open file $tmpfile\n");
    
    my $line;
    while($line = <FIN>){
        foreach my $key (keys(%$tokens)) {
            my $pos = index($line, $key);
            while ($pos >= 0) {
                substr($line, $pos, length($key), $tokens->{$key});    
                $pos = index($line, $key);
            }
        }
        print FOUT $line;
    }
    
    close FIN;
    close FOUT;
    
    my (undef, undef, $mode) = stat($file);
    unlink $file;
    rename $tmpfile, $file;
    chmod $mode, $file;
}

sub get_random_id() {
	my @n;
	srand(time ^ ($$ + ($$ << 15)) ^ int(rand(0xFFFF)));
	push(@n, sprintf("%04x", int(rand(0xFFFF)))) for (0..7);
	return "$n[0]$n[1]-$n[2]-$n[3]-$n[4]-$n[5]$n[6]$n[7]";
}

sub is_leopard() {
	my $ver = `/usr/bin/sw_vers -productVersion`;
	return $ver && $ver =~ /^10\.5\./;
}

my $home_dir = $ENV{HOME};
die("Error: unable to get user home directory") unless ($home_dir);

my $app_root = "@INSTALL.APP.ROOT@";
my $app_timestamp = "@INSTALL.APP.TIMESTAMP@";
my $data_root = "$home_dir/Library/Zimbra Desktop";
my $is_upgrade = 0;
my $tmpdir = "$home_dir/Library/.zdtmp";
my $lockfile = "$home_dir/Library/.zdrun.lock";
my $lockfh;

my @user_files = ("index", "store", "sqlite", "log", "zimlets-properties", "zimlets-deployed", 
	"conf/keystore", "profile/prefs.js", "profile/persdict.dat", "profile/localstore.json");

sub launch_prism() {
	exec("\"$app_root/Zimbra Desktop.app/Contents/MacOS/prism\"");
}

# ensure single running instance of this script per user
if (!open($lockfh, ">$lockfile")) {
    print "can not open $lockfile\n";
    exit 1;
}
if (!flock($lockfh, 2 | 4)) { # LOCK_EX | LOCK_NB
    print "another instance of zdrun is already running !\n";
    exit 1;
}

# not new install or upgrade - just run prism
if (-e "$data_root/.$app_timestamp") {
	launch_prism();
}

# backup user data
if (-e $data_root) {
	$is_upgrade = 1;
	mkdir($tmpdir);
	system("rm -rf \"$tmpdir/*\"");
	mkdir("$tmpdir/profile");
	mkdir("$tmpdir/conf");

	for (@user_files) {
		my $src = "$data_root/$_";
		system("mv -f \"$src\" \"$tmpdir/$_\"") if (-e $src);
	}

	system("rm -rf \"$data_root\"");
}

# copy data files
system("cp -R -f \"$app_root/data\" \"$data_root\"");

my $inst_id = get_random_id();
my $tokens = {
	'@install.app.root@' => $app_root, 
	'@install.data.root@' => $data_root,
	'@install.key@' => $inst_id,
	'@install.locale@' => 'en-US',
	'@install.platform@' => 'MacOS'
};
if (is_leopard()) { # Leopard's JDK 1.6 does not support 32-bit mode. So we force it to use 1.5 on Leopard
	$tokens->{'#@install.leopard.java.home@'} = 'JAVA_HOME="/System/Library/Frameworks/JavaVM.framework/Versions/1.5/Home"';
}

# fix data files
my $override_file = "$data_root/zdesktop.webapp/override.ini";
my $override_dir = "$home_dir/.prism/Zimbra/Zimbra Desktop";
find_and_replace("$data_root/conf/localconfig.xml", $tokens);
find_and_replace("$data_root/jetty/etc/jetty.xml", $tokens);
find_and_replace("$data_root/bin/zdesktop", $tokens);
find_and_replace("$data_root/zdesktop.webapp/webapp.ini", $tokens);
find_and_replace($override_file, $tokens);
find_and_replace("$data_root/profile/user.js", $tokens);
mkdir("$home_dir/.prism");
mkdir("$home_dir/.prism/Zimbra");
mkdir($override_dir);
system("cp -f \"$override_file\" \"$override_dir\"");

# install zdesktop service
my $plist = "$home_dir/Library/LaunchAgents/com.zimbra.desktop.plist";
mkdir("$home_dir/Library/LaunchAgents");
system("cp -f \"$app_root/macos/launchd.plist\" \"$plist\"");
find_and_replace($plist, $tokens);
system("chmod +x \"$data_root/bin/zdesktop\"");
system("/bin/launchctl unload \"$plist\"");
system("/bin/launchctl load \"$plist\"");

#timestamp data files
system("touch \"$data_root/.$app_timestamp\"");

# restore user data
if ($is_upgrade) {
    for (@user_files) {
        my $src = "$tmpdir/$_";
		next if (! -e $src);

		my $dest = "$data_root/$_";
		if ((-d $src) && (-e $dest)) {
        	system("mv -f \"$src\"/* \"$dest\""); # must move '/*' outside the quote
		} else {
        	system("mv -f \"$src\" \"$dest\"");
		}
    } 

    system("rm -rf \"$tmpdir\"");
}

system("/bin/chmod 700 \"$data_root\"");
launch_prism();
