http
{
    # disable nginx version on error pages
    server_tokens off;

    # You need to customize these two values by setting local config
    # proxy_server_names_hash_max_size and proxy_names_hash_bucket_size
    # when too many virtual host names are added
    server_names_hash_max_size ${web.server_names.max_size};
    server_names_hash_bucket_size ${web.server_names.bucket_size};

    #  Define the collection of upstream HTTP servers to which we will proxy
    #  Define each server:port against a server directive
    # 
    upstream ${web.upstream.name}
    {
        ${web.upstream.:servers}
        zmauth;
    }

    #  Define the collection of upstream HTTPS servers to which we will proxy
    #  Define each server:port against a server directive
    upstream ${web.ssl.upstream.name}
    {
        ${web.ssl.upstream.:servers}
        zmauth;
    }

    #  Define the collection of upstream admin console servers to which we will
    #  proxy. Define each server:port against a server directive
    #
    upstream ${web.admin.upstream.name}
    {
        ${web.admin.upstream.:servers}
        zmauth_admin;
    }

    # Enable Access logs for web traffic
    log_format upstream '$remote_addr - $remote_user [$time_local]  '
			'"$request" $status $bytes_sent '
			'"$http_referer" "$http_user_agent" "$upstream_addr"';
    access_log ${web.logfile} upstream;

    # Set proxy timeout
    proxy_connect_timeout ${web.upstream.connect.timeout};
    proxy_read_timeout ${web.upstream.read.timeout};
    proxy_send_timeout ${web.upstream.send.timeout};

    # Custom error pages for upstream connection errors
    ${web.:error_pages}

    ${ssl.clientcertca.enabled}ssl_client_certificate  ${ssl.clientcertca.default};

    # handle chunking encoded request
    chunkin on;
    error_page 411 = @chunkin_handler;

    # turn on tcp keepalive
    tcp_keepalive on;

    ${web.http.enabled}include ${core.includes}/${core.cprefix}.web.http;
    ${web.http.enabled}include ${core.includes}/${core.cprefix}.web.http.default;
    ${web.https.enabled}include ${core.includes}/${core.cprefix}.web.https;
    ${web.https.enabled}include ${core.includes}/${core.cprefix}.web.https.default;
    ${web.sso.enabled}include ${core.includes}/${core.cprefix}.web.sso;
    ${web.sso.default.enabled}include ${core.includes}/${core.cprefix}.web.sso.default;
    ${web.admin.default.enabled}include ${core.includes}/${core.cprefix}.web.admin;
    ${web.admin.default.enabled}include ${core.includes}/${core.cprefix}.web.admin.default;
}
