#!/bin/bash
# 
# ***** BEGIN LICENSE BLOCK *****
# Zimbra Collaboration Suite Server
# Copyright (C) 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012 VMware, Inc.
# 
# The contents of this file are subject to the Zimbra Public License
# Version 1.3 ("License"); you may not use this file except in
# compliance with the License.  You may obtain a copy of the License at
# http://www.zimbra.com/license.
# 
# Software distributed under the License is distributed on an "AS IS"
# basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.
# ***** END LICENSE BLOCK *****
# 

if [ x`whoami` != xzimbra ]; then
  echo Error: must be run as zimbra user
  exit 1
fi

if [ ! -L "/opt/zimbra/amavisd" ]; then
  exit 0
fi

export LD_LIBRARY_PATH=/opt/zimbra/openldap/lib:/opt/zimbra/openssl/lib:$LD_LIBRARY_PATH

source `dirname $0`/zmshutil || exit 1
zmsetvars \
  zimbra_home \
  zimbra_log_directory

platform=`/opt/zimbra/libexec/get_plat_tag.sh`
pidfile=${zimbra_log_directory}/amavisd.pid

if [ ! -d "/opt/zimbra/data/amavisd/.spamassassin" ]; then
    mkdir -p /opt/zimbra/data/amavisd/.spamassassin
fi

if [ ! -d "/opt/zimbra/data/amavisd/db" ]; then
    mkdir -p /opt/zimbra/data/amavisd/db
fi

rewriteconfig() {
  /opt/zimbra/libexec/configrewrite amavis > /dev/null 2>&1
  /opt/zimbra/libexec/zmaltermimeconfig > /dev/null 2>&1
}

checkrunning() {
  # amavisd (master) should be listed in the $pidfile.
  if [ -f $pidfile ]; then
    PID=`cat $pidfile`
  fi
  #  If no PID file or PID file is empty, then get PID from scanning the proc table.
  if [ "x$PID" = "x" ]; then
    # PID file is NULL.  Get info from proc table.
    PID=`/bin/ps axo user,pid,ppid,command | awk '{ if ((($4 ~ /^amavisd$/) || ($4 ~ /^\/opt\/zimbra\/amavisd\/sbin\/amavisd$/)) && ($5 ~ /^\(master\)$/)) { print $2 } }'`
  fi
  # If PID is still not set, then we cannot find any amavisd (master) process.  Assume amavisd is not running.
  if [ "x$PID" = "x" ]; then
    RUNNING=0
    return
  fi

  # If we get to this point the PID was defined in the PID file.  But we're not sure we trust it's validity
  # so we're going the verify it from /bin/ps output!
  PID=`/bin/ps axo user,pid,ppid,command | awk '{ if (($2 == '$PID') && (($4 ~ /^amavisd$/) || ($4 ~ /^\/opt\/zimbra\/amavisd\/sbin\/amavisd$/)) && ($5 ~ /^\(master\)$/)) { print $2 } }'`
  # If PID is NULL now, then the PID stored in the PID file was bogus!
  # Let's try to find the true amavisd (master) process ID
  if [ "x$PID" = "x" ]; then
    PID=`/bin/ps axo user,pid,ppid,command | awk '{ if ((($4 ~ /^amavisd$/) || ($4 ~ /^\/opt\/zimbra\/amavisd\/sbin\/amavisd$/)) && ($5 ~ /^\(master\)$/)) { print $2 } }'`
  fi
  # If the PID is still NULL now, it really must not be running.
  if [ "x$PID" = "x" ]; then
    RUNNING=0
    return
  else
    RUNNING=1
    return
  fi
}


#
# Main
#
case "$1" in
  'start')
    checkrunning
  
    echo -n "Starting amavisd..."
    if [ $RUNNING = 1 ]; then
      echo "amavisd is already running."
      exit 0
    else
      if [ ! -d /opt/zimbra/data/amavisd/quarantine ]; then
        mkdir /opt/zimbra/data/amavisd/quarantine
      fi
      if [ ! -d /opt/zimbra/data/amavisd/db ]; then
        mkdir /opt/zimbra/data/amavisd/db
      fi
      if [ ! -f /opt/zimbra/data/amavisd/db/DB_CONFIG -o ! -s /opt/zimbra/data/amavisd/db/DB_CONFIG ]; then
        if [ -f /opt/zimbra/conf/custom/amavisd/DB_CONFIG ]; then
          cp -f /opt/zimbra/conf/custom/amavisd/DB_CONFIG /opt/zimbra/data/amavisd/db/DB_CONFIG
        else
          cp -f /opt/zimbra/amavisd/DB_CONFIG.amavisd /opt/zimbra/data/amavisd/db/DB_CONFIG
        fi
      fi
      if [ ! -d /opt/zimbra/data/amavisd/tmp ]; then
        mkdir /opt/zimbra/data/amavisd/tmp
      else 
        find /opt/zimbra/data/amavisd/tmp -maxdepth 1 -type d -name 'amavis-*' -exec rm -rf {} \; > /dev/null 2>&1
      fi
      if [ ! -d /opt/zimbra/data/amavisd/var ]; then
        mkdir /opt/zimbra/data/amavisd/var
      fi
      if [ x$2 = "x" ]; then
        rewriteconfig
      fi
      if [ ! -f ${zimbra_home}/data/amavisd/.spamassassin/bayes_toks ]; then
        # Initial bayes seeding.
        cp -f ${zimbra_home}/amavisd/.spamassassin/init/* \
          ${zimbra_home}/data/amavisd/.spamassassin/
        chmod 644 ${zimbra_home}/data/amavisd/.spamassassin/bayes*
      fi
      ${zimbra_home}/amavisd/sbin/amavisd -c \
        ${zimbra_home}/conf/amavisd.conf &
      for ((i=0; i < 30; i++)); do
        checkrunning
        if [ $RUNNING = 1 ]; then 
          break
        fi  
        sleep 1
      done
      if [ "x$PID" = "x" ]; then
        echo "failed."
      else 
        echo "done."
      fi 
    fi
  ;;

  'kill')
    $0 stop
  ;;

  'stop')
    checkrunning
    echo -n "Stopping amavisd..."
    if [ $RUNNING = 0 ]; then
      echo "amavisd is not running."
      exit 0
    else 
      kill -TERM $PID 2> /dev/null
      for ((i=0; i < 300; i++)); do
        sleep 5
        kill -0 $PID 2> /dev/null
        if [ $? != 0 ]; then
          echo " done."
          exit 0
        fi
      done
      kill -TERM $PID 2> /dev/null
      if [ $? = 0 ]; then
        echo " failed to stop $PID"
        exit 1
      else 
        echo " done."
      fi
    fi
    exit 0
  ;;
    
  'restart'|'reload')
    $0 stop
    $0 start $2
  ;;
  
  'status')
    checkrunning
    echo -n "amavisd is "
    if [ $RUNNING = 0 ]; then
      echo "not running."
      exit 1
    else
      echo "running."
      exit 0
    fi
  ;;
    
  *)
    echo "Usage: $0 start|stop|kill|reload|restart|status"
    exit 1
  ;;
esac
