#!/bin/bash
# 
# ***** BEGIN LICENSE BLOCK *****
# Zimbra Collaboration Suite Server
# Copyright (C) 2008, 2009, 2010, 2011, 2012 VMware, Inc.
# 
# The contents of this file are subject to the Zimbra Public License
# Version 1.3 ("License"); you may not use this file except in
# compliance with the License.  You may obtain a copy of the License at
# http://www.zimbra.com/license.
# 
# Software distributed under the License is distributed on an "AS IS"
# basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.
# ***** END LICENSE BLOCK *****
# 

if [ x`whoami` != xzimbra ]; then
    echo "Error: must be run as zimbra user"
  exit 1
fi

source `dirname $0`/zmshutil || exit 1
zmsetvars \
    zimbra_home \
    zimbra_log_directory

servicename=nginx
configfile=${zimbra_home}/conf/${servicename}.conf
pidfile=${zimbra_log_directory}/${servicename}.pid
pid=""

getpid()
{
  if [ -f ${pidfile} ]; then
    pid=$(cat ${pidfile})
  fi
}

checkrunning()
{
  getpid
  if [ "x$pid" = "x" ]; then
    running=0
  else
    kill -0 $pid 2> /dev/null
    if [ $? != 0 ]; then
      pid=""
      running=0
    else
      running=1
    fi
  fi
}

case "$1" in 
  start)
    if [ ! -L /opt/zimbra/nginx ]; then
      echo "Error: nginx not installed"
      exit 1
    fi

    if [ ! -f ${configfile} ]; then
      echo "${configfile} is missing."
    fi

    checkrunning
    echo -n "Starting ${servicename}..."
    if [ $running = 1 ]; then
      echo "${servicename} is already running."
      exit 0
    fi
    if [ "x$2" = "x" ]; then
      ${zimbra_home}/libexec/configrewrite proxy > /dev/null 2>&1
    fi

    if [ ! -f ${configfile} ]; then
      echo "failed.  ${configfile} is missing."
      exit 1
    fi

    # read the last line of nginx.conf which indicates the conf gen result
    res=`tail -n 1 ${configfile}`
    if ! [[ $res =~ __SUCCESS__ ]]; then
        echo "failed."
        msg=`echo $res | awk -F ':' '{print $2}'`
        if [ x"$msg" = "x" ]; then msg="unknown"; fi
        echo "nginx start failed. reason: $msg"
        exit 1
    fi

    sudo ${zimbra_home}/${servicename}/sbin/${servicename} -c ${configfile}
    for ((i=0; i < 30; i++)); do
      checkrunning
      if [ $running = 1 ]; then
        break
      fi
      sleep 1
    done
    if [ "x$pid" != "x" ]; then
      echo "done."
      exit 0
    else
      echo "failed."
      exit 1
    fi
  ;;
  stop)
    checkrunning
    echo -n "Stopping ${servicename}..."
    if [ $running = 0 ]; then
      echo "${servicename} is not running."
      exit 0
    else
      for ((i = 0; i < 30; i++)); do
        kill -0 $pid 2> /dev/null
        if [ $? != 0 ]; then
          break
        fi
        kill -TERM $pid
        sleep 1
      done
    fi
    if [ -s ${pidfile} ]; then
      echo "failed."
      exit 1
    else
      echo "done."
    fi
    exit 0
  ;;
  restart)
    $0 stop
    $0 start $2
  ;;
  reload)
    checkrunning
    if [ $running = 1 -a "x$pid" != "x" ]; then
      echo -n "Reloading ${servicename}..."
      kill -HUP $pid
      echo "done."
    fi
    
  ;;
  status)
    echo -n "${servicename} is "
    checkrunning
    if [ $running = 0 ]; then
      echo "not running."
      exit 1
    else
      echo "running."
      exit 0
    fi
  ;;
  *)
    echo "$0 start|stop|restart|reload|status"
    exit 1
  ;;
esac
