Provisioning
============

There is no SOAP or zmprov API for creating family accounts.  Provisioning-wise, family accounts are just 
regular accounts with two additional multi-valued LDAP attributes: zmailChildAccount and zmailPrefChildVisibleAccount,  
which link a primary(parent) account to its secondary(child) accounts.

zmailChildAccount contains zmail ids of all secondary accounts of the primary account.  It is not settable by end-users. 
zmailPrefChildVisibleAccount contains zmail ids o visible secondary accounts.  It is a user preference and is settable by 
end-users.   

When ids are removed from zmailChildAccount, and if zmailPrefChildVisibleAccount is not also being modified in the same request, 
server will remove all ids from zmailPrefChildVisibleAccount that are being removed from zmailChildAccount.
In all other cases when zmailChildAccount and/or zmailPrefChildVisibleAccount are modified(added/removed/replaced), if the 
resulting zmailPrefChildVisibleAccount contains ids that are not in zmailChildAccount, server will throw a ServiceException.INVALID_REQUEST.

There are two types of secondary accounts: visible and invisible.  Visible secondary accounts are those shown 
in the account accordion UI when a primary logs in.  Invisible secondary accounts are not shown in the accordion, 
but they work the same in all other aspects as visible secondary accounts.

A primary account can see and manage preferences and mail items on all its secondary accounts.  

Attribute zmailFeatureOptionsEnabled controls if an account can see and change any account preferences.
zmailFeatureOptionsEnabled should be set to FALSE on secondary accounts if secondary accounts are not allowed 
to see/manage their preferences.




Examples:
=========
- Create secondary accounts:
    zmprov createAccount child-1@zmail.com test123 zmailFeatureOptionsEnabled FALSE {other attr/value pairs}
    zmprov createAccount child-2@zmail.com test123 zmailFeatureOptionsEnabled FALSE {other attr/value pairs}

- Create a primary account and link secondary accounts to it:
    zmprov createAccount parent@zmail.com test123 zmailChildAccount {id-of-child-1} zmailChildAccount {id-of-child-2} zmailPrefChildVisibleAccount {id-of-child-1}
    (or 
    zmprov createAccount parent@zmail.com test123 +zmailChildAccount {id-of-child-1} +zmailChildAccount {id-of-child-2} +zmailPrefChildVisibleAccount {id-of-child-1}
    )
    
    or can do in two steps:
    zmprov createAccount parent@zmail.com test123
    zmprov modifyAccount parent@zmail.org zmailChildAccount {id-of-child-1} zmailChildAccount {id-of-child-2} zmailPrefChildVisibleAccount {id-of-child-1}
    (or
     zmprov modifyAccount parent@zmail.com +zmailChildAccount {id-of-child-1} +zmailChildAccount {id-of-child-2} +zmailPrefChildVisibleAccount {id-of-child-1}
    ) 
    
    The above example adds child-1@zmail.com and child-2@zmail.com as secondary accounts of parent@zmail.com; 
    child-1@zmail.com is visible, child-2@zmail.com is not visible.
    Note: for visible secondary accounts, they have to appear in both zmailChildAccount and zmailPrefChildVisibleAccount attributes.

    
- Add secondary accounts under a primary account
    zmprov modifyAccount parent@zmail.com \
                         +zmailChildAccount {id-of-visible-child-1} +zmailPrefChildVisibleAccount {id-of-visible-child-1} \
                         +zmailChildAccount {id-of-invisible-child-2}

- Remove secondary accounts from a primary account
    zmprov modifyAccount parent@zmail.com \
                         -zmailChildAccount {id-of-visible-child-1} -zmailPrefChildVisibleAccount {id-of-visible-child-1}
                         -zmailChildAccount {id-of-invisible-child-2}

- Replace secondary accounts under a primary account
    zmprov modifyAccount parent@zmail.com \
                         zmailChildAccount {id-of-visible-child-1} zmailPrefChildVisibleAccount {id-of-visible-child-1} \
                         zmailChildAccount {id-of-invisible-child-2}
