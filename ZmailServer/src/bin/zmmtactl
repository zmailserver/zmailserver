#!/bin/bash
# 
# ***** BEGIN LICENSE BLOCK *****
# Zimbra Collaboration Suite Server
# Copyright (C) 2005, 2006, 2007, 2008, 2009, 2010, 2012 VMware, Inc.
# 
# The contents of this file are subject to the Zimbra Public License
# Version 1.3 ("License"); you may not use this file except in
# compliance with the License.  You may obtain a copy of the License at
# http://www.zimbra.com/license.
# 
# Software distributed under the License is distributed on an "AS IS"
# basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.
# ***** END LICENSE BLOCK *****
# 
source `dirname $0`/zmshutil || exit 1
zmsetvars \
	zmail_home \
  postfix_mail_owner \
  postfix_setgid_group \
	zmail_server_hostname 

BASE=${zmail_home:=/opt/zmail}

if [ -f "${zmail_home}/conf/mta_milter_options" ]; then
  source ${zmail_home}/conf/mta_milter_options
fi
zmailMilterServerEnabled=${zmailMilterServerEnabled:=FALSE}

if [ x"$zmailMilterServerEnabled" = "xTRUE" ]; then
  SCRIPTS="postfix zmsaslauthdctl zmmilterctl"
else 
  SCRIPTS="postfix zmsaslauthdctl"
fi

rewriteconfig() {
  echo -n "Rewriting configuration files..."
  if [ -L ${zmail_home}/postfix ]; then
    if [ ! -f ${zmail_home}/postfix/conf/main.cf ]; then
      touch ${zmail_home}/postfix/conf/main.cf
      ${zmail_home}/bin/postconf -e mail_owner=${postfix_mail_owner} setgid_group=${postfix_setgid_group}
    fi
  fi
  /opt/zmail/libexec/configrewrite antispam antivirus opendkim mta sasl  > /dev/null 2>&1
  if [ $? = 0 ]; then
    echo "done."
  else
    echo "failed."
  fi
}

case "$1" in 
	start)
		if [ x$2 = "x" ]; then
      rewriteconfig
		fi
		STATUS=0
		for i in $SCRIPTS; do
			/opt/zmail/bin/$i start norewrite
			R=$?
			if [ $R -ne "0" ]; then
				echo "$i failed to start"
				STATUS=$R
			fi
		done
		exit $STATUS
	;;
	stop)
		for i in $SCRIPTS; do
			/opt/zmail/bin/$i stop
		done
	;;
	reload|restart)
		if [ x$2 = "x" ]; then
      rewriteconfig
		fi
		for i in $SCRIPTS; do
      if [ "x$i" = "xpostfix" ]; then
        /opt/zmail/bin/$i reload
      else 
			  /opt/zmail/bin/$i $1
      fi
		done
	;;
	status)
		STATUS=0
		for i in $SCRIPTS; do
			/opt/zmail/bin/$i status > /dev/null 2>&1
			R=$?
			if [ $R -ne "0" ]; then
				echo "$i is not running"
				STATUS=$R
			fi
		done
		exit $STATUS
	;;
	*)
		echo "$0 start|stop|restart|reload|status"
		exit 1
	;;
esac
