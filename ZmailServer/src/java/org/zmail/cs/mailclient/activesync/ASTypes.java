/*

     Copyright 2011-2013 MLstate
 
     This file is part of Opa.
 
     Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
 
     The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 
     THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

*/
// WARNING: This file has been generated by japigen.opa, DO NOT EDIT.
// Config file: japigen/jas.apigen
// Module name: AS

package org.zmail.cs.mailclient.activesync;

import java.util.*;
import java.lang.String;
import javax.xml.bind.DatatypeConverter;


public class ASTypes {

    public ASTypes() { }

    // External code
    
    public Calendar DateToCalendar(Date date){ 
        Calendar cal = Calendar.getInstance();
        cal.setTime(date);
        return cal;
    }
    public interface Callable<I, O> {
        public O call(I input);
    }
    public <T> String pack_list(Callable<T, String> packel, List<T> l) {
        StringBuffer sb = new StringBuffer();
        Iterator<T> i = l.iterator();
        while (i.hasNext()) {
            sb.append(packel.call(i.next()));
        }
        return sb.toString();
    }
    public String pack_string(String s) {
        return s;
    }
    public String pack_numbool(Boolean b) {
        return (b)?"1":"0";
    }
    public String pack_datetime(Date d) {
        return DatatypeConverter.printDateTime(DateToCalendar(d));
    }
    
    // End external code
    
    public enum AS_FolderSyncType {
        generic(1),
        dflt_inbox(2),
        dflt_drafts(3),
        dflt_deleted_items(4),
        dflt_sent_items(5),
        dflt_outbox(6),
        dflt_tasks(7),
        dflt_calendar(8),
        dflt_contacts(9),
        dflt_notes(10),
        dflt_journal(11),
        user_mail(12),
        user_calendar(13),
        user_contacts(14),
        user_tasks(15),
        user_journal(16),
        user_notes(17),
        unknown_folder_type(18),
        recipient_information_cache(19);
        public final Integer value;
        AS_FolderSyncType(Integer value) { this.value = value; }
        public AS_FolderSyncType fromInteger(Integer x) {
            switch (x) {
            case 1: return AS_FolderSyncType.generic;
            case 2: return AS_FolderSyncType.dflt_inbox;
            case 3: return AS_FolderSyncType.dflt_drafts;
            case 4: return AS_FolderSyncType.dflt_deleted_items;
            case 5: return AS_FolderSyncType.dflt_sent_items;
            case 6: return AS_FolderSyncType.dflt_outbox;
            case 7: return AS_FolderSyncType.dflt_tasks;
            case 8: return AS_FolderSyncType.dflt_calendar;
            case 9: return AS_FolderSyncType.dflt_contacts;
            case 10: return AS_FolderSyncType.dflt_notes;
            case 11: return AS_FolderSyncType.dflt_journal;
            case 12: return AS_FolderSyncType.user_mail;
            case 13: return AS_FolderSyncType.user_calendar;
            case 14: return AS_FolderSyncType.user_contacts;
            case 15: return AS_FolderSyncType.user_tasks;
            case 16: return AS_FolderSyncType.user_journal;
            case 17: return AS_FolderSyncType.user_notes;
            case 18: return AS_FolderSyncType.unknown_folder_type;
            case 19: return AS_FolderSyncType.recipient_information_cache;
            }
            return null;
        }
        public Integer toInteger() { return value; }
    }
    
    public class AS_AddSPDT {
        public String ServerId;
        public String ParentId;
        public String DisplayName;
        public AS_FolderSyncType Type;
        public AS_AddSPDT() { }
        public AS_AddSPDT(String ServerId,String ParentId,String DisplayName,AS_FolderSyncType Type) {
            this.ServerId = ServerId;
            this.ParentId = ParentId;
            this.DisplayName = DisplayName;
            this.Type = Type;
        }
        public AS_AddSPDT set_ServerId(String ServerId) {
            this.ServerId = ServerId;
            return this;
        };
        public AS_AddSPDT set_ParentId(String ParentId) {
            this.ParentId = ParentId;
            return this;
        };
        public AS_AddSPDT set_DisplayName(String DisplayName) {
            this.DisplayName = DisplayName;
            return this;
        };
        public AS_AddSPDT set_Type(AS_FolderSyncType Type) {
            this.Type = Type;
            return this;
        };
    }
    
    public class AS_UpdateSPDT {
        public String ServerId;
        public String ParentId;
        public String DisplayName;
        public AS_FolderSyncType Type;
        public AS_UpdateSPDT() { }
        public AS_UpdateSPDT(String ServerId,String ParentId,String DisplayName,AS_FolderSyncType Type) {
            this.ServerId = ServerId;
            this.ParentId = ParentId;
            this.DisplayName = DisplayName;
            this.Type = Type;
        }
        public AS_UpdateSPDT set_ServerId(String ServerId) {
            this.ServerId = ServerId;
            return this;
        };
        public AS_UpdateSPDT set_ParentId(String ParentId) {
            this.ParentId = ParentId;
            return this;
        };
        public AS_UpdateSPDT set_DisplayName(String DisplayName) {
            this.DisplayName = DisplayName;
            return this;
        };
        public AS_UpdateSPDT set_Type(AS_FolderSyncType Type) {
            this.Type = Type;
            return this;
        };
    }
    
    public enum AS_FolderSyncChange_which { None, Count, Add, Update, Delete }
    public class AS_FolderSyncChange {
        public AS_FolderSyncChange_which which = AS_FolderSyncChange_which.None;
        public Integer Count = null;
        public AS_AddSPDT Add = null;
        public AS_UpdateSPDT Update = null;
        public AS_ServerId Delete = null;
        public AS_FolderSyncChange() { this.which = AS_FolderSyncChange_which.None; }
        public AS_FolderSyncChange set_Count(Integer Count) {
            this.Count = Count;
            this.which = AS_FolderSyncChange_which.Count;
            return this;
        };
        public AS_FolderSyncChange set_Add(AS_AddSPDT Add) {
            this.Add = Add;
            this.which = AS_FolderSyncChange_which.Add;
            return this;
        };
        public AS_FolderSyncChange set_Update(AS_UpdateSPDT Update) {
            this.Update = Update;
            this.which = AS_FolderSyncChange_which.Update;
            return this;
        };
        public AS_FolderSyncChange set_Delete(AS_ServerId Delete) {
            this.Delete = Delete;
            this.which = AS_FolderSyncChange_which.Delete;
            return this;
        };
    }
    
    public enum AS_flag_status {
        cleared(0),
        complete(1),
        active(2);
        public final Integer value;
        AS_flag_status(Integer value) { this.value = value; }
        public AS_flag_status fromInteger(Integer x) {
            switch (x) {
            case 0: return AS_flag_status.cleared;
            case 1: return AS_flag_status.complete;
            case 2: return AS_flag_status.active;
            }
            return null;
        }
        public Integer toInteger() { return value; }
    }
    
    public class AS_CommandAdd {
        public String ServerId;
        public String ClientId;
        public AS_EmailApplicationData ApplicationData;
        public String Class;
        public AS_CommandAdd() { }
        public AS_CommandAdd(String ServerId,String ClientId,AS_EmailApplicationData ApplicationData,String Class) {
            this.ServerId = ServerId;
            this.ClientId = ClientId;
            this.ApplicationData = ApplicationData;
            this.Class = Class;
        }
        public AS_CommandAdd set_ServerId(String ServerId) {
            this.ServerId = ServerId;
            return this;
        };
        public AS_CommandAdd set_ClientId(String ClientId) {
            this.ClientId = ClientId;
            return this;
        };
        public AS_CommandAdd set_ApplicationData(AS_EmailApplicationData ApplicationData) {
            this.ApplicationData = ApplicationData;
            return this;
        };
        public AS_CommandAdd set_Class(String Class) {
            this.Class = Class;
            return this;
        };
    }
    
    public class AS_CommandDelete {
        public String ServerId;
        public String Class;
        public AS_CommandDelete() { }
        public AS_CommandDelete(String ServerId,String Class) {
            this.ServerId = ServerId;
            this.Class = Class;
        }
        public AS_CommandDelete set_ServerId(String ServerId) {
            this.ServerId = ServerId;
            return this;
        };
        public AS_CommandDelete set_Class(String Class) {
            this.Class = Class;
            return this;
        };
    }
    
    public class AS_CommandChange {
        public String ServerId;
        public AS_EmailApplicationData ApplicationData;
        public String Class;
        public AS_CommandChange() { }
        public AS_CommandChange(String ServerId,AS_EmailApplicationData ApplicationData,String Class) {
            this.ServerId = ServerId;
            this.ApplicationData = ApplicationData;
            this.Class = Class;
        }
        public AS_CommandChange set_ServerId(String ServerId) {
            this.ServerId = ServerId;
            return this;
        };
        public AS_CommandChange set_ApplicationData(AS_EmailApplicationData ApplicationData) {
            this.ApplicationData = ApplicationData;
            return this;
        };
        public AS_CommandChange set_Class(String Class) {
            this.Class = Class;
            return this;
        };
    }
    
    public class AS_CommandFetch {
        public String ServerId;
        public AS_CommandFetch() { }
        public AS_CommandFetch(String ServerId) {
            this.ServerId = ServerId;
        }
        public AS_CommandFetch set_ServerId(String ServerId) {
            this.ServerId = ServerId;
            return this;
        };
    }
    
    public class AS_ServerId {
        public String ServerId;
        public AS_ServerId() { }
        public AS_ServerId(String ServerId) {
            this.ServerId = ServerId;
        }
        public AS_ServerId set_ServerId(String ServerId) {
            this.ServerId = ServerId;
            return this;
        };
    }
    
    public class AS_SyncCommands {
        public List<AS_SyncCommandsAlt> Commands;
        public AS_SyncCommands() { }
        public AS_SyncCommands(List<AS_SyncCommandsAlt> Commands) {
            this.Commands = Commands;
        }
        public AS_SyncCommands set_Commands(List<AS_SyncCommandsAlt> Commands) {
            this.Commands = Commands;
            return this;
        };
    }
    
    public enum AS_BodyPartStatus {
        success(1),
        too_large(176);
        public final Integer value;
        AS_BodyPartStatus(Integer value) { this.value = value; }
        public AS_BodyPartStatus fromInteger(Integer x) {
            switch (x) {
            case 1: return AS_BodyPartStatus.success;
            case 176: return AS_BodyPartStatus.too_large;
            }
            return null;
        }
        public Integer toInteger() { return value; }
    }
    
    public class AS_BodyPart {
        public AS_BodyPartStatus Status;
        public AS_BodyType Type;
        public Integer EstimatedDataSize;
        public Boolean Truncated;
        public String Data;
        public String Preview;
        public AS_BodyPart() { }
        public AS_BodyPart(AS_BodyPartStatus Status,AS_BodyType Type,Integer EstimatedDataSize,Boolean Truncated,String Data,String Preview) {
            this.Status = Status;
            this.Type = Type;
            this.EstimatedDataSize = EstimatedDataSize;
            this.Truncated = Truncated;
            this.Data = Data;
            this.Preview = Preview;
        }
        public AS_BodyPart set_Status(AS_BodyPartStatus Status) {
            this.Status = Status;
            return this;
        };
        public AS_BodyPart set_Type(AS_BodyType Type) {
            this.Type = Type;
            return this;
        };
        public AS_BodyPart set_EstimatedDataSize(Integer EstimatedDataSize) {
            this.EstimatedDataSize = EstimatedDataSize;
            return this;
        };
        public AS_BodyPart set_Truncated(Boolean Truncated) {
            this.Truncated = Truncated;
            return this;
        };
        public AS_BodyPart set_Data(String Data) {
            this.Data = Data;
            return this;
        };
        public AS_BodyPart set_Preview(String Preview) {
            this.Preview = Preview;
            return this;
        };
    }
    
    public enum AS_Type {
        text(1),
        html(2),
        rtf(3),
        mime(4);
        public final Integer value;
        AS_Type(Integer value) { this.value = value; }
        public AS_Type fromInteger(Integer x) {
            switch (x) {
            case 1: return AS_Type.text;
            case 2: return AS_Type.html;
            case 3: return AS_Type.rtf;
            case 4: return AS_Type.mime;
            }
            return null;
        }
        public Integer toInteger() { return value; }
    }
    
    public enum AS_BodyType {
        text(1),
        html(2),
        rtf(3),
        mime(4);
        public final Integer value;
        AS_BodyType(Integer value) { this.value = value; }
        public AS_BodyType fromInteger(Integer x) {
            switch (x) {
            case 1: return AS_BodyType.text;
            case 2: return AS_BodyType.html;
            case 3: return AS_BodyType.rtf;
            case 4: return AS_BodyType.mime;
            }
            return null;
        }
        public Integer toInteger() { return value; }
    }
    
    public enum AS_filter_type {
        no_filter(0),
        one_day(1),
        three_days(2),
        one_week(3),
        two_weeks(4),
        one_month(5),
        three_months(6),
        six_months(7),
        incomplete_tasks(8);
        public final Integer value;
        AS_filter_type(Integer value) { this.value = value; }
        public AS_filter_type fromInteger(Integer x) {
            switch (x) {
            case 0: return AS_filter_type.no_filter;
            case 1: return AS_filter_type.one_day;
            case 2: return AS_filter_type.three_days;
            case 3: return AS_filter_type.one_week;
            case 4: return AS_filter_type.two_weeks;
            case 5: return AS_filter_type.one_month;
            case 6: return AS_filter_type.three_months;
            case 7: return AS_filter_type.six_months;
            case 8: return AS_filter_type.incomplete_tasks;
            }
            return null;
        }
        public Integer toInteger() { return value; }
    }
    
    public enum AS_MIMETruncation {
        truncate_all(0),
        truncate_4096(1),
        truncate_5120(2),
        truncate_7168(3),
        truncate_10240(4),
        truncate_20480(5),
        truncate_51200(6),
        truncate_102400(7),
        never_truncate(8);
        public final Integer value;
        AS_MIMETruncation(Integer value) { this.value = value; }
        public AS_MIMETruncation fromInteger(Integer x) {
            switch (x) {
            case 0: return AS_MIMETruncation.truncate_all;
            case 1: return AS_MIMETruncation.truncate_4096;
            case 2: return AS_MIMETruncation.truncate_5120;
            case 3: return AS_MIMETruncation.truncate_7168;
            case 4: return AS_MIMETruncation.truncate_10240;
            case 5: return AS_MIMETruncation.truncate_20480;
            case 6: return AS_MIMETruncation.truncate_51200;
            case 7: return AS_MIMETruncation.truncate_102400;
            case 8: return AS_MIMETruncation.never_truncate;
            }
            return null;
        }
        public Integer toInteger() { return value; }
    }
    
    public enum AS_Class {
        Tasks("Tasks"),
        Email("Email"),
        Calendar("Calendar"),
        Contacts("Contacts"),
        SMS("SMS"),
        Notes("Notes");
        public final String value;
        AS_Class(String value) { this.value = value; }
        public AS_Class fromString(String x) {
            switch (x) {
            case "Tasks": return AS_Class.Tasks;
            case "Email": return AS_Class.Email;
            case "Calendar": return AS_Class.Calendar;
            case "Contacts": return AS_Class.Contacts;
            case "SMS": return AS_Class.SMS;
            case "Notes": return AS_Class.Notes;
            }
            return null;
        }
        public String toString() { return value; }
    }
    
    public enum AS_Method {
        normal_attachment(1),
        embedded_message(5),
        attach_ole(6);
        public final Integer value;
        AS_Method(Integer value) { this.value = value; }
        public AS_Method fromInteger(Integer x) {
            switch (x) {
            case 1: return AS_Method.normal_attachment;
            case 5: return AS_Method.embedded_message;
            case 6: return AS_Method.attach_ole;
            }
            return null;
        }
        public Integer toInteger() { return value; }
    }
    
    public class AS_Attachment {
        public String DisplayName;
        public String FileReference;
        public AS_Method Method;
        public Integer EstimatedDataSize;
        public String ContentId;
        public String ContentLocation;
        public Boolean IsInline;
        public AS_Attachment() { }
        public AS_Attachment(String DisplayName,String FileReference,AS_Method Method,Integer EstimatedDataSize,String ContentId,String ContentLocation,Boolean IsInline) {
            this.DisplayName = DisplayName;
            this.FileReference = FileReference;
            this.Method = Method;
            this.EstimatedDataSize = EstimatedDataSize;
            this.ContentId = ContentId;
            this.ContentLocation = ContentLocation;
            this.IsInline = IsInline;
        }
        public AS_Attachment set_DisplayName(String DisplayName) {
            this.DisplayName = DisplayName;
            return this;
        };
        public AS_Attachment set_FileReference(String FileReference) {
            this.FileReference = FileReference;
            return this;
        };
        public AS_Attachment set_Method(AS_Method Method) {
            this.Method = Method;
            return this;
        };
        public AS_Attachment set_EstimatedDataSize(Integer EstimatedDataSize) {
            this.EstimatedDataSize = EstimatedDataSize;
            return this;
        };
        public AS_Attachment set_ContentId(String ContentId) {
            this.ContentId = ContentId;
            return this;
        };
        public AS_Attachment set_ContentLocation(String ContentLocation) {
            this.ContentLocation = ContentLocation;
            return this;
        };
        public AS_Attachment set_IsInline(Boolean IsInline) {
            this.IsInline = IsInline;
            return this;
        };
    }
    
    public enum AS_Attachments_which { None, Attachment }
    public class AS_Attachments {
        public AS_Attachments_which which = AS_Attachments_which.None;
        public AS_Attachment Attachment = null;
        public AS_Attachments() { this.which = AS_Attachments_which.None; }
        public AS_Attachments set_Attachment(AS_Attachment Attachment) {
            this.Attachment = Attachment;
            this.which = AS_Attachments_which.Attachment;
            return this;
        };
    }
    
    public class AS_Body {
        public AS_BodyType Type;
        public Integer EstimatedDataSize;
        public Boolean Truncated;
        public String Data;
        public Integer Part;
        public String Preview;
        public AS_Body() { }
        public AS_Body(AS_BodyType Type,Integer EstimatedDataSize,Boolean Truncated,String Data,Integer Part,String Preview) {
            this.Type = Type;
            this.EstimatedDataSize = EstimatedDataSize;
            this.Truncated = Truncated;
            this.Data = Data;
            this.Part = Part;
            this.Preview = Preview;
        }
        public AS_Body set_Type(AS_BodyType Type) {
            this.Type = Type;
            return this;
        };
        public AS_Body set_EstimatedDataSize(Integer EstimatedDataSize) {
            this.EstimatedDataSize = EstimatedDataSize;
            return this;
        };
        public AS_Body set_Truncated(Boolean Truncated) {
            this.Truncated = Truncated;
            return this;
        };
        public AS_Body set_Data(String Data) {
            this.Data = Data;
            return this;
        };
        public AS_Body set_Part(Integer Part) {
            this.Part = Part;
            return this;
        };
        public AS_Body set_Preview(String Preview) {
            this.Preview = Preview;
            return this;
        };
    }
    
    public enum AS_Flag_which { None, Subject, Status, FlagType, DateCompleted, CompleteTime, StartDate, DueDate, UtcDueDate, UtcStartDate, ReminderSet, ReminderTime, OrdinalDate, SubOrdinalDate }
    public class AS_Flag {
        public AS_Flag_which which = AS_Flag_which.None;
        public String Subject = null;
        public AS_flag_status Status = null;
        public String FlagType = null;
        public Date DateCompleted = null;
        public Date CompleteTime = null;
        public Date StartDate = null;
        public Date DueDate = null;
        public Date UtcDueDate = null;
        public Date UtcStartDate = null;
        public Boolean ReminderSet = null;
        public Date ReminderTime = null;
        public Date OrdinalDate = null;
        public String SubOrdinalDate = null;
        public AS_Flag() { this.which = AS_Flag_which.None; }
        public AS_Flag set_Subject(String Subject) {
            this.Subject = Subject;
            this.which = AS_Flag_which.Subject;
            return this;
        };
        public AS_Flag set_Status(AS_flag_status Status) {
            this.Status = Status;
            this.which = AS_Flag_which.Status;
            return this;
        };
        public AS_Flag set_FlagType(String FlagType) {
            this.FlagType = FlagType;
            this.which = AS_Flag_which.FlagType;
            return this;
        };
        public AS_Flag set_DateCompleted(Date DateCompleted) {
            this.DateCompleted = DateCompleted;
            this.which = AS_Flag_which.DateCompleted;
            return this;
        };
        public AS_Flag set_CompleteTime(Date CompleteTime) {
            this.CompleteTime = CompleteTime;
            this.which = AS_Flag_which.CompleteTime;
            return this;
        };
        public AS_Flag set_StartDate(Date StartDate) {
            this.StartDate = StartDate;
            this.which = AS_Flag_which.StartDate;
            return this;
        };
        public AS_Flag set_DueDate(Date DueDate) {
            this.DueDate = DueDate;
            this.which = AS_Flag_which.DueDate;
            return this;
        };
        public AS_Flag set_UtcDueDate(Date UtcDueDate) {
            this.UtcDueDate = UtcDueDate;
            this.which = AS_Flag_which.UtcDueDate;
            return this;
        };
        public AS_Flag set_UtcStartDate(Date UtcStartDate) {
            this.UtcStartDate = UtcStartDate;
            this.which = AS_Flag_which.UtcStartDate;
            return this;
        };
        public AS_Flag set_ReminderSet(Boolean ReminderSet) {
            this.ReminderSet = ReminderSet;
            this.which = AS_Flag_which.ReminderSet;
            return this;
        };
        public AS_Flag set_ReminderTime(Date ReminderTime) {
            this.ReminderTime = ReminderTime;
            this.which = AS_Flag_which.ReminderTime;
            return this;
        };
        public AS_Flag set_OrdinalDate(Date OrdinalDate) {
            this.OrdinalDate = OrdinalDate;
            this.which = AS_Flag_which.OrdinalDate;
            return this;
        };
        public AS_Flag set_SubOrdinalDate(String SubOrdinalDate) {
            this.SubOrdinalDate = SubOrdinalDate;
            this.which = AS_Flag_which.SubOrdinalDate;
            return this;
        };
    }
    
    public enum AS_NativeBodyType {
        text(1),
        html(2),
        rtf(3),
        mime(4);
        public final Integer value;
        AS_NativeBodyType(Integer value) { this.value = value; }
        public AS_NativeBodyType fromInteger(Integer x) {
            switch (x) {
            case 1: return AS_NativeBodyType.text;
            case 2: return AS_NativeBodyType.html;
            case 3: return AS_NativeBodyType.rtf;
            case 4: return AS_NativeBodyType.mime;
            }
            return null;
        }
        public Integer toInteger() { return value; }
    }
    
    public class AS_EmailCategories {
        public List<String> Category;
        public AS_EmailCategories() { }
        public AS_EmailCategories(List<String> Category) {
            this.Category = Category;
        }
        public AS_EmailCategories set_Category(List<String> Category) {
            this.Category = Category;
            return this;
        };
    }
    
    public enum AS_LastVerbExecuted {
        unknown(0),
        replytosender(1),
        replytoall(2),
        forward(3);
        public final Integer value;
        AS_LastVerbExecuted(Integer value) { this.value = value; }
        public AS_LastVerbExecuted fromInteger(Integer x) {
            switch (x) {
            case 0: return AS_LastVerbExecuted.unknown;
            case 1: return AS_LastVerbExecuted.replytosender;
            case 2: return AS_LastVerbExecuted.replytoall;
            case 3: return AS_LastVerbExecuted.forward;
            }
            return null;
        }
        public Integer toInteger() { return value; }
    }
    
    public class AS_EmailApplicationData {
        public String To;
        public String From;
        public String Cc;
        public String Subject;
        public String DateReceived;
        public String DisplayTo;
        public String ThreadTopic;
        public Integer Importance;
        public Integer Read;
        public List<AS_Attachments> Attachments;
        public AS_Body Body;
        public String MessageClass;
        public String InternetCPID;
        public List<AS_Flag> Flag;
        public String ContentClass;
        public AS_NativeBodyType NativeBodyType;
        public byte[] ConversationId;
        public byte[] ConversationIndex;
        public AS_EmailCategories EmailCategories;
        public AS_LastVerbExecuted LastVerbExecuted;
        public Date LastVerbExecutionTime;
        public AS_EmailApplicationData() { }
        public AS_EmailApplicationData(String To,String From,String Cc,String Subject,String DateReceived,String DisplayTo,String ThreadTopic,Integer Importance,Integer Read,List<AS_Attachments> Attachments,AS_Body Body,String MessageClass,String InternetCPID,List<AS_Flag> Flag,String ContentClass,AS_NativeBodyType NativeBodyType,byte[] ConversationId,byte[] ConversationIndex,AS_EmailCategories EmailCategories,AS_LastVerbExecuted LastVerbExecuted,Date LastVerbExecutionTime) {
            this.To = To;
            this.From = From;
            this.Cc = Cc;
            this.Subject = Subject;
            this.DateReceived = DateReceived;
            this.DisplayTo = DisplayTo;
            this.ThreadTopic = ThreadTopic;
            this.Importance = Importance;
            this.Read = Read;
            this.Attachments = Attachments;
            this.Body = Body;
            this.MessageClass = MessageClass;
            this.InternetCPID = InternetCPID;
            this.Flag = Flag;
            this.ContentClass = ContentClass;
            this.NativeBodyType = NativeBodyType;
            this.ConversationId = ConversationId;
            this.ConversationIndex = ConversationIndex;
            this.EmailCategories = EmailCategories;
            this.LastVerbExecuted = LastVerbExecuted;
            this.LastVerbExecutionTime = LastVerbExecutionTime;
        }
        public AS_EmailApplicationData set_To(String To) {
            this.To = To;
            return this;
        };
        public AS_EmailApplicationData set_From(String From) {
            this.From = From;
            return this;
        };
        public AS_EmailApplicationData set_Cc(String Cc) {
            this.Cc = Cc;
            return this;
        };
        public AS_EmailApplicationData set_Subject(String Subject) {
            this.Subject = Subject;
            return this;
        };
        public AS_EmailApplicationData set_DateReceived(String DateReceived) {
            this.DateReceived = DateReceived;
            return this;
        };
        public AS_EmailApplicationData set_DisplayTo(String DisplayTo) {
            this.DisplayTo = DisplayTo;
            return this;
        };
        public AS_EmailApplicationData set_ThreadTopic(String ThreadTopic) {
            this.ThreadTopic = ThreadTopic;
            return this;
        };
        public AS_EmailApplicationData set_Importance(Integer Importance) {
            this.Importance = Importance;
            return this;
        };
        public AS_EmailApplicationData set_Read(Integer Read) {
            this.Read = Read;
            return this;
        };
        public AS_EmailApplicationData set_Attachments(List<AS_Attachments> Attachments) {
            this.Attachments = Attachments;
            return this;
        };
        public AS_EmailApplicationData set_Body(AS_Body Body) {
            this.Body = Body;
            return this;
        };
        public AS_EmailApplicationData set_MessageClass(String MessageClass) {
            this.MessageClass = MessageClass;
            return this;
        };
        public AS_EmailApplicationData set_InternetCPID(String InternetCPID) {
            this.InternetCPID = InternetCPID;
            return this;
        };
        public AS_EmailApplicationData set_Flag(List<AS_Flag> Flag) {
            this.Flag = Flag;
            return this;
        };
        public AS_EmailApplicationData set_ContentClass(String ContentClass) {
            this.ContentClass = ContentClass;
            return this;
        };
        public AS_EmailApplicationData set_NativeBodyType(AS_NativeBodyType NativeBodyType) {
            this.NativeBodyType = NativeBodyType;
            return this;
        };
        public AS_EmailApplicationData set_ConversationId(byte[] ConversationId) {
            this.ConversationId = ConversationId;
            return this;
        };
        public AS_EmailApplicationData set_ConversationIndex(byte[] ConversationIndex) {
            this.ConversationIndex = ConversationIndex;
            return this;
        };
        public AS_EmailApplicationData set_EmailCategories(AS_EmailCategories EmailCategories) {
            this.EmailCategories = EmailCategories;
            return this;
        };
        public AS_EmailApplicationData set_LastVerbExecuted(AS_LastVerbExecuted LastVerbExecuted) {
            this.LastVerbExecuted = LastVerbExecuted;
            return this;
        };
        public AS_EmailApplicationData set_LastVerbExecutionTime(Date LastVerbExecutionTime) {
            this.LastVerbExecutionTime = LastVerbExecutionTime;
            return this;
        };
    }
    
    public class AS_FolderSyncB {
        public String SyncKey;
        public Integer Status;
        public List<AS_FolderSyncChange> Changes;
        public AS_FolderSyncB() { }
        public AS_FolderSyncB(String SyncKey,Integer Status,List<AS_FolderSyncChange> Changes) {
            this.SyncKey = SyncKey;
            this.Status = Status;
            this.Changes = Changes;
        }
        public AS_FolderSyncB set_SyncKey(String SyncKey) {
            this.SyncKey = SyncKey;
            return this;
        };
        public AS_FolderSyncB set_Status(Integer Status) {
            this.Status = Status;
            return this;
        };
        public AS_FolderSyncB set_Changes(List<AS_FolderSyncChange> Changes) {
            this.Changes = Changes;
            return this;
        };
    }
    
    public class AS_FolderSyncF {
        public String SyncKey;
        public AS_FolderSyncF() { }
        public AS_FolderSyncF(String SyncKey) {
            this.SyncKey = SyncKey;
        }
        public AS_FolderSyncF set_SyncKey(String SyncKey) {
            this.SyncKey = SyncKey;
            return this;
        };
    }
    
    public class AS_ProvisionNoDI {
        public AS_ProvisionNoDI() { }
    }
    
    public class AS_Policy {
        public Integer Status;
        public String PolicyType;
        public String PolicyKey;
        public AS_Policy() { }
        public AS_Policy(Integer Status,String PolicyType,String PolicyKey) {
            this.Status = Status;
            this.PolicyType = PolicyType;
            this.PolicyKey = PolicyKey;
        }
        public AS_Policy set_Status(Integer Status) {
            this.Status = Status;
            return this;
        };
        public AS_Policy set_PolicyType(String PolicyType) {
            this.PolicyType = PolicyType;
            return this;
        };
        public AS_Policy set_PolicyKey(String PolicyKey) {
            this.PolicyKey = PolicyKey;
            return this;
        };
    }
    
    public class AS_PolicyL {
        public AS_Policy Policy;
        public AS_PolicyL() { }
        public AS_PolicyL(AS_Policy Policy) {
            this.Policy = Policy;
        }
        public AS_PolicyL set_Policy(AS_Policy Policy) {
            this.Policy = Policy;
            return this;
        };
    }
    
    public class AS_ProvisionNoDIB {
        public Integer Status;
        public List<AS_PolicyL> Policies;
        public AS_ProvisionNoDIB() { }
        public AS_ProvisionNoDIB(Integer Status,List<AS_PolicyL> Policies) {
            this.Status = Status;
            this.Policies = Policies;
        }
        public AS_ProvisionNoDIB set_Status(Integer Status) {
            this.Status = Status;
            return this;
        };
        public AS_ProvisionNoDIB set_Policies(List<AS_PolicyL> Policies) {
            this.Policies = Policies;
            return this;
        };
    }
    
    public class AS_SendMail {
        public String ClientId;
        public String AccountId;
        public Boolean SaveInSentItems;
        public byte[] Mime;
        public AS_SendMail() { }
        public AS_SendMail(String ClientId,String AccountId,Boolean SaveInSentItems,byte[] Mime) {
            this.ClientId = ClientId;
            this.AccountId = AccountId;
            this.SaveInSentItems = SaveInSentItems;
            this.Mime = Mime;
        }
        public AS_SendMail set_ClientId(String ClientId) {
            this.ClientId = ClientId;
            return this;
        };
        public AS_SendMail set_AccountId(String AccountId) {
            this.AccountId = AccountId;
            return this;
        };
        public AS_SendMail set_SaveInSentItems(Boolean SaveInSentItems) {
            this.SaveInSentItems = SaveInSentItems;
            return this;
        };
        public AS_SendMail set_Mime(byte[] Mime) {
            this.Mime = Mime;
            return this;
        };
    }
    
    public class AS_Status {
        public Integer Status;
        public AS_Status() { }
        public AS_Status(Integer Status) {
            this.Status = Status;
        }
        public AS_Status set_Status(Integer Status) {
            this.Status = Status;
            return this;
        };
    }
    
    public class AS_Options {
        public AS_filter_type FilterType;
        public AS_MIMESupport MIMESupport;
        public AS_MIMETruncation MIMETruncation;
        public Boolean Conflict;
        public AS_Class Class;
        public AS_BodyPreference BodyPreference;
        public AS_BodyPartPreference BodyPartPreference;
        public AS_Options() { }
        public AS_Options(AS_filter_type FilterType,AS_MIMESupport MIMESupport,AS_MIMETruncation MIMETruncation,Boolean Conflict,AS_Class Class,AS_BodyPreference BodyPreference,AS_BodyPartPreference BodyPartPreference) {
            this.FilterType = FilterType;
            this.MIMESupport = MIMESupport;
            this.MIMETruncation = MIMETruncation;
            this.Conflict = Conflict;
            this.Class = Class;
            this.BodyPreference = BodyPreference;
            this.BodyPartPreference = BodyPartPreference;
        }
        public AS_Options set_FilterType(AS_filter_type FilterType) {
            this.FilterType = FilterType;
            return this;
        };
        public AS_Options set_MIMESupport(AS_MIMESupport MIMESupport) {
            this.MIMESupport = MIMESupport;
            return this;
        };
        public AS_Options set_MIMETruncation(AS_MIMETruncation MIMETruncation) {
            this.MIMETruncation = MIMETruncation;
            return this;
        };
        public AS_Options set_Conflict(Boolean Conflict) {
            this.Conflict = Conflict;
            return this;
        };
        public AS_Options set_Class(AS_Class Class) {
            this.Class = Class;
            return this;
        };
        public AS_Options set_BodyPreference(AS_BodyPreference BodyPreference) {
            this.BodyPreference = BodyPreference;
            return this;
        };
        public AS_Options set_BodyPartPreference(AS_BodyPartPreference BodyPartPreference) {
            this.BodyPartPreference = BodyPartPreference;
            return this;
        };
    }
    
    public enum AS_SyncCommandsAlt_which { None, Add, Delete, Change, Fetch, SoftDelete }
    public class AS_SyncCommandsAlt {
        public AS_SyncCommandsAlt_which which = AS_SyncCommandsAlt_which.None;
        public AS_CommandAdd Add = null;
        public AS_CommandDelete Delete = null;
        public AS_CommandChange Change = null;
        public AS_CommandFetch Fetch = null;
        public AS_ServerId SoftDelete = null;
        public AS_SyncCommandsAlt() { this.which = AS_SyncCommandsAlt_which.None; }
        public AS_SyncCommandsAlt set_Add(AS_CommandAdd Add) {
            this.Add = Add;
            this.which = AS_SyncCommandsAlt_which.Add;
            return this;
        };
        public AS_SyncCommandsAlt set_Delete(AS_CommandDelete Delete) {
            this.Delete = Delete;
            this.which = AS_SyncCommandsAlt_which.Delete;
            return this;
        };
        public AS_SyncCommandsAlt set_Change(AS_CommandChange Change) {
            this.Change = Change;
            this.which = AS_SyncCommandsAlt_which.Change;
            return this;
        };
        public AS_SyncCommandsAlt set_Fetch(AS_CommandFetch Fetch) {
            this.Fetch = Fetch;
            this.which = AS_SyncCommandsAlt_which.Fetch;
            return this;
        };
        public AS_SyncCommandsAlt set_SoftDelete(AS_ServerId SoftDelete) {
            this.SoftDelete = SoftDelete;
            this.which = AS_SyncCommandsAlt_which.SoftDelete;
            return this;
        };
    }
    
    public class AS_Collection {
        public String SyncKey;
        public Integer Status;
        public String CollectionId;
        public Boolean DeletesAsMoves;
        public Boolean GetChanges;
        public Integer WindowSize;
        public Boolean ConversationMode;
        public AS_Options Options;
        public List<AS_SyncCommandsAlt> Commands;
        public AS_Collection() { }
        public AS_Collection(String SyncKey,Integer Status,String CollectionId,Boolean DeletesAsMoves,Boolean GetChanges,Integer WindowSize,Boolean ConversationMode,AS_Options Options,List<AS_SyncCommandsAlt> Commands) {
            this.SyncKey = SyncKey;
            this.Status = Status;
            this.CollectionId = CollectionId;
            this.DeletesAsMoves = DeletesAsMoves;
            this.GetChanges = GetChanges;
            this.WindowSize = WindowSize;
            this.ConversationMode = ConversationMode;
            this.Options = Options;
            this.Commands = Commands;
        }
        public AS_Collection set_SyncKey(String SyncKey) {
            this.SyncKey = SyncKey;
            return this;
        };
        public AS_Collection set_Status(Integer Status) {
            this.Status = Status;
            return this;
        };
        public AS_Collection set_CollectionId(String CollectionId) {
            this.CollectionId = CollectionId;
            return this;
        };
        public AS_Collection set_DeletesAsMoves(Boolean DeletesAsMoves) {
            this.DeletesAsMoves = DeletesAsMoves;
            return this;
        };
        public AS_Collection set_GetChanges(Boolean GetChanges) {
            this.GetChanges = GetChanges;
            return this;
        };
        public AS_Collection set_WindowSize(Integer WindowSize) {
            this.WindowSize = WindowSize;
            return this;
        };
        public AS_Collection set_ConversationMode(Boolean ConversationMode) {
            this.ConversationMode = ConversationMode;
            return this;
        };
        public AS_Collection set_Options(AS_Options Options) {
            this.Options = Options;
            return this;
        };
        public AS_Collection set_Commands(List<AS_SyncCommandsAlt> Commands) {
            this.Commands = Commands;
            return this;
        };
    }
    
    public class AS_Collections {
        public AS_Collection Collection;
        public AS_Collections() { }
        public AS_Collections(AS_Collection Collection) {
            this.Collection = Collection;
        }
        public AS_Collections set_Collection(AS_Collection Collection) {
            this.Collection = Collection;
            return this;
        };
    }
    
    public class AS_Sync {
        public AS_Collections Collections;
        public Boolean Partial;
        public Integer Wait;
        public Integer HeartbeatInterval;
        public Integer WindowSize;
        public AS_Sync() { }
        public AS_Sync(AS_Collections Collections,Boolean Partial,Integer Wait,Integer HeartbeatInterval,Integer WindowSize) {
            this.Collections = Collections;
            this.Partial = Partial;
            this.Wait = Wait;
            this.HeartbeatInterval = HeartbeatInterval;
            this.WindowSize = WindowSize;
        }
        public AS_Sync set_Collections(AS_Collections Collections) {
            this.Collections = Collections;
            return this;
        };
        public AS_Sync set_Partial(Boolean Partial) {
            this.Partial = Partial;
            return this;
        };
        public AS_Sync set_Wait(Integer Wait) {
            this.Wait = Wait;
            return this;
        };
        public AS_Sync set_HeartbeatInterval(Integer HeartbeatInterval) {
            this.HeartbeatInterval = HeartbeatInterval;
            return this;
        };
        public AS_Sync set_WindowSize(Integer WindowSize) {
            this.WindowSize = WindowSize;
            return this;
        };
    }
    
    public enum AS_recurrence_type {
        daily(0),
        weekly(1),
        monthly_N(2),
        monthly(3),
        yearly_NN(5),
        yearly(6);
        public final Integer value;
        AS_recurrence_type(Integer value) { this.value = value; }
        public AS_recurrence_type fromInteger(Integer x) {
            switch (x) {
            case 0: return AS_recurrence_type.daily;
            case 1: return AS_recurrence_type.weekly;
            case 2: return AS_recurrence_type.monthly_N;
            case 3: return AS_recurrence_type.monthly;
            case 5: return AS_recurrence_type.yearly_NN;
            case 6: return AS_recurrence_type.yearly;
            }
            return null;
        }
        public Integer toInteger() { return value; }
    }
    
    public enum AS_calendar_type {
        Default(0),
        Gregorian(1),
        Gregorian_US(2),
        Japan(3),
        Taiwan(4),
        Korea(5),
        Hijri(6),
        Thai(7),
        Hebrew(8),
        GregorianMeFrench(9),
        Gregorian_Arabic(10),
        Gregorian_translated_English(11),
        Gregorian_translated_French(12),
        Japanese_Lunar(14),
        Chinese_Lunar(15),
        Korean_Lunar(20);
        public final Integer value;
        AS_calendar_type(Integer value) { this.value = value; }
        public AS_calendar_type fromInteger(Integer x) {
            switch (x) {
            case 0: return AS_calendar_type.Default;
            case 1: return AS_calendar_type.Gregorian;
            case 2: return AS_calendar_type.Gregorian_US;
            case 3: return AS_calendar_type.Japan;
            case 4: return AS_calendar_type.Taiwan;
            case 5: return AS_calendar_type.Korea;
            case 6: return AS_calendar_type.Hijri;
            case 7: return AS_calendar_type.Thai;
            case 8: return AS_calendar_type.Hebrew;
            case 9: return AS_calendar_type.GregorianMeFrench;
            case 10: return AS_calendar_type.Gregorian_Arabic;
            case 11: return AS_calendar_type.Gregorian_translated_English;
            case 12: return AS_calendar_type.Gregorian_translated_French;
            case 14: return AS_calendar_type.Japanese_Lunar;
            case 15: return AS_calendar_type.Chinese_Lunar;
            case 20: return AS_calendar_type.Korean_Lunar;
            }
            return null;
        }
        public Integer toInteger() { return value; }
    }
    
    public enum AS_day_of_week {
        Sunday(1),
        Monday(2),
        Tuesday(4),
        Wednesday(8),
        Thursday(16),
        Friday(32),
        Saturday(64);
        public final Integer value;
        AS_day_of_week(Integer value) { this.value = value; }
        public AS_day_of_week fromInteger(Integer x) {
            switch (x) {
            case 1: return AS_day_of_week.Sunday;
            case 2: return AS_day_of_week.Monday;
            case 4: return AS_day_of_week.Tuesday;
            case 8: return AS_day_of_week.Wednesday;
            case 16: return AS_day_of_week.Thursday;
            case 32: return AS_day_of_week.Friday;
            case 64: return AS_day_of_week.Saturday;
            }
            return null;
        }
        public Integer toInteger() { return value; }
    }
    
    public class AS_Recurrence {
        public AS_recurrence_type Type;
        public Integer Interval;
        public Date Until;
        public Integer Occurrences;
        public Integer WeekOfMonth;
        public Integer DayOfMonth;
        public AS_day_of_week DayOfWeek;
        public Integer MonthOfYear;
        public AS_calendar_type CalendarType;
        public Boolean IsLeapMonth;
        public AS_day_of_week FirstDayOfWeek;
        public AS_Recurrence() { }
        public AS_Recurrence(AS_recurrence_type Type,Integer Interval,Date Until,Integer Occurrences,Integer WeekOfMonth,Integer DayOfMonth,AS_day_of_week DayOfWeek,Integer MonthOfYear,AS_calendar_type CalendarType,Boolean IsLeapMonth,AS_day_of_week FirstDayOfWeek) {
            this.Type = Type;
            this.Interval = Interval;
            this.Until = Until;
            this.Occurrences = Occurrences;
            this.WeekOfMonth = WeekOfMonth;
            this.DayOfMonth = DayOfMonth;
            this.DayOfWeek = DayOfWeek;
            this.MonthOfYear = MonthOfYear;
            this.CalendarType = CalendarType;
            this.IsLeapMonth = IsLeapMonth;
            this.FirstDayOfWeek = FirstDayOfWeek;
        }
        public AS_Recurrence set_Type(AS_recurrence_type Type) {
            this.Type = Type;
            return this;
        };
        public AS_Recurrence set_Interval(Integer Interval) {
            this.Interval = Interval;
            return this;
        };
        public AS_Recurrence set_Until(Date Until) {
            this.Until = Until;
            return this;
        };
        public AS_Recurrence set_Occurrences(Integer Occurrences) {
            this.Occurrences = Occurrences;
            return this;
        };
        public AS_Recurrence set_WeekOfMonth(Integer WeekOfMonth) {
            this.WeekOfMonth = WeekOfMonth;
            return this;
        };
        public AS_Recurrence set_DayOfMonth(Integer DayOfMonth) {
            this.DayOfMonth = DayOfMonth;
            return this;
        };
        public AS_Recurrence set_DayOfWeek(AS_day_of_week DayOfWeek) {
            this.DayOfWeek = DayOfWeek;
            return this;
        };
        public AS_Recurrence set_MonthOfYear(Integer MonthOfYear) {
            this.MonthOfYear = MonthOfYear;
            return this;
        };
        public AS_Recurrence set_CalendarType(AS_calendar_type CalendarType) {
            this.CalendarType = CalendarType;
            return this;
        };
        public AS_Recurrence set_IsLeapMonth(Boolean IsLeapMonth) {
            this.IsLeapMonth = IsLeapMonth;
            return this;
        };
        public AS_Recurrence set_FirstDayOfWeek(AS_day_of_week FirstDayOfWeek) {
            this.FirstDayOfWeek = FirstDayOfWeek;
            return this;
        };
    }
    
    public enum AS_instance_type {
        single(0),
        master_recurring(1),
        single_recurring(2),
        exception(3);
        public final Integer value;
        AS_instance_type(Integer value) { this.value = value; }
        public AS_instance_type fromInteger(Integer x) {
            switch (x) {
            case 0: return AS_instance_type.single;
            case 1: return AS_instance_type.master_recurring;
            case 2: return AS_instance_type.single_recurring;
            case 3: return AS_instance_type.exception;
            }
            return null;
        }
        public Integer toInteger() { return value; }
    }
    
    public class AS_Recurrences {
        public AS_Recurrence Recurrence;
        public AS_Recurrences() { }
        public AS_Recurrences(AS_Recurrence Recurrence) {
            this.Recurrence = Recurrence;
        }
        public AS_Recurrences set_Recurrence(AS_Recurrence Recurrence) {
            this.Recurrence = Recurrence;
            return this;
        };
    }
    
    public enum AS_sensitivity {
        normal(0),
        personal(1),
        private_(2),
        confidential(3);
        public final Integer value;
        AS_sensitivity(Integer value) { this.value = value; }
        public AS_sensitivity fromInteger(Integer x) {
            switch (x) {
            case 0: return AS_sensitivity.normal;
            case 1: return AS_sensitivity.personal;
            case 2: return AS_sensitivity.private_;
            case 3: return AS_sensitivity.confidential;
            }
            return null;
        }
        public Integer toInteger() { return value; }
    }
    
    public enum AS_busy_status {
        free(0),
        tentative(1),
        busy(2),
        out_of_office(3);
        public final Integer value;
        AS_busy_status(Integer value) { this.value = value; }
        public AS_busy_status fromInteger(Integer x) {
            switch (x) {
            case 0: return AS_busy_status.free;
            case 1: return AS_busy_status.tentative;
            case 2: return AS_busy_status.busy;
            case 3: return AS_busy_status.out_of_office;
            }
            return null;
        }
        public Integer toInteger() { return value; }
    }
    
    public enum AS_meeting_message_type {
        unspecified(0),
        initial(1),
        full_update(2),
        informational_update(3),
        outdated(4),
        delegators_copy(5),
        delegated(6);
        public final Integer value;
        AS_meeting_message_type(Integer value) { this.value = value; }
        public AS_meeting_message_type fromInteger(Integer x) {
            switch (x) {
            case 0: return AS_meeting_message_type.unspecified;
            case 1: return AS_meeting_message_type.initial;
            case 2: return AS_meeting_message_type.full_update;
            case 3: return AS_meeting_message_type.informational_update;
            case 4: return AS_meeting_message_type.outdated;
            case 5: return AS_meeting_message_type.delegators_copy;
            case 6: return AS_meeting_message_type.delegated;
            }
            return null;
        }
        public Integer toInteger() { return value; }
    }
    
    public enum AS_importance {
        low(0),
        normal(1),
        high(2);
        public final Integer value;
        AS_importance(Integer value) { this.value = value; }
        public AS_importance fromInteger(Integer x) {
            switch (x) {
            case 0: return AS_importance.low;
            case 1: return AS_importance.normal;
            case 2: return AS_importance.high;
            }
            return null;
        }
        public Integer toInteger() { return value; }
    }
    
    public class AS_MeetingRequest {
        public Boolean AllDayEvent;
        public Date StartTime;
        public Date DtStamp;
        public Date EndTime;
        public AS_instance_type InstanceType;
        public String Location;
        public String Organizer;
        public Date RecurrenceId;
        public Integer Reminder;
        public Boolean ResponseRequested;
        public AS_Recurrences Recurrences;
        public AS_sensitivity Sensitivity;
        public AS_busy_status BusyStatus;
        public byte[] TimeZone;
        public String GlobalObjId;
        public Integer DisallowNewTimeProposal;
        public AS_meeting_message_type MeetingMessageType;
        public AS_MeetingRequest() { }
        public AS_MeetingRequest(Boolean AllDayEvent,Date StartTime,Date DtStamp,Date EndTime,AS_instance_type InstanceType,String Location,String Organizer,Date RecurrenceId,Integer Reminder,Boolean ResponseRequested,AS_Recurrences Recurrences,AS_sensitivity Sensitivity,AS_busy_status BusyStatus,byte[] TimeZone,String GlobalObjId,Integer DisallowNewTimeProposal,AS_meeting_message_type MeetingMessageType) {
            this.AllDayEvent = AllDayEvent;
            this.StartTime = StartTime;
            this.DtStamp = DtStamp;
            this.EndTime = EndTime;
            this.InstanceType = InstanceType;
            this.Location = Location;
            this.Organizer = Organizer;
            this.RecurrenceId = RecurrenceId;
            this.Reminder = Reminder;
            this.ResponseRequested = ResponseRequested;
            this.Recurrences = Recurrences;
            this.Sensitivity = Sensitivity;
            this.BusyStatus = BusyStatus;
            this.TimeZone = TimeZone;
            this.GlobalObjId = GlobalObjId;
            this.DisallowNewTimeProposal = DisallowNewTimeProposal;
            this.MeetingMessageType = MeetingMessageType;
        }
        public AS_MeetingRequest set_AllDayEvent(Boolean AllDayEvent) {
            this.AllDayEvent = AllDayEvent;
            return this;
        };
        public AS_MeetingRequest set_StartTime(Date StartTime) {
            this.StartTime = StartTime;
            return this;
        };
        public AS_MeetingRequest set_DtStamp(Date DtStamp) {
            this.DtStamp = DtStamp;
            return this;
        };
        public AS_MeetingRequest set_EndTime(Date EndTime) {
            this.EndTime = EndTime;
            return this;
        };
        public AS_MeetingRequest set_InstanceType(AS_instance_type InstanceType) {
            this.InstanceType = InstanceType;
            return this;
        };
        public AS_MeetingRequest set_Location(String Location) {
            this.Location = Location;
            return this;
        };
        public AS_MeetingRequest set_Organizer(String Organizer) {
            this.Organizer = Organizer;
            return this;
        };
        public AS_MeetingRequest set_RecurrenceId(Date RecurrenceId) {
            this.RecurrenceId = RecurrenceId;
            return this;
        };
        public AS_MeetingRequest set_Reminder(Integer Reminder) {
            this.Reminder = Reminder;
            return this;
        };
        public AS_MeetingRequest set_ResponseRequested(Boolean ResponseRequested) {
            this.ResponseRequested = ResponseRequested;
            return this;
        };
        public AS_MeetingRequest set_Recurrences(AS_Recurrences Recurrences) {
            this.Recurrences = Recurrences;
            return this;
        };
        public AS_MeetingRequest set_Sensitivity(AS_sensitivity Sensitivity) {
            this.Sensitivity = Sensitivity;
            return this;
        };
        public AS_MeetingRequest set_BusyStatus(AS_busy_status BusyStatus) {
            this.BusyStatus = BusyStatus;
            return this;
        };
        public AS_MeetingRequest set_TimeZone(byte[] TimeZone) {
            this.TimeZone = TimeZone;
            return this;
        };
        public AS_MeetingRequest set_GlobalObjId(String GlobalObjId) {
            this.GlobalObjId = GlobalObjId;
            return this;
        };
        public AS_MeetingRequest set_DisallowNewTimeProposal(Integer DisallowNewTimeProposal) {
            this.DisallowNewTimeProposal = DisallowNewTimeProposal;
            return this;
        };
        public AS_MeetingRequest set_MeetingMessageType(AS_meeting_message_type MeetingMessageType) {
            this.MeetingMessageType = MeetingMessageType;
            return this;
        };
    }
    
    public class AS_Schema {
        public String To;
        public String Cc;
        public String From;
        public String ReplyTo;
        public Date DateReceived;
        public String Subject;
        public String DisplayTo;
        public AS_importance Importance;
        public Boolean Read;
        public String MessageClass;
        public AS_MeetingRequest MeetingRequest;
        public String ThreadTopic;
        public String InternetCPID;
        public AS_Schema() { }
        public AS_Schema(String To,String Cc,String From,String ReplyTo,Date DateReceived,String Subject,String DisplayTo,AS_importance Importance,Boolean Read,String MessageClass,AS_MeetingRequest MeetingRequest,String ThreadTopic,String InternetCPID) {
            this.To = To;
            this.Cc = Cc;
            this.From = From;
            this.ReplyTo = ReplyTo;
            this.DateReceived = DateReceived;
            this.Subject = Subject;
            this.DisplayTo = DisplayTo;
            this.Importance = Importance;
            this.Read = Read;
            this.MessageClass = MessageClass;
            this.MeetingRequest = MeetingRequest;
            this.ThreadTopic = ThreadTopic;
            this.InternetCPID = InternetCPID;
        }
        public AS_Schema set_To(String To) {
            this.To = To;
            return this;
        };
        public AS_Schema set_Cc(String Cc) {
            this.Cc = Cc;
            return this;
        };
        public AS_Schema set_From(String From) {
            this.From = From;
            return this;
        };
        public AS_Schema set_ReplyTo(String ReplyTo) {
            this.ReplyTo = ReplyTo;
            return this;
        };
        public AS_Schema set_DateReceived(Date DateReceived) {
            this.DateReceived = DateReceived;
            return this;
        };
        public AS_Schema set_Subject(String Subject) {
            this.Subject = Subject;
            return this;
        };
        public AS_Schema set_DisplayTo(String DisplayTo) {
            this.DisplayTo = DisplayTo;
            return this;
        };
        public AS_Schema set_Importance(AS_importance Importance) {
            this.Importance = Importance;
            return this;
        };
        public AS_Schema set_Read(Boolean Read) {
            this.Read = Read;
            return this;
        };
        public AS_Schema set_MessageClass(String MessageClass) {
            this.MessageClass = MessageClass;
            return this;
        };
        public AS_Schema set_MeetingRequest(AS_MeetingRequest MeetingRequest) {
            this.MeetingRequest = MeetingRequest;
            return this;
        };
        public AS_Schema set_ThreadTopic(String ThreadTopic) {
            this.ThreadTopic = ThreadTopic;
            return this;
        };
        public AS_Schema set_InternetCPID(String InternetCPID) {
            this.InternetCPID = InternetCPID;
            return this;
        };
    }
    
    public enum AS_MIMESupport {
        never(0),
        smime_only(1),
        always(2);
        public final Integer value;
        AS_MIMESupport(Integer value) { this.value = value; }
        public AS_MIMESupport fromInteger(Integer x) {
            switch (x) {
            case 0: return AS_MIMESupport.never;
            case 1: return AS_MIMESupport.smime_only;
            case 2: return AS_MIMESupport.always;
            }
            return null;
        }
        public Integer toInteger() { return value; }
    }
    
    public class AS_BodyPreference {
        public AS_Type Type;
        public Integer TruncationSize;
        public Boolean AllOrNone;
        public Integer Preview;
        public AS_BodyPreference() { }
        public AS_BodyPreference(AS_Type Type,Integer TruncationSize,Boolean AllOrNone,Integer Preview) {
            this.Type = Type;
            this.TruncationSize = TruncationSize;
            this.AllOrNone = AllOrNone;
            this.Preview = Preview;
        }
        public AS_BodyPreference set_Type(AS_Type Type) {
            this.Type = Type;
            return this;
        };
        public AS_BodyPreference set_TruncationSize(Integer TruncationSize) {
            this.TruncationSize = TruncationSize;
            return this;
        };
        public AS_BodyPreference set_AllOrNone(Boolean AllOrNone) {
            this.AllOrNone = AllOrNone;
            return this;
        };
        public AS_BodyPreference set_Preview(Integer Preview) {
            this.Preview = Preview;
            return this;
        };
    }
    
    public class AS_BodyPartPreference {
        public AS_BodyType Type;
        public Integer TruncationSize;
        public Boolean AllOrNone;
        public Integer Preview;
        public AS_BodyPartPreference() { }
        public AS_BodyPartPreference(AS_BodyType Type,Integer TruncationSize,Boolean AllOrNone,Integer Preview) {
            this.Type = Type;
            this.TruncationSize = TruncationSize;
            this.AllOrNone = AllOrNone;
            this.Preview = Preview;
        }
        public AS_BodyPartPreference set_Type(AS_BodyType Type) {
            this.Type = Type;
            return this;
        };
        public AS_BodyPartPreference set_TruncationSize(Integer TruncationSize) {
            this.TruncationSize = TruncationSize;
            return this;
        };
        public AS_BodyPartPreference set_AllOrNone(Boolean AllOrNone) {
            this.AllOrNone = AllOrNone;
            return this;
        };
        public AS_BodyPartPreference set_Preview(Integer Preview) {
            this.Preview = Preview;
            return this;
        };
    }
    
    public enum AS_Store {
        document_library("Document Library"),
        mailbox("Mailbox");
        public final String value;
        AS_Store(String value) { this.value = value; }
        public AS_Store fromString(String x) {
            switch (x) {
            case "Document Library": return AS_Store.document_library;
            case "Mailbox": return AS_Store.mailbox;
            }
            return null;
        }
        public String toString() { return value; }
    }
    
    public class AS_ItemOperationsFetchOptions {
        public AS_Schema Schema;
        public String Range;
        public String UserName;
        public String Password;
        public AS_MIMESupport MIMESupport;
        public AS_BodyPreference BodyPreference;
        public AS_BodyPartPreference BodyPartPreference;
        public AS_ItemOperationsFetchOptions() { }
        public AS_ItemOperationsFetchOptions(AS_Schema Schema,String Range,String UserName,String Password,AS_MIMESupport MIMESupport,AS_BodyPreference BodyPreference,AS_BodyPartPreference BodyPartPreference) {
            this.Schema = Schema;
            this.Range = Range;
            this.UserName = UserName;
            this.Password = Password;
            this.MIMESupport = MIMESupport;
            this.BodyPreference = BodyPreference;
            this.BodyPartPreference = BodyPartPreference;
        }
        public AS_ItemOperationsFetchOptions set_Schema(AS_Schema Schema) {
            this.Schema = Schema;
            return this;
        };
        public AS_ItemOperationsFetchOptions set_Range(String Range) {
            this.Range = Range;
            return this;
        };
        public AS_ItemOperationsFetchOptions set_UserName(String UserName) {
            this.UserName = UserName;
            return this;
        };
        public AS_ItemOperationsFetchOptions set_Password(String Password) {
            this.Password = Password;
            return this;
        };
        public AS_ItemOperationsFetchOptions set_MIMESupport(AS_MIMESupport MIMESupport) {
            this.MIMESupport = MIMESupport;
            return this;
        };
        public AS_ItemOperationsFetchOptions set_BodyPreference(AS_BodyPreference BodyPreference) {
            this.BodyPreference = BodyPreference;
            return this;
        };
        public AS_ItemOperationsFetchOptions set_BodyPartPreference(AS_BodyPartPreference BodyPartPreference) {
            this.BodyPartPreference = BodyPartPreference;
            return this;
        };
    }
    
    public class AS_ItemOperationsFetch {
        public AS_Store Store;
        public String LinkId;
        public String LongId;
        public String CollectionId;
        public String ServerId;
        public String FileReference;
        public AS_ItemOperationsFetchOptions Options;
        public AS_ItemOperationsFetch() { }
        public AS_ItemOperationsFetch(AS_Store Store,String LinkId,String LongId,String CollectionId,String ServerId,String FileReference,AS_ItemOperationsFetchOptions Options) {
            this.Store = Store;
            this.LinkId = LinkId;
            this.LongId = LongId;
            this.CollectionId = CollectionId;
            this.ServerId = ServerId;
            this.FileReference = FileReference;
            this.Options = Options;
        }
        public AS_ItemOperationsFetch set_Store(AS_Store Store) {
            this.Store = Store;
            return this;
        };
        public AS_ItemOperationsFetch set_LinkId(String LinkId) {
            this.LinkId = LinkId;
            return this;
        };
        public AS_ItemOperationsFetch set_LongId(String LongId) {
            this.LongId = LongId;
            return this;
        };
        public AS_ItemOperationsFetch set_CollectionId(String CollectionId) {
            this.CollectionId = CollectionId;
            return this;
        };
        public AS_ItemOperationsFetch set_ServerId(String ServerId) {
            this.ServerId = ServerId;
            return this;
        };
        public AS_ItemOperationsFetch set_FileReference(String FileReference) {
            this.FileReference = FileReference;
            return this;
        };
        public AS_ItemOperationsFetch set_Options(AS_ItemOperationsFetchOptions Options) {
            this.Options = Options;
            return this;
        };
    }
    
    public class AS_Fetch {
        public List<AS_ItemOperationsFetch> Fetch;
        public AS_Fetch() { }
        public AS_Fetch(List<AS_ItemOperationsFetch> Fetch) {
            this.Fetch = Fetch;
        }
        public AS_Fetch set_Fetch(List<AS_ItemOperationsFetch> Fetch) {
            this.Fetch = Fetch;
            return this;
        };
    }
    
    public class AS_AttachResponseProperties {
        public String ContentType;
        public byte[] Data;
        public AS_AttachResponseProperties() { }
        public AS_AttachResponseProperties(String ContentType,byte[] Data) {
            this.ContentType = ContentType;
            this.Data = Data;
        }
        public AS_AttachResponseProperties set_ContentType(String ContentType) {
            this.ContentType = ContentType;
            return this;
        };
        public AS_AttachResponseProperties set_Data(byte[] Data) {
            this.Data = Data;
            return this;
        };
    }
    
    public class AS_AttachFetchResponse {
        public Integer Status;
        public String FileReference;
        public AS_AttachResponseProperties Properties;
        public AS_AttachFetchResponse() { }
        public AS_AttachFetchResponse(Integer Status,String FileReference,AS_AttachResponseProperties Properties) {
            this.Status = Status;
            this.FileReference = FileReference;
            this.Properties = Properties;
        }
        public AS_AttachFetchResponse set_Status(Integer Status) {
            this.Status = Status;
            return this;
        };
        public AS_AttachFetchResponse set_FileReference(String FileReference) {
            this.FileReference = FileReference;
            return this;
        };
        public AS_AttachFetchResponse set_Properties(AS_AttachResponseProperties Properties) {
            this.Properties = Properties;
            return this;
        };
    }
    
    
    // XML parameter defaults
    
    public AS_FolderSyncType FolderSyncType_default() { return AS_FolderSyncType.generic; }
    public AS_AddSPDT AddSPDT_default() {
        return new AS_AddSPDT(
            null, // ServerId
            null, // ParentId
            null, // DisplayName
            FolderSyncType_default() // Type
        );
    }
    public AS_UpdateSPDT UpdateSPDT_default() {
        return new AS_UpdateSPDT(
            null, // ServerId
            null, // ParentId
            null, // DisplayName
            FolderSyncType_default() // Type
        );
    }
    public AS_FolderSyncChange FolderSyncChange_default() { return new AS_FolderSyncChange(); }
    public AS_flag_status flag_status_default() { return AS_flag_status.cleared; }
    public AS_CommandAdd CommandAdd_default() {
        return new AS_CommandAdd(
            null, // ServerId
            null, // ClientId
            null, // ApplicationData
            null // Class
        );
    }
    public AS_CommandDelete CommandDelete_default() {
        return new AS_CommandDelete(
            null, // ServerId
            null // Class
        );
    }
    public AS_CommandChange CommandChange_default() {
        return new AS_CommandChange(
            null, // ServerId
            null, // ApplicationData
            null // Class
        );
    }
    public AS_CommandFetch CommandFetch_default() {
        return new AS_CommandFetch(
            null // ServerId
        );
    }
    public AS_ServerId ServerId_default() {
        return new AS_ServerId(
            null // ServerId
        );
    }
    public AS_SyncCommands SyncCommands_default() {
        return new AS_SyncCommands(
            new ArrayList<AS_SyncCommandsAlt>() // Commands
        );
    }
    public AS_BodyPartStatus BodyPartStatus_default() { return AS_BodyPartStatus.success; }
    public AS_BodyPart BodyPart_default() {
        return new AS_BodyPart(
            BodyPartStatus_default(), // Status
            BodyType_default(), // Type
            null, // EstimatedDataSize
            null, // Truncated
            null, // Data
            null // Preview
        );
    }
    public AS_Type Type_default() { return AS_Type.text; }
    public AS_BodyType BodyType_default() { return AS_BodyType.text; }
    public AS_filter_type filter_type_default() { return AS_filter_type.no_filter; }
    public AS_MIMETruncation MIMETruncation_default() { return AS_MIMETruncation.truncate_all; }
    public AS_Class Class_default() { return AS_Class.Tasks; }
    public AS_Method Method_default() { return AS_Method.normal_attachment; }
    public AS_Attachment Attachment_default() {
        return new AS_Attachment(
            null, // DisplayName
            null, // FileReference
            Method_default(), // Method
            null, // EstimatedDataSize
            null, // ContentId
            null, // ContentLocation
            null // IsInline
        );
    }
    public AS_Attachments Attachments_default() { return new AS_Attachments(); }
    public AS_Body Body_default() {
        return new AS_Body(
            BodyType_default(), // Type
            null, // EstimatedDataSize
            false, // Truncated
            null, // Data
            null, // Part
            null // Preview
        );
    }
    public AS_Flag Flag_default() { return new AS_Flag(); }
    public AS_NativeBodyType NativeBodyType_default() { return AS_NativeBodyType.text; }
    public AS_EmailCategories EmailCategories_default() {
        return new AS_EmailCategories(
            new ArrayList<String>() // Category
        );
    }
    public AS_LastVerbExecuted LastVerbExecuted_default() { return AS_LastVerbExecuted.unknown; }
    public AS_EmailApplicationData EmailApplicationData_default() {
        return new AS_EmailApplicationData(
            null, // To
            null, // From
            null, // Cc
            null, // Subject
            null, // DateReceived
            null, // DisplayTo
            null, // ThreadTopic
            null, // Importance
            null, // Read
            new ArrayList<AS_Attachments>(), // Attachments
            null, // Body
            null, // MessageClass
            null, // InternetCPID
            new ArrayList<AS_Flag>(), // Flag
            null, // ContentClass
            null, // NativeBodyType
            null, // ConversationId
            null, // ConversationIndex
            EmailCategories_default(), // EmailCategories
            null, // LastVerbExecuted
            null // LastVerbExecutionTime
        );
    }
    public AS_FolderSyncB FolderSyncB_default() {
        return new AS_FolderSyncB(
            null, // SyncKey
            null, // Status
            new ArrayList<AS_FolderSyncChange>() // Changes
        );
    }
    public AS_FolderSyncF FolderSyncF_default() {
        return new AS_FolderSyncF(
            null // SyncKey
        );
    }
    public AS_ProvisionNoDI ProvisionNoDI_default() {
        return new AS_ProvisionNoDI(
        );
    }
    public AS_Policy Policy_default() {
        return new AS_Policy(
            null, // Status
            null, // PolicyType
            null // PolicyKey
        );
    }
    public AS_PolicyL PolicyL_default() {
        return new AS_PolicyL(
            Policy_default() // Policy
        );
    }
    public AS_ProvisionNoDIB ProvisionNoDIB_default() {
        return new AS_ProvisionNoDIB(
            null, // Status
            new ArrayList<AS_PolicyL>() // Policies
        );
    }
    public AS_SendMail SendMail_default() {
        return new AS_SendMail(
            null, // ClientId
            null, // AccountId
            null, // SaveInSentItems
            null // Mime
        );
    }
    public AS_Status Status_default() {
        return new AS_Status(
            null // Status
        );
    }
    public AS_Options Options_default() {
        return new AS_Options(
            null, // FilterType
            null, // MIMESupport
            null, // MIMETruncation
            null, // Conflict
            null, // Class
            null, // BodyPreference
            null // BodyPartPreference
        );
    }
    public AS_SyncCommandsAlt SyncCommandsAlt_default() { return new AS_SyncCommandsAlt(); }
    public AS_Collection Collection_default() {
        return new AS_Collection(
            null, // SyncKey
            null, // Status
            null, // CollectionId
            null, // DeletesAsMoves
            null, // GetChanges
            null, // WindowSize
            null, // ConversationMode
            null, // Options
            new ArrayList<AS_SyncCommandsAlt>() // Commands
        );
    }
    public AS_Collections Collections_default() {
        return new AS_Collections(
            Collection_default() // Collection
        );
    }
    public AS_Sync Sync_default() {
        return new AS_Sync(
            Collections_default(), // Collections
            null, // Partial
            null, // Wait
            null, // HeartbeatInterval
            null // WindowSize
        );
    }
    public AS_recurrence_type recurrence_type_default() { return AS_recurrence_type.daily; }
    public AS_calendar_type calendar_type_default() { return AS_calendar_type.Default; }
    public AS_day_of_week day_of_week_default() { return AS_day_of_week.Sunday; }
    public AS_Recurrence Recurrence_default() {
        return new AS_Recurrence(
            recurrence_type_default(), // Type
            null, // Interval
            null, // Until
            null, // Occurrences
            null, // WeekOfMonth
            null, // DayOfMonth
            null, // DayOfWeek
            null, // MonthOfYear
            null, // CalendarType
            null, // IsLeapMonth
            null // FirstDayOfWeek
        );
    }
    public AS_instance_type instance_type_default() { return AS_instance_type.single; }
    public AS_Recurrences Recurrences_default() {
        return new AS_Recurrences(
            Recurrence_default() // Recurrence
        );
    }
    public AS_sensitivity sensitivity_default() { return AS_sensitivity.normal; }
    public AS_busy_status busy_status_default() { return AS_busy_status.tentative; }
    public AS_meeting_message_type meeting_message_type_default() { return AS_meeting_message_type.unspecified; }
    public AS_importance importance_default() { return AS_importance.low; }
    public AS_MeetingRequest MeetingRequest_default() {
        return new AS_MeetingRequest(
            null, // AllDayEvent
            new Date(), // StartTime
            new Date(), // DtStamp
            new Date(), // EndTime
            instance_type_default(), // InstanceType
            null, // Location
            null, // Organizer
            null, // RecurrenceId
            null, // Reminder
            null, // ResponseRequested
            null, // Recurrences
            null, // Sensitivity
            null, // BusyStatus
            new byte[0], // TimeZone
            null, // GlobalObjId
            null, // DisallowNewTimeProposal
            meeting_message_type_default() // MeetingMessageType
        );
    }
    public AS_Schema Schema_default() {
        return new AS_Schema(
            null, // To
            null, // Cc
            null, // From
            null, // ReplyTo
            null, // DateReceived
            null, // Subject
            null, // DisplayTo
            null, // Importance
            null, // Read
            null, // MessageClass
            null, // MeetingRequest
            null, // ThreadTopic
            null // InternetCPID
        );
    }
    public AS_MIMESupport MIMESupport_default() { return AS_MIMESupport.never; }
    public AS_BodyPreference BodyPreference_default() {
        return new AS_BodyPreference(
            Type_default(), // Type
            null, // TruncationSize
            null, // AllOrNone
            null // Preview
        );
    }
    public AS_BodyPartPreference BodyPartPreference_default() {
        return new AS_BodyPartPreference(
            BodyType_default(), // Type
            null, // TruncationSize
            null, // AllOrNone
            null // Preview
        );
    }
    public AS_Store Store_default() { return AS_Store.document_library; }
    public AS_ItemOperationsFetchOptions ItemOperationsFetchOptions_default() {
        return new AS_ItemOperationsFetchOptions(
            null, // Schema
            null, // Range
            null, // UserName
            null, // Password
            null, // MIMESupport
            null, // BodyPreference
            null // BodyPartPreference
        );
    }
    public AS_ItemOperationsFetch ItemOperationsFetch_default() {
        return new AS_ItemOperationsFetch(
            Store_default(), // Store
            null, // LinkId
            null, // LongId
            null, // CollectionId
            null, // ServerId
            null, // FileReference
            null // Options
        );
    }
    public AS_Fetch Fetch_default() {
        return new AS_Fetch(
            new ArrayList<AS_ItemOperationsFetch>() // Fetch
        );
    }
    public AS_AttachResponseProperties AttachResponseProperties_default() {
        return new AS_AttachResponseProperties(
            null, // ContentType
            new byte[0] // Data
        );
    }
    public AS_AttachFetchResponse AttachFetchResponse_default() {
        return new AS_AttachFetchResponse(
            null, // Status
            null, // FileReference
            AttachResponseProperties_default() // Properties
        );
    }
    
    // Pack XML functions
    
    public String pack_Fetch(
        List<AS_ItemOperationsFetch> Fetch
    ) {
        return "<ItemOperations xmlns=\"ItemOperations\">"+pack_list(new Callable<AS_ItemOperationsFetch,String>() { public String call(AS_ItemOperationsFetch v) { return packc_ItemOperationsFetch(v); } },Fetch)
             + "</ItemOperations>";
    }
    
    public String packc_Fetch(
        AS_Fetch fetch_50
    ) {
        return pack_Fetch(
             fetch_50.Fetch
        );
    }
    
    public String pack_ItemOperationsFetch(
        AS_Store Store,
        String LinkId,
        String LongId,
        String CollectionId,
        String ServerId,
        String FileReference,
        AS_ItemOperationsFetchOptions Options
    ) {
        return "<Fetch xmlns=\"ItemOperations\">"
             + "<Store>"+Store.toString()
             + "</Store>"
             + ((LinkId!=null)?("<LinkId xmlns=\"DocumentLibrary\">"+LinkId+"</LinkId>"):"")
             + ((LongId!=null)?("<LongId xmlns=\"Search\">"+LongId+"</LongId>"):"")
             + ((CollectionId!=null)?("<CollectionId xmlns=\"AirSync\">"+CollectionId+"</CollectionId>"):"")
             + ((ServerId!=null)?("<ServerId xmlns=\"AirSync\">"+ServerId+"</ServerId>"):"")
             + ((FileReference!=null)?("<FileReference xmlns=\"AirSyncBase\">"+FileReference+"</FileReference>"):"")
             + ((Options!=null)?(packc_ItemOperationsFetchOptions(Options)):"")
             + "</Fetch>";
    }
    
    public String packc_ItemOperationsFetch(
        AS_ItemOperationsFetch itemoperationsfetch_49
    ) {
        return pack_ItemOperationsFetch(
             itemoperationsfetch_49.Store,
             itemoperationsfetch_49.LinkId,
             itemoperationsfetch_49.LongId,
             itemoperationsfetch_49.CollectionId,
             itemoperationsfetch_49.ServerId,
             itemoperationsfetch_49.FileReference,
             itemoperationsfetch_49.Options
        );
    }
    
    public String pack_Store(
        AS_Store Store
    ) {
        return ""
             + "<Store>"+Store.toString()
             + "</Store>"
             + "";
    }
    
    public String packc_Store(
        AS_Store store_48
    ) {
        return pack_Store(
        store_48
        );
    }
    
    public String pack_ItemOperationsFetchOptions(
        AS_Schema Schema,
        String Range,
        String UserName,
        String Password,
        AS_MIMESupport MIMESupport,
        AS_BodyPreference BodyPreference,
        AS_BodyPartPreference BodyPartPreference
    ) {
        return "<Options xmlns=\"ItemOperations\">"
             + ((Schema!=null)?(packc_Schema(Schema)):"")
             + ((Range!=null)?("<Range>"+Range+"</Range>"):"")
             + ((UserName!=null)?("<UserName>"+UserName+"</UserName>"):"")
             + ((Password!=null)?("<Password>"+Password+"</Password>"):"")
             + ((MIMESupport!=null)?("<MIMESupport xmlns=\"AirSync\">"+MIMESupport.toInteger()
             + "</MIMESupport>"):"")
             + ((BodyPreference!=null)?(packc_BodyPreference(BodyPreference)):"")
             + ((BodyPartPreference!=null)?(packc_BodyPartPreference(BodyPartPreference)):"")
             + "</Options>";
    }
    
    public String packc_ItemOperationsFetchOptions(
        AS_ItemOperationsFetchOptions itemoperationsfetchoptions_47
    ) {
        return pack_ItemOperationsFetchOptions(
             itemoperationsfetchoptions_47.Schema,
             itemoperationsfetchoptions_47.Range,
             itemoperationsfetchoptions_47.UserName,
             itemoperationsfetchoptions_47.Password,
             itemoperationsfetchoptions_47.MIMESupport,
             itemoperationsfetchoptions_47.BodyPreference,
             itemoperationsfetchoptions_47.BodyPartPreference
        );
    }
    
    public String pack_Schema(
        String To,
        String Cc,
        String From,
        String ReplyTo,
        Date DateReceived,
        String Subject,
        String DisplayTo,
        AS_importance Importance,
        Boolean Read,
        String MessageClass,
        AS_MeetingRequest MeetingRequest,
        String ThreadTopic,
        String InternetCPID
    ) {
        return "<Schema xmlns=\"ItemOperations\">"
             + ((To!=null)?("<To xmlns=\"Email\">"+To+"</To>"):"")
             + ((Cc!=null)?("<Cc xmlns=\"Email\">"+Cc+"</Cc>"):"")
             + ((From!=null)?("<From xmlns=\"Email\">"+From+"</From>"):"")
             + ((ReplyTo!=null)?("<ReplyTo xmlns=\"Email\">"+ReplyTo+"</ReplyTo>"):"")
             + ((DateReceived!=null)?("<DateReceived xmlns=\"Email\">"
             + (DatatypeConverter.printDateTime(DateToCalendar(DateReceived)))
             + "</DateReceived>"):"")
             + ((Subject!=null)?("<Subject xmlns=\"Email\">"+Subject+"</Subject>"):"")
             + ((DisplayTo!=null)?("<DisplayTo xmlns=\"Email\">"+DisplayTo+"</DisplayTo>"):"")
             + ((Importance!=null)?("<importance xmlns=\"Email\">"+Importance.toInteger()
             + "</importance>"):"")
             + ((Read!=null)?("<Read xmlns=\"Email\">"
             + ((Read)?1:0)
             + "</Read>"):"")
             + ((MessageClass!=null)?("<MessageClass xmlns=\"Email\">"+MessageClass+"</MessageClass>"):"")
             + ((MeetingRequest!=null)?(packc_MeetingRequest(MeetingRequest)):"")
             + ((ThreadTopic!=null)?("<ThreadTopic xmlns=\"Email\">"+ThreadTopic+"</ThreadTopic>"):"")
             + ((InternetCPID!=null)?("<InternetCPID xmlns=\"Email\">"+InternetCPID+"</InternetCPID>"):"")
             + "</Schema>";
    }
    
    public String packc_Schema(
        AS_Schema schema_46
    ) {
        return pack_Schema(
             schema_46.To,
             schema_46.Cc,
             schema_46.From,
             schema_46.ReplyTo,
             schema_46.DateReceived,
             schema_46.Subject,
             schema_46.DisplayTo,
             schema_46.Importance,
             schema_46.Read,
             schema_46.MessageClass,
             schema_46.MeetingRequest,
             schema_46.ThreadTopic,
             schema_46.InternetCPID
        );
    }
    
    public String pack_MeetingRequest(
        Boolean AllDayEvent,
        Date StartTime,
        Date DtStamp,
        Date EndTime,
        AS_instance_type InstanceType,
        String Location,
        String Organizer,
        Date RecurrenceId,
        Integer Reminder,
        Boolean ResponseRequested,
        AS_Recurrences Recurrences,
        AS_sensitivity Sensitivity,
        AS_busy_status BusyStatus,
        byte[] TimeZone,
        String GlobalObjId,
        Integer DisallowNewTimeProposal,
        AS_meeting_message_type MeetingMessageType
    ) {
        return "<MeetingRequest xmlns=\"Email\">"
             + ((AllDayEvent!=null)?("<AllDayEvent>"
             + ((AllDayEvent)?1:0)
             + "</AllDayEvent>"):"")
             + "<StartTime>"
             + (DatatypeConverter.printDateTime(DateToCalendar(StartTime)))
             + "</StartTime>"
             + "<DtStamp>"
             + (DatatypeConverter.printDateTime(DateToCalendar(DtStamp)))
             + "</DtStamp>"
             + "<EndTime>"
             + (DatatypeConverter.printDateTime(DateToCalendar(EndTime)))
             + "</EndTime>"
             + "<instance_type>"+InstanceType.toInteger()
             + "</instance_type>"
             + ((Location!=null)?("<Location>"+Location+"</Location>"):"")
             + ((Organizer!=null)?("<Organizer>"+Organizer+"</Organizer>"):"")
             + ((RecurrenceId!=null)?("<RecurrenceId>"
             + (DatatypeConverter.printDateTime(DateToCalendar(RecurrenceId)))
             + "</RecurrenceId>"):"")
             + ((Reminder!=null)?("<Reminder>"+Reminder+"</Reminder>"):"")
             + ((ResponseRequested!=null)?("<ResponseRequested>"
             + ((ResponseRequested)?1:0)
             + "</ResponseRequested>"):"")
             + ((Recurrences!=null)?(packc_Recurrences(Recurrences)):"")
             + ((Sensitivity!=null)?("<sensitivity>"+Sensitivity.toInteger()
             + "</sensitivity>"):"")
             + ((BusyStatus!=null)?("<busy_status>"+BusyStatus.toInteger()
             + "</busy_status>"):"")
             + "/* handler needed for Base64 */<GlobalObjId>"+GlobalObjId+"</GlobalObjId>"
             + ((DisallowNewTimeProposal!=null)?("<DisallowNewTimeProposal>"+DisallowNewTimeProposal+"</DisallowNewTimeProposal>"):"")
             + "<meeting_message_type xmlns=\"Email2\">"+MeetingMessageType.toInteger()
             + "</meeting_message_type>"
             + "</MeetingRequest>";
    }
    
    public String packc_MeetingRequest(
        AS_MeetingRequest meetingrequest_45
    ) {
        return pack_MeetingRequest(
             meetingrequest_45.AllDayEvent,
             meetingrequest_45.StartTime,
             meetingrequest_45.DtStamp,
             meetingrequest_45.EndTime,
             meetingrequest_45.InstanceType,
             meetingrequest_45.Location,
             meetingrequest_45.Organizer,
             meetingrequest_45.RecurrenceId,
             meetingrequest_45.Reminder,
             meetingrequest_45.ResponseRequested,
             meetingrequest_45.Recurrences,
             meetingrequest_45.Sensitivity,
             meetingrequest_45.BusyStatus,
             meetingrequest_45.TimeZone,
             meetingrequest_45.GlobalObjId,
             meetingrequest_45.DisallowNewTimeProposal,
             meetingrequest_45.MeetingMessageType
        );
    }
    
    public String pack_meeting_message_type(
        AS_meeting_message_type meeting_message_type
    ) {
        return ""
             + "<meeting_message_type>"+meeting_message_type.toInteger()
             + "</meeting_message_type>"
             + "";
    }
    
    public String packc_meeting_message_type(
        AS_meeting_message_type meeting_message_type_44
    ) {
        return pack_meeting_message_type(
        meeting_message_type_44
        );
    }
    
    public String pack_busy_status(
        AS_busy_status busy_status
    ) {
        return ""
             + "<busy_status>"+busy_status.toInteger()
             + "</busy_status>"
             + "";
    }
    
    public String packc_busy_status(
        AS_busy_status busy_status_43
    ) {
        return pack_busy_status(
        busy_status_43
        );
    }
    
    public String pack_sensitivity(
        AS_sensitivity sensitivity
    ) {
        return ""
             + "<sensitivity>"+sensitivity.toInteger()
             + "</sensitivity>"
             + "";
    }
    
    public String packc_sensitivity(
        AS_sensitivity sensitivity_42
    ) {
        return pack_sensitivity(
        sensitivity_42
        );
    }
    
    public String pack_Recurrences(
        AS_Recurrence Recurrence
    ) {
        return "<Recurrences>"
             + packc_Recurrence(Recurrence)
             + "</Recurrences>";
    }
    
    public String packc_Recurrences(
        AS_Recurrences recurrences_41
    ) {
        return pack_Recurrences(
             recurrences_41.Recurrence
        );
    }
    
    public String pack_Recurrence(
        AS_recurrence_type Type,
        Integer Interval,
        Date Until,
        Integer Occurrences,
        Integer WeekOfMonth,
        Integer DayOfMonth,
        AS_day_of_week DayOfWeek,
        Integer MonthOfYear,
        AS_calendar_type CalendarType,
        Boolean IsLeapMonth,
        AS_day_of_week FirstDayOfWeek
    ) {
        return "<Recurrence>"
             + "<recurrence_type>"+Type.toInteger()
             + "</recurrence_type>"
             + "<Interval>"+Interval+"</Interval>"
             + ((Until!=null)?("<Until>"
             + (DatatypeConverter.printDateTime(DateToCalendar(Until)))
             + "</Until>"):"")
             + ((Occurrences!=null)?("<Occurrences>"+Occurrences+"</Occurrences>"):"")
             + ((WeekOfMonth!=null)?("<WeekOfMonth>"+WeekOfMonth+"</WeekOfMonth>"):"")
             + ((DayOfMonth!=null)?("<DayOfMonth>"+DayOfMonth+"</DayOfMonth>"):"")
             + ((DayOfWeek!=null)?("<day_of_week>"+DayOfWeek.toInteger()
             + "</day_of_week>"):"")
             + ((MonthOfYear!=null)?("<MonthOfYear>"+MonthOfYear+"</MonthOfYear>"):"")
             + ((CalendarType!=null)?("<calendar_type xmlns=\"Email2\">"+CalendarType.toInteger()
             + "</calendar_type>"):"")
             + ((IsLeapMonth!=null)?("<IsLeapMonth xmlns=\"Email2\">"
             + ((IsLeapMonth)?1:0)
             + "</IsLeapMonth>"):"")
             + ((FirstDayOfWeek!=null)?("<day_of_week xmlns=\"Email2\">"+FirstDayOfWeek.toInteger()
             + "</day_of_week>"):"")
             + "</Recurrence>";
    }
    
    public String packc_Recurrence(
        AS_Recurrence recurrence_40
    ) {
        return pack_Recurrence(
             recurrence_40.Type,
             recurrence_40.Interval,
             recurrence_40.Until,
             recurrence_40.Occurrences,
             recurrence_40.WeekOfMonth,
             recurrence_40.DayOfMonth,
             recurrence_40.DayOfWeek,
             recurrence_40.MonthOfYear,
             recurrence_40.CalendarType,
             recurrence_40.IsLeapMonth,
             recurrence_40.FirstDayOfWeek
        );
    }
    
    public String pack_calendar_type(
        AS_calendar_type calendar_type
    ) {
        return ""
             + "<calendar_type>"+calendar_type.toInteger()
             + "</calendar_type>"
             + "";
    }
    
    public String packc_calendar_type(
        AS_calendar_type calendar_type_39
    ) {
        return pack_calendar_type(
        calendar_type_39
        );
    }
    
    public String pack_day_of_week(
        AS_day_of_week day_of_week
    ) {
        return ""
             + "<day_of_week>"+day_of_week.toInteger()
             + "</day_of_week>"
             + "";
    }
    
    public String packc_day_of_week(
        AS_day_of_week day_of_week_38
    ) {
        return pack_day_of_week(
        day_of_week_38
        );
    }
    
    public String pack_recurrence_type(
        AS_recurrence_type recurrence_type
    ) {
        return ""
             + "<recurrence_type>"+recurrence_type.toInteger()
             + "</recurrence_type>"
             + "";
    }
    
    public String packc_recurrence_type(
        AS_recurrence_type recurrence_type_37
    ) {
        return pack_recurrence_type(
        recurrence_type_37
        );
    }
    
    public String pack_instance_type(
        AS_instance_type instance_type
    ) {
        return ""
             + "<instance_type>"+instance_type.toInteger()
             + "</instance_type>"
             + "";
    }
    
    public String packc_instance_type(
        AS_instance_type instance_type_36
    ) {
        return pack_instance_type(
        instance_type_36
        );
    }
    
    public String pack_importance(
        AS_importance importance
    ) {
        return ""
             + "<importance>"+importance.toInteger()
             + "</importance>"
             + "";
    }
    
    public String packc_importance(
        AS_importance importance_35
    ) {
        return pack_importance(
        importance_35
        );
    }
    
    public String pack_Sync(
        AS_Collections Collections,
        Boolean Partial,
        Integer Wait,
        Integer HeartbeatInterval,
        Integer WindowSize
    ) {
        return "<Sync xmlns=\"AirSync\">"
             + packc_Collections(Collections)
             + ((Partial!=null)?"<Partial></Partial>":"")
             + ((Wait!=null)?("<Wait>"+Wait+"</Wait>"):"")
             + ((HeartbeatInterval!=null)?("<HeartbeatInterval>"+HeartbeatInterval+"</HeartbeatInterval>"):"")
             + ((WindowSize!=null)?("<WindowSize>"+WindowSize+"</WindowSize>"):"")
             + "</Sync>";
    }
    
    public String packc_Sync(
        AS_Sync sync_34
    ) {
        return pack_Sync(
             sync_34.Collections,
             sync_34.Partial,
             sync_34.Wait,
             sync_34.HeartbeatInterval,
             sync_34.WindowSize
        );
    }
    
    public String pack_Collections(
        AS_Collection Collection
    ) {
        return "<Collections>"
             + packc_Collection(Collection)
             + "</Collections>";
    }
    
    public String packc_Collections(
        AS_Collections collections_33
    ) {
        return pack_Collections(
             collections_33.Collection
        );
    }
    
    public String pack_Collection(
        String SyncKey,
        String CollectionId,
        Boolean DeletesAsMoves,
        Boolean GetChanges,
        Integer WindowSize,
        Boolean ConversationMode,
        AS_Options Options,
        List<AS_SyncCommandsAlt> Commands
    ) {
        return "<Collection xmlns=\"AirSync\"><SyncKey>"+SyncKey+"</SyncKey><CollectionId>"+CollectionId+"</CollectionId>"
             + ((DeletesAsMoves!=null)?("<DeletesAsMoves>"
             + ((DeletesAsMoves)?1:0)
             + "</DeletesAsMoves>"):"")
             + ((GetChanges!=null)?"<GetChanges></GetChanges>":"")
             + ((WindowSize!=null)?("<WindowSize>"+WindowSize+"</WindowSize>"):"")
             + ((ConversationMode!=null)?("<ConversationMode>"
             + ((ConversationMode)?1:0)
             + "</ConversationMode>"):"")
             + ((Options!=null)?(packc_Options(Options)):"")+pack_list(new Callable<AS_SyncCommandsAlt,String>() { public String call(AS_SyncCommandsAlt v) { return packc_SyncCommandsAlt(v); } },Commands)
             + "</Collection>";
    }
    
    public String packc_Collection(
        AS_Collection collection_32
    ) {
        return pack_Collection(
             collection_32.SyncKey,
             collection_32.CollectionId,
             collection_32.DeletesAsMoves,
             collection_32.GetChanges,
             collection_32.WindowSize,
             collection_32.ConversationMode,
             collection_32.Options,
             collection_32.Commands
        );
    }
    
    public String pack_SendMail(
        String ClientId,
        String AccountId,
        Boolean SaveInSentItems,
        byte[] Mime
    ) {
        return "<SendMail xmlns=\"ComposeMail\"><ClientId>"+ClientId+"</ClientId>"
             + ((AccountId!=null)?("<AccountId>"+AccountId+"</AccountId>"):"")
             + ((SaveInSentItems!=null)?"<SaveInSentItems></SaveInSentItems>":"")
             + "<Mime>BASE64"+DatatypeConverter.printBase64Binary(Mime)
             + "</Mime></SendMail>";
    }
    
    public String packc_SendMail(
        AS_SendMail sendmail_31
    ) {
        return pack_SendMail(
             sendmail_31.ClientId,
             sendmail_31.AccountId,
             sendmail_31.SaveInSentItems,
             sendmail_31.Mime
        );
    }
    
    public String pack_ProvisionNoDI(
    ) {
        return "<Provision xmlns=\"Provision\"><Policies><Policy><PolicyType>MS-EAS-Provisioning-WBXML</PolicyType></Policy></Policies></Provision>";
    }
    
    public String packc_ProvisionNoDI(
        AS_ProvisionNoDI provisionnodi_30
    ) {
        return pack_ProvisionNoDI(
        );
    }
    
    public String pack_FolderSyncF(
        String SyncKey
    ) {
        return "<FolderSync xmlns=\"FolderHierarchy\"><SyncKey>"+SyncKey+"</SyncKey></FolderSync>";
    }
    
    public String packc_FolderSyncF(
        AS_FolderSyncF foldersyncf_29
    ) {
        return pack_FolderSyncF(
             foldersyncf_29.SyncKey
        );
    }
    
    public String pack_EmailApplicationData(
        String To,
        String From,
        String Cc,
        String Subject,
        String DateReceived,
        String DisplayTo,
        String ThreadTopic,
        Integer Importance,
        Integer Read,
        List<AS_Attachments> Attachments,
        AS_Body Body,
        String MessageClass,
        String InternetCPID,
        List<AS_Flag> Flag,
        String ContentClass,
        AS_NativeBodyType NativeBodyType,
        byte[] ConversationId,
        byte[] ConversationIndex,
        AS_EmailCategories EmailCategories,
        AS_LastVerbExecuted LastVerbExecuted,
        Date LastVerbExecutionTime
    ) {
        return "<ApplicationData xmlns=\"AirSync\">"
             + ((To!=null)?("<To xmlns=\"Email\">"+To+"</To>"):"")
             + ((From!=null)?("<From xmlns=\"Email\">"+From+"</From>"):"")
             + ((Cc!=null)?("<Cc xmlns=\"Email\">"+Cc+"</Cc>"):"")
             + ((Subject!=null)?("<Subject xmlns=\"Email\">"+Subject+"</Subject>"):"")
             + ((DateReceived!=null)?("<DateReceived xmlns=\"Email\">"+DateReceived+"</DateReceived>"):"")
             + ((DisplayTo!=null)?("<DisplayTo xmlns=\"Email\">"+DisplayTo+"</DisplayTo>"):"")
             + ((ThreadTopic!=null)?("<ThreadTopic xmlns=\"Email\">"+ThreadTopic+"</ThreadTopic>"):"")
             + ((Importance!=null)?("<Importance xmlns=\"Email\">"+Importance+"</Importance>"):"")
             + ((Read!=null)?("<Read xmlns=\"Email\">"+Read+"</Read>"):"")+pack_list(new Callable<AS_Attachments,String>() { public String call(AS_Attachments v) { return packc_Attachments(v); } },Attachments)
             + ((Body!=null)?(packc_Body(Body)):"")
             + ((MessageClass!=null)?("<MessageClass xmlns=\"Email\">"+MessageClass+"</MessageClass>"):"")
             + ((InternetCPID!=null)?("<InternetCPID xmlns=\"Email\">"+InternetCPID+"</InternetCPID>"):"")+pack_list(new Callable<AS_Flag,String>() { public String call(AS_Flag v) { return packc_Flag(v); } },Flag)
             + ((ContentClass!=null)?("<ContentClass xmlns=\"Email\">"+ContentClass+"</ContentClass>"):"")
             + ((NativeBodyType!=null)?("<NativeBodyType xmlns=\"Email\">"+NativeBodyType.toInteger()
             + "</NativeBodyType>"):"")
             + ((ConversationId!=null)?("<ConversationId xmlns=\"Email\">"+ConversationId+"</ConversationId>"):"")
             + ((ConversationIndex!=null)?("<ConversationIndex xmlns=\"Email\">"+ConversationIndex+"</ConversationIndex>"):"")
             + packc_EmailCategories(EmailCategories)
             + ((LastVerbExecuted!=null)?("<LastVerbExecuted xmlns=\"Email2\">"+LastVerbExecuted.toInteger()
             + "</LastVerbExecuted>"):"")
             + ((LastVerbExecutionTime!=null)?("<LastVerbExecutionTime xmlns=\"Email2\">"
             + (DatatypeConverter.printDateTime(DateToCalendar(LastVerbExecutionTime)))
             + "</LastVerbExecutionTime>"):"")
             + "</ApplicationData>";
    }
    
    public String packc_EmailApplicationData(
        AS_EmailApplicationData emailapplicationdata_28
    ) {
        return pack_EmailApplicationData(
             emailapplicationdata_28.To,
             emailapplicationdata_28.From,
             emailapplicationdata_28.Cc,
             emailapplicationdata_28.Subject,
             emailapplicationdata_28.DateReceived,
             emailapplicationdata_28.DisplayTo,
             emailapplicationdata_28.ThreadTopic,
             emailapplicationdata_28.Importance,
             emailapplicationdata_28.Read,
             emailapplicationdata_28.Attachments,
             emailapplicationdata_28.Body,
             emailapplicationdata_28.MessageClass,
             emailapplicationdata_28.InternetCPID,
             emailapplicationdata_28.Flag,
             emailapplicationdata_28.ContentClass,
             emailapplicationdata_28.NativeBodyType,
             emailapplicationdata_28.ConversationId,
             emailapplicationdata_28.ConversationIndex,
             emailapplicationdata_28.EmailCategories,
             emailapplicationdata_28.LastVerbExecuted,
             emailapplicationdata_28.LastVerbExecutionTime
        );
    }
    
    public String pack_NativeBodyType(
        AS_NativeBodyType NativeBodyType
    ) {
        return ""
             + "<NativeBodyType>"+NativeBodyType.toInteger()
             + "</NativeBodyType>"
             + "";
    }
    
    public String packc_NativeBodyType(
        AS_NativeBodyType nativebodytype_27
    ) {
        return pack_NativeBodyType(
        nativebodytype_27
        );
    }
    
    public String pack_Attachments(
        AS_Attachments Attachments
    ) {
        switch (Attachments.which) {
        case Attachment: return "<Attachment>"+packc_Attachment(Attachments.Attachment)+"</Attachment>";
        default: return "";
        }
    }
    
    public String packc_Attachments(
        AS_Attachments attachments_26
    ) {
        return pack_Attachments(
        attachments_26
        );
    }
    
    public String pack_Attachment(
        String DisplayName,
        String FileReference,
        AS_Method Method,
        Integer EstimatedDataSize,
        String ContentId,
        String ContentLocation,
        Boolean IsInline
    ) {
        return "<Attachment xmlns=\"AirSyncBase\">"
             + ((DisplayName!=null)?("<DisplayName>"+DisplayName+"</DisplayName>"):"")
             + "<FileReference>"+FileReference+"</FileReference>"
             + "<Method>"+Method.toInteger()
             + "</Method>"
             + "<EstimatedDataSize>"+EstimatedDataSize+"</EstimatedDataSize>"
             + ((ContentId!=null)?("<ContentId>"+ContentId+"</ContentId>"):"")
             + ((ContentLocation!=null)?("<ContentLocation>"+ContentLocation+"</ContentLocation>"):"")
             + ((IsInline!=null)?("<IsInline>"
             + ((IsInline)?1:0)
             + "</IsInline>"):"")
             + "</Attachment>";
    }
    
    public String packc_Attachment(
        AS_Attachment attachment_25
    ) {
        return pack_Attachment(
             attachment_25.DisplayName,
             attachment_25.FileReference,
             attachment_25.Method,
             attachment_25.EstimatedDataSize,
             attachment_25.ContentId,
             attachment_25.ContentLocation,
             attachment_25.IsInline
        );
    }
    
    public String pack_LastVerbExecuted(
        AS_LastVerbExecuted LastVerbExecuted
    ) {
        return ""
             + "<LastVerbExecuted>"+LastVerbExecuted.toInteger()
             + "</LastVerbExecuted>"
             + "";
    }
    
    public String packc_LastVerbExecuted(
        AS_LastVerbExecuted lastverbexecuted_24
    ) {
        return pack_LastVerbExecuted(
        lastverbexecuted_24
        );
    }
    
    public String pack_Method(
        AS_Method Method
    ) {
        return ""
             + "<Method>"+Method.toInteger()
             + "</Method>"
             + "";
    }
    
    public String packc_Method(
        AS_Method method_23
    ) {
        return pack_Method(
        method_23
        );
    }
    
    public String pack_EmailCategories(
        List<String> Category
    ) {
        return "<Categories xmlns=\"Email\">"+pack_list(new Callable<String,String>() { public String call(String v) { return pack_string(v); } },Category)
             + "</Categories>";
    }
    
    public String packc_EmailCategories(
        AS_EmailCategories emailcategories_22
    ) {
        return pack_EmailCategories(
             emailcategories_22.Category
        );
    }
    
    public String pack_Options(
        AS_filter_type FilterType,
        AS_MIMESupport MIMESupport,
        AS_MIMETruncation MIMETruncation,
        Boolean Conflict,
        AS_Class Class,
        AS_BodyPreference BodyPreference,
        AS_BodyPartPreference BodyPartPreference
    ) {
        return "<Options xmlns=\"AirSync\">"
             + ((FilterType!=null)?("<filter_type>"+FilterType.toInteger()
             + "</filter_type>"):"")
             + ((MIMESupport!=null)?("<MIMESupport>"+MIMESupport.toInteger()
             + "</MIMESupport>"):"")
             + ((MIMETruncation!=null)?("<MIMETruncation>"+MIMETruncation.toInteger()
             + "</MIMETruncation>"):"")
             + ((Conflict!=null)?("<Conflict>"
             + ((Conflict)?1:0)
             + "</Conflict>"):"")
             + ((Class!=null)?("<Class>"+Class.toString()
             + "</Class>"):"")
             + ((BodyPreference!=null)?(packc_BodyPreference(BodyPreference)):"")
             + ((BodyPartPreference!=null)?(packc_BodyPartPreference(BodyPartPreference)):"")
             + "</Options>";
    }
    
    public String packc_Options(
        AS_Options options_21
    ) {
        return pack_Options(
             options_21.FilterType,
             options_21.MIMESupport,
             options_21.MIMETruncation,
             options_21.Conflict,
             options_21.Class,
             options_21.BodyPreference,
             options_21.BodyPartPreference
        );
    }
    
    public String pack_BodyPartPreference(
        AS_BodyType Type,
        Integer TruncationSize,
        Boolean AllOrNone,
        Integer Preview
    ) {
        return "<BodyPartPreference xmlns=\"AirSyncBase\">"
             + "<BodyType>"+Type.toInteger()
             + "</BodyType>"
             + ((TruncationSize!=null)?("<TruncationSize>"+TruncationSize+"</TruncationSize>"):"")
             + ((AllOrNone!=null)?("<AllOrNone>"
             + ((AllOrNone)?1:0)
             + "</AllOrNone>"):"")
             + ((Preview!=null)?("<Preview>"+Preview+"</Preview>"):"")
             + "</BodyPartPreference>";
    }
    
    public String packc_BodyPartPreference(
        AS_BodyPartPreference bodypartpreference_20
    ) {
        return pack_BodyPartPreference(
             bodypartpreference_20.Type,
             bodypartpreference_20.TruncationSize,
             bodypartpreference_20.AllOrNone,
             bodypartpreference_20.Preview
        );
    }
    
    public String pack_BodyPreference(
        AS_Type Type,
        Integer TruncationSize,
        Boolean AllOrNone,
        Integer Preview
    ) {
        return "<BodyPreference xmlns=\"AirSyncBase\">"
             + "<Type>"+Type.toInteger()
             + "</Type>"
             + ((TruncationSize!=null)?("<TruncationSize>"+TruncationSize+"</TruncationSize>"):"")
             + ((AllOrNone!=null)?("<AllOrNone>"
             + ((AllOrNone)?1:0)
             + "</AllOrNone>"):"")
             + ((Preview!=null)?("<Preview>"+Preview+"</Preview>"):"")
             + "</BodyPreference>";
    }
    
    public String packc_BodyPreference(
        AS_BodyPreference bodypreference_19
    ) {
        return pack_BodyPreference(
             bodypreference_19.Type,
             bodypreference_19.TruncationSize,
             bodypreference_19.AllOrNone,
             bodypreference_19.Preview
        );
    }
    
    public String pack_BodyPart(
        AS_BodyPartStatus Status,
        AS_BodyType Type,
        Integer EstimatedDataSize,
        Boolean Truncated,
        String Data,
        String Preview
    ) {
        return "<BodyPart xmlns=\"AirSyncBase\">"
             + "<BodyPartStatus>"+Status.toInteger()
             + "</BodyPartStatus>"
             + "<BodyType>"+Type.toInteger()
             + "</BodyType>"
             + "<EstimatedDataSize>"+EstimatedDataSize+"</EstimatedDataSize>"
             + ((Truncated!=null)?("<Truncated>"
             + ((Truncated)?1:0)
             + "</Truncated>"):"")
             + ((Data!=null)?("<Data>"+Data+"</Data>"):"")
             + ((Preview!=null)?("<Preview>"+Preview+"</Preview>"):"")
             + "</BodyPart>";
    }
    
    public String packc_BodyPart(
        AS_BodyPart bodypart_18
    ) {
        return pack_BodyPart(
             bodypart_18.Status,
             bodypart_18.Type,
             bodypart_18.EstimatedDataSize,
             bodypart_18.Truncated,
             bodypart_18.Data,
             bodypart_18.Preview
        );
    }
    
    public String pack_BodyPartStatus(
        AS_BodyPartStatus BodyPartStatus
    ) {
        return ""
             + "<BodyPartStatus>"+BodyPartStatus.toInteger()
             + "</BodyPartStatus>"
             + "";
    }
    
    public String packc_BodyPartStatus(
        AS_BodyPartStatus bodypartstatus_17
    ) {
        return pack_BodyPartStatus(
        bodypartstatus_17
        );
    }
    
    public String pack_Body(
        AS_BodyType Type,
        Integer EstimatedDataSize,
        Boolean Truncated,
        String Data,
        Integer Part,
        String Preview
    ) {
        return "<Body xmlns=\"AirSyncBase\">"
             + "<BodyType>"+Type.toInteger()
             + "</BodyType>"
             + ((EstimatedDataSize!=null)?("<EstimatedDataSize>"+EstimatedDataSize+"</EstimatedDataSize>"):"")
             + "<Truncated>"
             + ((Truncated)?1:0)
             + "</Truncated>"
             + ((Data!=null)?("<Data>"+Data+"</Data>"):"")
             + ((Part!=null)?("<Part>"+Part+"</Part>"):"")
             + ((Preview!=null)?("<Preview>"+Preview+"</Preview>"):"")
             + "</Body>";
    }
    
    public String packc_Body(
        AS_Body body_16
    ) {
        return pack_Body(
             body_16.Type,
             body_16.EstimatedDataSize,
             body_16.Truncated,
             body_16.Data,
             body_16.Part,
             body_16.Preview
        );
    }
    
    public String pack_MIMETruncation(
        AS_MIMETruncation MIMETruncation
    ) {
        return ""
             + "<MIMETruncation>"+MIMETruncation.toInteger()
             + "</MIMETruncation>"
             + "";
    }
    
    public String packc_MIMETruncation(
        AS_MIMETruncation mimetruncation_15
    ) {
        return pack_MIMETruncation(
        mimetruncation_15
        );
    }
    
    public String pack_MIMESupport(
        AS_MIMESupport MIMESupport
    ) {
        return ""
             + "<MIMESupport>"+MIMESupport.toInteger()
             + "</MIMESupport>"
             + "";
    }
    
    public String packc_MIMESupport(
        AS_MIMESupport mimesupport_14
    ) {
        return pack_MIMESupport(
        mimesupport_14
        );
    }
    
    public String pack_Type(
        AS_Type Type
    ) {
        return ""
             + "<Type>"+Type.toInteger()
             + "</Type>"
             + "";
    }
    
    public String packc_Type(
        AS_Type type_13
    ) {
        return pack_Type(
        type_13
        );
    }
    
    public String pack_BodyType(
        AS_BodyType BodyType
    ) {
        return ""
             + "<BodyType>"+BodyType.toInteger()
             + "</BodyType>"
             + "";
    }
    
    public String packc_BodyType(
        AS_BodyType bodytype_12
    ) {
        return pack_BodyType(
        bodytype_12
        );
    }
    
    public String pack_filter_type(
        AS_filter_type filter_type
    ) {
        return ""
             + "<filter_type>"+filter_type.toInteger()
             + "</filter_type>"
             + "";
    }
    
    public String packc_filter_type(
        AS_filter_type filter_type_11
    ) {
        return pack_filter_type(
        filter_type_11
        );
    }
    
    public String pack_Class(
        AS_Class Class
    ) {
        return ""
             + "<Class>"+Class.toString()
             + "</Class>"
             + "";
    }
    
    public String packc_Class(
        AS_Class class_10
    ) {
        return pack_Class(
        class_10
        );
    }
    
    public String pack_SyncCommands(
        List<AS_SyncCommandsAlt> Commands
    ) {
        return "<Commands xmlns=\"AirSync\">"+pack_list(new Callable<AS_SyncCommandsAlt,String>() { public String call(AS_SyncCommandsAlt v) { return packc_SyncCommandsAlt(v); } },Commands)
             + "</Commands>";
    }
    
    public String packc_SyncCommands(
        AS_SyncCommands synccommands_9
    ) {
        return pack_SyncCommands(
             synccommands_9.Commands
        );
    }
    
    public String pack_SyncCommandsAlt(
        AS_SyncCommandsAlt SyncCommandsAlt
    ) {
        switch (SyncCommandsAlt.which) {
        case SoftDelete: return "<SoftDelete>"+packc_ServerId(SyncCommandsAlt.SoftDelete)+"</SoftDelete>";
        case Fetch: return "<Fetch>"+packc_CommandFetch(SyncCommandsAlt.Fetch)+"</Fetch>";
        case Change: return "<Change>"+packc_CommandChange(SyncCommandsAlt.Change)+"</Change>";
        case Delete: return "<Delete>"+packc_CommandDelete(SyncCommandsAlt.Delete)+"</Delete>";
        case Add: return "<Add>"+packc_CommandAdd(SyncCommandsAlt.Add)+"</Add>";
        default: return "";
        }
    }
    
    public String packc_SyncCommandsAlt(
        AS_SyncCommandsAlt synccommandsalt_8
    ) {
        return pack_SyncCommandsAlt(
        synccommandsalt_8
        );
    }
    
    public String pack_CommandChange(
        String ServerId,
        AS_EmailApplicationData ApplicationData
    ) {
        return "<Change xmlns=\"AirSync\">"
             + ((ServerId!=null)?("<ServerId>"+ServerId+"</ServerId>"):"")
             + ((ApplicationData!=null)?(packc_EmailApplicationData(ApplicationData)):"")
             + "</Change>";
    }
    
    public String packc_CommandChange(
        AS_CommandChange commandchange_7
    ) {
        return pack_CommandChange(
             commandchange_7.ServerId,
             commandchange_7.ApplicationData
        );
    }
    
    public String pack_CommandDelete(
        String ServerId
    ) {
        return "<Delete xmlns=\"AirSync\"><ServerId>"+ServerId+"</ServerId></Delete>";
    }
    
    public String packc_CommandDelete(
        AS_CommandDelete commanddelete_6
    ) {
        return pack_CommandDelete(
             commanddelete_6.ServerId
        );
    }
    
    public String pack_CommandFetch(
        String ServerId
    ) {
        return "<Fetch xmlns=\"AirSync\"><ServerId>"+ServerId+"</ServerId></Fetch>";
    }
    
    public String packc_CommandFetch(
        AS_CommandFetch commandfetch_5
    ) {
        return pack_CommandFetch(
             commandfetch_5.ServerId
        );
    }
    
    public String pack_CommandAdd(
        String ClientId,
        AS_EmailApplicationData ApplicationData,
        String Class
    ) {
        return "<Add xmlns=\"AirSync\"><ClientId>"+ClientId+"</ClientId>"
             + ((ApplicationData!=null)?(packc_EmailApplicationData(ApplicationData)):"")
             + ((Class!=null)?("<Class>"+Class+"</Class>"):"")
             + "</Add>";
    }
    
    public String packc_CommandAdd(
        AS_CommandAdd commandadd_4
    ) {
        return pack_CommandAdd(
             commandadd_4.ClientId,
             commandadd_4.ApplicationData,
             commandadd_4.Class
        );
    }
    
    public String pack_Flag(
        AS_Flag Flag
    ) {
        switch (Flag.which) {
        case SubOrdinalDate: return "<SubOrdinalDate xmlns=\"Tasks\">"+pack_string(Flag.SubOrdinalDate)+"</SubOrdinalDate>";
        case OrdinalDate: return "<OrdinalDate xmlns=\"Tasks\">"+pack_datetime(Flag.OrdinalDate)+"</OrdinalDate>";
        case ReminderTime: return "<ReminderTime xmlns=\"Tasks\">"+pack_datetime(Flag.ReminderTime)+"</ReminderTime>";
        case ReminderSet: return "<ReminderSet xmlns=\"Tasks\">"+pack_numbool(Flag.ReminderSet)+"</ReminderSet>";
        case UtcStartDate: return "<UtcStartDate xmlns=\"Tasks\">"+pack_datetime(Flag.UtcStartDate)+"</UtcStartDate>";
        case UtcDueDate: return "<UtcDueDate xmlns=\"Tasks\">"+pack_datetime(Flag.UtcDueDate)+"</UtcDueDate>";
        case DueDate: return "<DueDate xmlns=\"Tasks\">"+pack_datetime(Flag.DueDate)+"</DueDate>";
        case StartDate: return "<StartDate xmlns=\"Tasks\">"+pack_datetime(Flag.StartDate)+"</StartDate>";
        case CompleteTime: return "<CompleteTime xmlns=\"Email\">"+pack_datetime(Flag.CompleteTime)+"</CompleteTime>";
        case DateCompleted: return "<DateCompleted xmlns=\"Tasks\">"+pack_datetime(Flag.DateCompleted)+"</DateCompleted>";
        case FlagType: return "<FlagType xmlns=\"Email\">"+pack_string(Flag.FlagType)+"</FlagType>";
        case Status: return "<Status xmlns=\"Email\">"+packc_flag_status(Flag.Status)+"</Status>";
        case Subject: return "<Subject xmlns=\"Tasks\">"+pack_string(Flag.Subject)+"</Subject>";
        default: return "";
        }
    }
    
    public String packc_Flag(
        AS_Flag flag_3
    ) {
        return pack_Flag(
        flag_3
        );
    }
    
    public String pack_flag_status(
        AS_flag_status flag_status
    ) {
        return ""
             + "<Status>"+flag_status.toInteger()
             + "</Status>"
             + "";
    }
    
    public String packc_flag_status(
        AS_flag_status flag_status_2
    ) {
        return pack_flag_status(
        flag_status_2
        );
    }
    
    public String pack_ServerId(
        String ServerId
    ) {
        return "<ServerId><ServerId>"+ServerId+"</ServerId></ServerId>";
    }
    
    public String packc_ServerId(
        AS_ServerId serverid_1
    ) {
        return pack_ServerId(
             serverid_1.ServerId
        );
    }
    

}

// End of ASTypes
