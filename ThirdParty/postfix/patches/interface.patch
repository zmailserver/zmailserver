--- postfix-2.10-20121007/src/util/Makefile.in.orig	2012-10-29 13:18:16.456175562 -0700
+++ postfix-2.10-20121007/src/util/Makefile.in	2012-10-29 13:18:40.156177760 -0700
@@ -1526,6 +1526,7 @@
 myaddrinfo.o: myaddrinfo.h
 myaddrinfo.o: mymalloc.h
 myaddrinfo.o: sock_addr.h
+myaddrinfo.o: split_at.h
 myaddrinfo.o: stringops.h
 myaddrinfo.o: sys_defs.h
 myaddrinfo.o: valid_hostname.h
--- postfix-2.10-20121007/src/util/myaddrinfo.c.orig	2012-10-29 13:15:56.443682663 -0700
+++ postfix-2.10-20121007/src/util/myaddrinfo.c	2012-10-29 13:17:54.873993187 -0700
@@ -78,6 +78,7 @@
 /*	into printable form. The result buffers should be large
 /*	enough to hold the printable address or port including the
 /*	null terminator.
+/*	This function strips off the IPv6 datalink suffix.
 /*
 /*	sockaddr_to_hostname() converts a binary network address
 /*	into a hostname or service.  The result buffer should be
@@ -202,6 +203,7 @@
 #include <msg.h>
 #include <inet_proto.h>
 #include <myaddrinfo.h>
+#include <split_at.h>
 
 /* Application-specific. */
 
@@ -607,16 +609,20 @@
     }
     return (0);
 #else
+     int     ret;
 
     /*
      * Native getnameinfo(3) version.
      */
-    return (getnameinfo(sa, salen,
-			hostaddr ? hostaddr->buf : (char *) 0,
-			hostaddr ? sizeof(hostaddr->buf) : 0,
-			portnum ? portnum->buf : (char *) 0,
-			portnum ? sizeof(portnum->buf) : 0,
-			NI_NUMERICHOST | NI_NUMERICSERV));
+     ret = getnameinfo(sa, salen,
+ 		      hostaddr ? hostaddr->buf : (char *) 0,
+ 		      hostaddr ? sizeof(hostaddr->buf) : 0,
+ 		      portnum ? portnum->buf : (char *) 0,
+ 		      portnum ? sizeof(portnum->buf) : 0,
+ 		      NI_NUMERICHOST | NI_NUMERICSERV);
+     if (hostaddr != 0 && ret == 0 && sa->sa_family == AF_INET6)
+ 	(void) split_at(hostaddr->buf, '%');
+     return (ret);
 #endif
 }
 
