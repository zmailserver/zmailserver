Return-Path: <xmlbeans-dev-return-229-smith=stanford.edu@xml.apache.org>
Received: from leland3.Stanford.EDU (leland3.Stanford.EDU [171.64.14.90])
	by popserver1.Stanford.EDU (8.12.10/8.12.10) with ESMTP id h8P1bDFR028520
	for <smith@popserver1.stanford.edu>; Wed, 24 Sep 2003 18:37:13 -0700
	(PDT)
Received: from mail.apache.org (daedalus.apache.org [208.185.179.12]) by
	leland3.Stanford.EDU (8.12.10/8.12.10) with SMTP id h8P1b5d1027253 for
	<smith@stanford.edu>; Wed, 24 Sep 2003 18:37:06 -0700 (PDT)
Received: (qmail 77672 invoked by uid 500); 25 Sep 2003 01:36:56 -0000
Mailing-List: contact xmlbeans-dev-help@xml.apache.org; run by ezmlm
Precedence: bulk
X-No-Archive: yes
List-Post: <mailto:xmlbeans-dev@xml.apache.org>
List-Help: <mailto:xmlbeans-dev-help@xml.apache.org>
List-Unsubscribe: <mailto:xmlbeans-dev-unsubscribe@xml.apache.org>
List-Subscribe: <mailto:xmlbeans-dev-subscribe@xml.apache.org>
Reply-To: xmlbeans-dev@xml.apache.org
Delivered-To: mailing list xmlbeans-dev@xml.apache.org
Received: (qmail 77659 invoked from network); 25 Sep 2003 01:36:56 -0000
X-MimeOLE: Produced By Microsoft Exchange V6.0.6375.0
content-class: urn:content-classes:message
MIME-Version: 1.0
Content-Type: text/plain; charset="iso-8859-1"
Content-Transfer-Encoding: quoted-printable
Subject: RE: code to contribute: JAM
Date: Wed, 24 Sep 2003 18:37:04 -0700
X-Zimbra-Received: Wed, 24 Sep 2003 18:37:04 -0700
Message-ID: <4B2B4C417991364996F035E1EE39E2E1085062@uskiex01.amer.bea.com>
X-MS-Has-Attach: 
X-MS-TNEF-Correlator: 
Thread-Topic: code to contribute: JAM
Thread-Index: AcOC+2AOFwxO9dlkSN6FwZMkTBYCCAACSDKQ
From: "Dr. David Remy" <dremy@bea.com>
To: <xmlbeans-dev@xml.apache.org>
X-OriginalArrivalTime: 25 Sep 2003 01:37:04.0950 (UTC)
	FILETIME=[86675560:01C38305]
X-Spam-Rating: daedalus.apache.org 1.6.2 0/1000/N
X-Evolution-Source: imap://smith@smith.pobox.stanford.edu/
X-Evolution: 0000005e-0010

I think this code could be valuable to v2.  Perhaps it should be checked in=
to the v2 directory, or a sandbox directory, so that we can look at the cod=
e, and see how it would work in an xmlbeans v2 java -> xml scenario?  If th=
at makes sense, David, would you be the one to work with Patrick to do this=
?

-----Original Message-----
From: Patrick Calahan [mailto:pcal@bea.com]
Sent: Wednesday, September 24, 2003 5:24 PM
To: xmlbeans-dev@xml.apache.org
Subject: code to contribute: JAM


Hello all.  I have written a package I would like to contribute to xbeans v=
2.  It is an abstraction layer for Java types and their associated metadta =
that I believe will be critical in xbeans' compilation phase.  Just as you =
need a SOM to represent the schema types you are binding to and from, you u=
se JAM to model the Java types you are binding to and from.

Here is a blurb from the package.html docs that provides a little
more detail:

The Java Abstraction Model (JAM) provides a representation of
Java abstractions (such as classes and methods) and their=20
associated metadata.  This model serves to decouple its clients' code=20
from any specific introspection mechanism such as javadoc or reflection.

This approach has several advantages:

  A unified API for viewing Java types
    Java types can be described in java sources, in class files,
  or even synthesized from scratch.  JAM provides a single API which
  allows your code to remain decoupled from tool such as reflection
  and javadoc.

  Clean and consistent access to metadata
    Metadata is a hot topic at the moment, and the way we deal with it
  is going to change dramatically over the next year or two.
  By writing to the JAM API, you can be sure that you won't
  have to rewrite your code to accommodate emerging tools and=20
  standards (JSR175, for example).

  Pluggable metadata stores
    Metadata can be retrieved from an external source (such as an XML file)=
=20
  or even generated programmatically.  This also allows metadata to=20
  be associated with Java constructs that may not normally support=20
  annotations (such as packages).

  A Node-based view of Java constructs
    JAM clients have the option of viewing their java constructs as a tree=20
  of generic, DOM-like nodes (packages contain classes, classes contain=20
  methods) each of which may have associated annotations.  This is=20
  extremely helpful for tools which wish to support annotation
  inheritance.


-p=20

- ---------------------------------------------------------------------
To unsubscribe, e-mail:   xmlbeans-dev-unsubscribe@xml.apache.org
For additional commands, e-mail: xmlbeans-dev-help@xml.apache.org
Apache XMLBeans Project -- URL: http://xml.apache.org/xmlbeans/

